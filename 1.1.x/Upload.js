(self.webpackChunkEthanDoc=self.webpackChunkEthanDoc||[]).push([[806],{63020:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return d}});var r=n(67154),a=n.n(r),t=n(24698),o=n.n(t),r=n(54365),t=n.n(r),r=n(82281),l=n.n(r),r=n(70954),i=(0,r.default)("# Upload\r\n\r\n<example />\r\n\r\n## API\r\n\r\n### Upload\r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| accept | string | - | 上传文件类型, 和标准一致, 详见[accept](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept) |\r\n| action | string\\|(file:File)=>string | - | 上传地址 |\r\n| children | ReactNode | 必填 | 上传占位内容 |\r\n| beforeUpload | (file:File)=>EthanFile | - | 上传前处理 |\r\n| className | string | - | 扩展className |\r\n| defaultValue | EthanFile[] | - | 默认值 |\r\n| headers | object | - | 请求头部信息 |\r\n| limit | number | 100 | 最大上传文件数 |\r\n| disabled | boolean | false | 是否禁用上传行为 | \r\n| name | string | - | 服务端接收的 filename |\r\n| request | (options: RequestOptions) => void | - | 自定义上传方法<br /> options: 上传的配置 |\r\n| onChange | (values: EthanFile[],EthanFile) => void | - | 值改变回调 |\r\n| params | object | - | 提交到服务端的额外参数 |\r\n| recoverAble | boolean | false | 是否可以恢复已删除的value |\r\n| validator | UploadValidator | - | 上传前文件校验 |\r\n| value | EthanFile[] | \\[] | defaultValue 和 value 可以同时设置，defaultValue 会被value覆盖<br />在Form中，value会被表单接管，value无效 |\r\n| withCredentials | boolean | false | 是否携带 cookie |\r\n| multiple | boolean | false | 是否支持多选文件 |\r\n| renderContent | (file:EthanFile) => ReactNode | - | 自定义File的内容 |\r\n| drop | boolean | false | 是否开启拖拽上传文件 |\r\n| showUploadList | boolean | true | 是否展示上传列表 |\r\n\r\n\r\n### Upload.Image\r\n\r\n**Upload.Image在Upload的Props上添加下面的Props**\r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| width | number | 80 | 图片宽度 |\r\n| height | number | 80 | 图片高度 |\r\n| validator | UploadImageValidator | - | 上传前文件校验 |\r\n\r\n### Upload.Button\r\n\r\n**Upload.Button在Upload的Props上添加下面的Props,但不支持多选**\r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| type | 'primary' \\| success' \\| 'info' \\| 'warning' \\| 'danger' | primary | 按钮类型 |\r\n| placeholder | ReactNode | - | 按钮默认内容 |\r\n| loading | ReactNode | - | 上传中按钮的内容，如果是字符串默认会有spin loading |\r\n\r\n\r\n### RequestOptions \r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| file |  File | - |  传入的文件 |\r\n| name | string | - | 服务端接收的 filename |\r\n| url | string | - | 请求的地址 |\r\n| onError | (xhr: XMLHttpRequest) => void | -| 上传出错事件 |\r\n| onProgress |  (e: ProgressEvent) => void | - | 上传进度事件 |\r\n| onLoad | (xhr: XMLHttpRequest)=> void | - | 上传成功事件 |\r\n| params | object | - | 上传的额外参数 |\r\n| headers | object | - | 请求的头部信息 |\r\n| withCredentials | boolean | false | 是否携带 cookie |\r\n\r\n\r\n### UploadValidator\r\n\r\n| 属性 | 类型 | 说明 |\r\n| --- | --- | --- |\r\n| ext | (ext: string) => Error \\| void | 判断后缀名，传入参数为文件后缀，校验失败返回 Error |\r\n| size | (size: number) => Error \\| void | 判断文件大小，校验失败返回 Error |\r\n| customValidator | (file: File) => Error \\| void | 自定义校验 |\r\n\r\n\r\n### UploadImageValidator\r\n\r\n**UploadImageValidator在UploadValidator上增加以下的属性**\r\n\r\n| 属性 | 类型 | 说明 |\r\n| --- | --- | --- |\r\n| imageSize | (image: HTMLImageElement) => Error \\| void | 只对 Image 有效，判断图片尺寸，校验失败返回 Error |\r\n\r\n### EthanFile\r\n\r\n| 属性 | 类型 | 说明 |\r\n| --- | --- | --- |\r\n| id | React.Key | 唯一Key |\r\n| name | string | 文件名 |\r\n| process | number | 上传进度 |\r\n| status | 'UPLOADING' \\| 'SUCCESS' \\| 'ERROR' \\| 'REMOVED' \\| 'MANUAL' \\| 'PENDING' | 文件的状态 |\r\n| blob | File | 选中的文件 |\r\n| message | string | 文件携带的信息 |\r\n| xhr | XMLHttpRequest | - |\r\n| data | string | 文件的额外信息，在Upload.Image中为图片的src |\r\n\r\n","# Upload\r\n\r\n<example />\r\n\r\n## API\r\n\r\n### Upload\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| accept | string | - | The type of the upload file, same as the standard,See details [accept](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept)  |\r\n| action | string\\|(file:File)=>string | - | The address for uploading |\r\n| children | ReactNode | required | Upload placeholder |\r\n| beforeUpload | (file:File)=>EthanFile | - | Before upload handler |\r\n| className | string | - | Extend className |\r\n| defaultValue | EthanFile[] | -  | default value |\r\n| headers | object | - | Request headers |\r\n| limit | number | 100 | Maximum number of uploaded files |\r\n| disabled | boolean | false | disabled upload action | \r\n| name | string | - | The key access data in the Form  |\r\n| request | (options: RequestOptions) => void | - | Custom upload method<br /> options: the options of upload |\r\n| onChange | (values: EthanFile[],EthanFile) => void | - | The callback function when the value is changing |\r\n| params | object | - | Additional parameters submitted to the server |\r\n| recoverAble | boolean | true | Whether to recover deleted values. |\r\n| validator | UploadValidator | - | Check file before uploading |\r\n| value | EthanFile[] | \\[] | value |\r\n| withCredentials | boolean | false | Whether to take the cookie |\r\n| multiple | boolean | false | Whether multi-select files are supported |\r\n| renderContent | (file:EthanFile) => ReactNode | - | Custom content  | \r\n| drop | boolean | false | drop to update |\r\n| showUploadList | boolean | true | show upload list |\r\n\r\n### Upload.Image\r\n\r\n**Upload.Image Add the following Props to the Props of the Upload.**\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| width | number | 80 | image width |\r\n| height | number | 80 | image height |\r\n| validator | UploadImageValidator | - | Check file before uploading |\r\n\r\n### Upload.Button\r\n\r\n**Upload.Button Adds the following Props to the uploads, but multiple options are not supported.**\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| type | string | primary | options: \\['primary', success', 'info', 'warning', 'danger'\\] |\r\n| placeholder | ReactNode | - | button default content |\r\n| loading | ReactNode | - | content of uploading, will have spin if a string |\r\n\r\n\r\n### RequestOptions \r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| file |  File | - |  The file |\r\n| name | string | - | Filename received by the server |\r\n| url | string | - | Requested address |\r\n| onError | (xhr: XMLHttpRequest) => void | -| Upload error event |\r\n| onProgress |  (e: ProgressEvent) => void | - | Upload Progress event |\r\n| onLoad | (xhr: XMLHttpRequest)=> void | - | Uploading successful event |\r\n| params | object | - | Additional parameters for upload |\r\n| headers | object | - | Request header information |\r\n| withCredentials | boolean | false | Whether to take the cookie |\r\n\r\n### UploadValidator\r\n\r\n| Property | Type | Description |\r\n| --- | --- | --- |\r\n| ext | (ext: string) => Error \\| void | Check the suffix name. The parameter passed in is the file suffix. Error is returned if the verification fails |\r\n| size | (size: number) => Error \\| void | Check the file size. An Error message is returned if the verification fails |\r\n| customValidator | (file: File) => Error \\| void | Custom check |\r\n\r\n\r\n### UploadImageValidator\r\n\r\n**UploadImageValidator Adds the following attributes to UploadValidator**\r\n\r\n| Property | Type | Description |\r\n| --- | --- | --- |\r\n| imageSize | (image: HTMLImageElement) => Error \\| void | This parameter is valid only for Image. If the Image size is judged, Error is returned if the verification fails |\r\n\r\n### EthanFile\r\n\r\n| Property | Type | Description |\r\n| --- | --- | --- |\r\n| id | React.Key | Key |\r\n| name | string | File name |\r\n| process | number | Upload progress |\r\n| status | 'UPLOADING' \\| 'SUCCESS' \\| 'ERROR' \\| 'REMOVED' \\| 'MANUAL' \\| 'PENDING' | File status |\r\n| blob | File | Selected file |\r\n| message | string | The information carried by the file |\r\n| xhr | XMLHttpRequest | - |\r\n| data | string | Additional information for the file, in upload. Image, is the SRC of the Image |\r\n"),u=[{name:"01-basex",title:(0,r.default)("基本用法 \n 基础的文件上传","Base \n Basic usage for uploading file."),component:n(99004).default,rawText:n(5598).Z},{name:"01-renderContentx",title:(0,r.default)("自定义内容 \n 默认展示的结果为File的name, 如果有需求需要, 可以用 renderContent 自行处理","Custom content \n The result of the default display is the name of file. If there is a need, you can use the renderContent to handle it yourself."),component:n(96698).default,rawText:n(95713).Z},{name:"02-imagex",title:(0,r.default)("上传图片 \n 使用 Upload.Image 处理带预览的图片上传","Image \n Use Upload.Image to upload and preview images."),component:n(51527).default,rawText:n(2328).Z},{name:"03-buttonx",title:(0,r.default)("按钮上传 \n 使用 Upload.Button 展示单个文件的上传进度","Button \n Use Upload.Button to show the upload progress of individual files"),component:n(81186).default,rawText:n(61950).Z},{name:"04-validatorx",title:(0,r.default)("校验 \n 通过 validator 校验文件","Validator \n Set validator to validate the file."),component:n(90560).default,rawText:n(4881).Z},{name:"05-controlx",title:(0,r.default)("受控 \n 传入value使Upload受控","Control \n Pass value props control Upload fileList"),component:n(60933).default,rawText:n(14611).Z},{name:"06-errorx",title:(0,r.default)("异常处理 \n onError 用来处理上传到服务器返回的异常","Error \n Set onError to handle exceptions returned by uploading to the server."),component:n(53196).default,rawText:n(24910).Z},{name:"07-recoverx",title:(0,r.default)("恢复删除 \n 设置 recoverAble 为 true，点击删除后，文件会标记为已删除，可以通过恢复图标恢复","Recover \n Set recoverAble to true, Clicking delete icon will not remove the file, but will mark it as deleted."),component:n(89679).default,rawText:n(53970).Z},{name:"08-requestx",title:(0,r.default)("自定义上传 \n 通过 request 函数，替代默认上传方法","Custom Request \n Set request property to use your own XMLHttpRequest."),component:n(1094).default,rawText:n(17082).Z},{name:"09-zipx",title:(0,r.default)(" \n 此事例演示通过自定义函数压缩文件后上传"," \n Zip file and upload."),component:n(37018).default,rawText:n(8832).Z},{name:"10-beforeUploadx",title:(0,r.default)("手动上传 \n beforeUpload返回一个Promise对象，resolve一个status为MANUAL的EthanFile","Manually upload \n BeforeUpload return a Promise Object and resolve an EthanFile with MANUAL status"),component:n(5983).default,rawText:n(32983).Z},{name:"11-beforeUploadx",title:(0,r.default)("处理文件 \n 利用beforeUpload预先处理文件，例如添加水印","Process File \n BeforeUpload return a Promise Object and resolve an EthanFile with MANUAL status"),component:n(76465).default,rawText:n(50816).Z},{name:"12-draggerx",title:(0,r.default)("拖拽上传 \n 设置 drop 来支持拖拽上传","Drag and Drop \n set drop to Drag files to upload."),component:n(32435).default,rawText:n(51316).Z}],d=t()(function(e){return o().createElement(l(),a()({},e,{source:i,examples:u}))})},5598:function(e,t){"use strict";t.Z="/**\r\n * cn - 基本用法\r\n *    -- 基础的文件上传\r\n * en - Base\r\n *    -- Basic usage for uploading file.\r\n\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nexport default () => (\r\n    <Upload\r\n        action={action}\r\n        accept=\"image/*\"\r\n        name=\"file\"\r\n        onChange={v => {\r\n            console.log(v)\r\n        }}\r\n        limit={3}\r\n        style={{ width: 300 }}\r\n    >\r\n        <Button>\r\n            <FontAwesome name=\"cloud-upload \" style={{ marginRight: 4 }} />\r\n            Upload file\r\n        </Button>\r\n    </Upload>\r\n)\r\n"},95713:function(e,t){"use strict";t.Z='/**\r\n * cn - 自定义内容\r\n *    -- 默认展示的结果为File的name, 如果有需求需要, 可以用 renderContent 自行处理\r\n * en - Custom content\r\n *    -- The result of the default display is the name of file. If there is a need, you can use the renderContent to handle it yourself.\r\n\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Button, FontAwesome, Message } from \'ethan-ui\'\r\nimport { action } from \'doc/config\'\r\n\r\nexport default function() {\r\n    return (\r\n        <>\r\n            <Upload\r\n                action={action}\r\n                accept="image/*"\r\n                name="file"\r\n                renderContent={f => <span style={{ fontSize: \'16px\' }}>{f.name}</span>}\r\n                limit={3}\r\n                style={{ width: 300, marginBottom: 30 }}\r\n            >\r\n                <Button>\r\n                    <FontAwesome name="cloud-upload " style={{ marginRight: 4 }} />\r\n                    Upload file\r\n                </Button>\r\n            </Upload>\r\n\r\n            <Upload.Image\r\n                action="/upload/"\r\n                accept="image/*"\r\n                name="file"\r\n                limit={3}\r\n                renderContent={file => {\r\n                    return (\r\n                        <div onClick={() => Message.info(\'i am click\')}>\r\n                            <img width="100%" src={file.data} alt="not found" />\r\n                        </div>\r\n                    )\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}\r\n'},2328:function(e,t){"use strict";t.Z="/**\r\n * cn - 上传图片\r\n *    -- 使用 Upload.Image 处理带预览的图片上传\r\n * en - Image\r\n *    -- Use Upload.Image to upload and preview images.\r\n */\r\nimport React from 'react'\r\nimport { Upload } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nexport default function() {\r\n    return <Upload.Image drop action={action} accept=\"image/*\" name=\"file\" limit={3} width={300} height={300} />\r\n}\r\n"},61950:function(e,t){"use strict";t.Z='/**\r\n * cn - 按钮上传\r\n *    -- 使用 Upload.Button 展示单个文件的上传进度\r\n * en - Button\r\n *    -- Use Upload.Button to show the upload progress of individual files\r\n */\r\nimport React from \'react\'\r\nimport { Upload } from \'ethan-ui\'\r\nimport { action } from \'doc/config\'\r\n\r\nexport default function() {\r\n    return <Upload.Button action={action} name="file" loading="正在上传..." placeholder="点击上传" type="primary" />\r\n}\r\n'},4881:function(e,t){"use strict";t.Z="/**\r\n * cn - 校验\r\n *    -- 通过 validator 校验文件\r\n * en - Validator\r\n *    -- Set validator to validate the file.\r\n */\r\nimport React from 'react'\r\nimport { Upload, FontAwesome, Button } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Upload\r\n                action={action}\r\n                accept=\"image/*\"\r\n                multiple\r\n                name=\"file\"\r\n                style={{ width: 300, marginBottom: 80 }}\r\n                validator={{\r\n                    size: s => (s > 10240 ? new Error('max file size is 10KB') : undefined),\r\n                }}\r\n            >\r\n                <Button>\r\n                    <FontAwesome name=\"cloud-upload\" /> Upload file\r\n                </Button>\r\n            </Upload>\r\n\r\n            <Upload.Image\r\n                action=\"/upload/\"\r\n                accept=\"image/*\"\r\n                name=\"file\"\r\n                width={200}\r\n                height={100}\r\n                limit={1}\r\n                style={{ width: 300, marginBottom: 80 }}\r\n                validator={{\r\n                    imageSize: img =>\r\n                        img.width !== 200 || img.height !== 100 ? new Error('only allow 200px * 100px') : undefined,\r\n                    ext: ext =>\r\n                        ['jpg', 'png'].includes(ext) ? undefined : new Error('File extension must be jpg or png'),\r\n                }}\r\n            >\r\n                <div style={{ margin: 'auto', color: '#999', textAlign: 'center' }}>\r\n                    <FontAwesome name=\"cloud-upload \" /> Upload Image\r\n                    <br />\r\n                    Allow size 200 * 100\r\n                </div>\r\n            </Upload.Image>\r\n\r\n            <Upload.Image\r\n                action=\"//jsonplaceholder.typicode.com/posts\"\r\n                accept=\"image/*\"\r\n                multiple\r\n                name=\"file\"\r\n                validator={{\r\n                    size: s => (s > 10240 ? new Error('max file size is 10KB') : undefined),\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},14611:function(e,t){"use strict";t.Z="/**\r\n * cn - 受控\r\n *    -- 传入value使Upload受控\r\n * en - Control\r\n *    -- Pass value props control Upload fileList\r\n\r\n */\r\nimport React, { useState } from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nexport default () => {\r\n    const [fileList, updateFileList] = useState([])\r\n\r\n    return (\r\n        <Upload\r\n            action={action}\r\n            accept=\"image/*\"\r\n            name=\"file\"\r\n            value={fileList}\r\n            onChange={v => {\r\n                console.log(v)\r\n\r\n                updateFileList(v)\r\n            }}\r\n            limit={3}\r\n            style={{ width: 300 }}\r\n        >\r\n            <Button>\r\n                <FontAwesome name=\"cloud-upload \" style={{ marginRight: 4 }} />\r\n                Upload file\r\n            </Button>\r\n        </Upload>\r\n    )\r\n}\r\n"},24910:function(e,t){"use strict";t.Z="/**\r\n * cn - 异常处理\r\n *    -- onError 用来处理上传到服务器返回的异常\r\n * en - Error\r\n *    -- Set onError to handle exceptions returned by uploading to the server.\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan-ui'\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Upload\r\n                action=\"/path-no-exist\"\r\n                accept=\"image/*\"\r\n                onError={xhr => {\r\n                    if (xhr.status === 404) return 'Url not found.'\r\n                    return 'Upload Fail.'\r\n                }}\r\n                limit={3}\r\n                style={{ width: 300, marginBottom: 30 }}\r\n            >\r\n                <Button>\r\n                    <FontAwesome name=\"cloud-upload\" /> Upload file\r\n                </Button>\r\n            </Upload>\r\n\r\n            <Upload.Image\r\n                action=\"/path-no-exist\"\r\n                accept=\"image/*\"\r\n                onError={xhr => {\r\n                    if (xhr.status === 404) return 'Url not found.'\r\n                    return 'Upload Fail.'\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},53970:function(e,t){"use strict";t.Z='/**\r\n * cn - 恢复删除\r\n *    -- 设置 recoverAble 为 true，点击删除后，文件会标记为已删除，可以通过恢复图标恢复\r\n * en - Recover\r\n *    -- Set recoverAble to true, Clicking delete icon will not remove the file, but will mark it as deleted.\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Button, FontAwesome } from \'ethan-ui\'\r\nimport { action } from \'doc/config\'\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Upload\r\n                action={action}\r\n                accept="image/*"\r\n                name="file"\r\n                multiple\r\n                limit={2}\r\n                recoverAble\r\n                style={{ width: 300, marginBottom: 30 }}\r\n            >\r\n                <Button>\r\n                    <FontAwesome name="cloud-upload" /> Upload file\r\n                </Button>\r\n            </Upload>\r\n\r\n            <Upload.Image action="/upload/" accept="image/*" multiple limit={1} recoverAble name="file" />\r\n        </div>\r\n    )\r\n}\r\n'},17082:function(e,t){"use strict";t.Z="/**\r\n * cn - 自定义上传\r\n *    -- 通过 request 函数，替代默认上传方法\r\n * en - Custom Request\r\n *    -- Set request property to use your own XMLHttpRequest.\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nconst request = options => {\r\n    const { file, onLoad, onProgress } = options\r\n    const xhr = new XMLHttpRequest()\r\n    xhr.open('post', action)\r\n\r\n    const data = new FormData()\r\n    data.append('file', file)\r\n    xhr.upload.onprogress = onProgress\r\n    xhr.onload = () => onLoad(xhr)\r\n    xhr.send(data)\r\n\r\n    return xhr\r\n}\r\n\r\nexport default function() {\r\n    return (\r\n        <Upload accept=\"image/*\" limit={3} style={{ width: 300 }} request={request}>\r\n            <Button>\r\n                <FontAwesome name=\"cloud-upload\" /> Upload file\r\n            </Button>\r\n        </Upload>\r\n    )\r\n}\r\n"},8832:function(e,t){"use strict";t.Z="/**\r\n * cn -\r\n *    -- 此事例演示通过自定义函数压缩文件后上传\r\n * en -\r\n *    -- Zip file and upload.\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome, Message } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nconst request = options => {\r\n    const { file, onLoad, onError, onProgress } = options\r\n\r\n    const xhr = new XMLHttpRequest()\r\n    xhr.open('post', action)\r\n\r\n    const zip = new window.JSZip()\r\n\r\n    zip.file(file.name, file)\r\n\r\n    const id = new Date().getTime()\r\n\r\n    zip.generateInternalStream({ type: 'blob' })\r\n        .accumulate(e => {\r\n            Message.loading(`current zipping:${Math.floor(e.percent * 100)}%`, 0, { id })\r\n        })\r\n        .then(content => {\r\n            const zipFile = new File([content], `${file.name}.zip`)\r\n\r\n            const data = new FormData()\r\n\r\n            data.append('file', zipFile)\r\n\r\n            xhr.upload.onprogress = e => {\r\n                onProgress(e)\r\n\r\n                Message.loading(`current uploading:${Math.floor((e.loaded / e.total) * 100)}%`, 0, { id })\r\n            }\r\n\r\n            xhr.onload = e => {\r\n                onLoad(e.currentTarget)\r\n\r\n                Message.success('upload success', 2, { id })\r\n            }\r\n\r\n            xhr.onerror = () => {\r\n                onError()\r\n\r\n                Message.error('update fail', 2, { id })\r\n            }\r\n            xhr.send(data)\r\n        })\r\n\r\n    return xhr\r\n}\r\n\r\nexport default function() {\r\n    return (\r\n        <Upload limit={3} style={{ width: 300 }} request={request} onChange={console.log}>\r\n            <Button>\r\n                <FontAwesome name=\"cloud-upload\" /> Upload file\r\n            </Button>\r\n        </Upload>\r\n    )\r\n}\r\n"},32983:function(e,t){"use strict";t.Z="/**\r\n * cn - 手动上传\r\n *    -- beforeUpload返回一个Promise对象，resolve一个status为MANUAL的EthanFile\r\n * en - Manually upload\r\n *    -- BeforeUpload return a Promise Object and resolve an EthanFile with MANUAL status\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan-ui'\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Upload\r\n                name=\"file\"\r\n                limit={3}\r\n                style={{ width: 300 }}\r\n                beforeUpload={() => Promise.resolve({ status: 'MANUAL' })}\r\n                onChange={console.log}\r\n            >\r\n                <Button>\r\n                    <FontAwesome name=\"cloud-upload \" style={{ marginRight: 4 }} />\r\n                    Upload file\r\n                </Button>\r\n            </Upload>\r\n        </div>\r\n    )\r\n}\r\n"},50816:function(e,t){"use strict";t.Z="/**\r\n * cn - 处理文件\r\n *    -- 利用beforeUpload预先处理文件，例如添加水印\r\n * en - Process File\r\n *    -- BeforeUpload return a Promise Object and resolve an EthanFile with MANUAL status\r\n */\r\nimport React from 'react'\r\nimport { Upload } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Upload.Image\r\n                action={action}\r\n                name=\"file\"\r\n                limit={3}\r\n                style={{ width: 300 }}\r\n                beforeUpload={file => {\r\n                    return new Promise(resolve => {\r\n                        const reader = new FileReader()\r\n\r\n                        reader.readAsDataURL(file)\r\n\r\n                        reader.onload = () => {\r\n                            const img = document.createElement('img')\r\n\r\n                            img.src = reader.result as string\r\n\r\n                            img.onload = () => {\r\n                                const canvas = document.createElement('canvas')\r\n\r\n                                canvas.width = img.naturalWidth\r\n                                canvas.height = img.naturalHeight\r\n\r\n                                const ctx = canvas.getContext('2d')\r\n\r\n                                ctx.drawImage(img, 0, 0)\r\n                                ctx.fillStyle = 'red'\r\n                                ctx.textBaseline = 'middle'\r\n                                ctx.font = '33px Arial'\r\n                                ctx.fillText('Ethan', 20, 20)\r\n                                canvas.toBlob((blob: File) => {\r\n                                    /** @see https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLCanvasElement/toDataURL */\r\n                                    const data = canvas.toDataURL('image/jpeg', 1)\r\n\r\n                                    resolve({ blob, data })\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},51316:function(e,t){"use strict";t.Z="/**\r\n * cn - 拖拽上传\r\n *    -- 设置 drop 来支持拖拽上传\r\n * en - Drag and Drop\r\n *    -- set drop to Drag files to upload.\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Upload.Image action={action} accept=\"image/*\" name=\"file\" limit={3} width={250} drop>\r\n                <div style={{ textAlign: 'center', width: '100%', padding: 20 }}>\r\n                    <FontAwesome style={{ color: '#409dfd', fontSize: 20 }} name=\"image\" />\r\n                    <br />\r\n                    Click or Drag image to upload\r\n                </div>\r\n            </Upload.Image>\r\n            <br />\r\n            <Upload action={action} multiple name=\"file\" limit={3} style={{ width: 300 }} drop>\r\n                <Button>\r\n                    <FontAwesome name=\"file\" />\r\n                    &nbsp; Drop file to upload\r\n                </Button>\r\n            </Upload>\r\n        </div>\r\n    )\r\n}\r\n"},95510:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=o(n(24698)),u=l(n(94184)),d=l(n(15660));n(62356);var c=n(36910);t.default=function(e){var t=e.language,t=void 0===t?"lang-jsx":t,n=e.onHighLight,e=e.value,r=(0,i.useRef)(null);return(0,i.useEffect)(function(){var e=r.current;d.default.highlightElement(e,!1,function(){n&&n(e.offsetHeight)})},[]),i.default.createElement("pre",{ref:r,className:(0,u.default)(t||"lang-jsx",(0,c.exampleClass)("pre"))},i.default.createElement("code",null,e))}},84241:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},d=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),l=[];try{for(;(void 0===t||0<t--)&&!(r=o.next()).done;)l.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return l},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=o(n(24698)),s=n(12101),f=l(n(21588)),m=n(36910),p=l(n(20164)),h=l(n(95510));t.default=c.default.memo(function(e){var t=e.component,n=e.id,r=e.rawText,a=void 0===r?"":r,o=e.title,l=d((0,c.useState)(!1),2),i=l[0],u=l[1],r=(0,c.useRef)((0,c.createElement)(t)).current,e=a.replace(/(^|\n|\r)\s*\/\*[\s\S]*?\*\/\s*(?:\r|\n|$)/,"").trim(),l=d(o.split("\n")),t=l[0],a=l.slice(1),l=function(){u(!i)};return c.default.createElement(c.default.Fragment,null,t&&c.default.createElement("h3",{id:n},t),c.default.createElement(s.Lazyload,{placeholder:c.default.createElement("div",{className:(0,m.exampleClass)("placeholder")},c.default.createElement(s.Spin,{size:"54px",name:"four-dots",color:"#53a0fd"}))},c.default.createElement("div",{className:(0,m.exampleClass)("_",i&&"showcode")},c.default.createElement("div",{className:(0,m.exampleClass)("body")},r),0<o.length&&c.default.createElement("div",{className:(0,m.exampleClass)("desc")},a.map(function(e,t){return c.default.createElement("div",{key:t,dangerouslySetInnerHTML:{__html:e}})}),c.default.createElement("a",{className:(0,m.exampleClass)("toggle"),onClick:l},c.default.createElement(f.default,{name:i?"code-close":"code"}))),c.default.createElement(p.default,{height:i?"auto":0,easing:"linear",className:(0,m.exampleClass)("code"),duration:240},c.default.createElement(h.default,{value:e}),c.default.createElement("a",{className:(0,m.exampleClass)("toggle"),onClick:l},c.default.createElement(f.default,{name:i?"code-close":"code"}))))))})},82281:function(e,t,n){"use strict";var o=this&&this.__assign||function(){return(o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},l=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),l=[];try{for(;(void 0===t||0<t--)&&!(r=o.next()).done;)l.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return l},i=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,a=0,o=t.length;a<o;a++)!r&&a in t||((r=r||Array.prototype.slice.call(t,0,a))[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=r(n(24698)),d=r(n(30724)),c=n(69087),a=n(17911),s=n(36910),f=r(n(70954)),m=r(n(95510)),p=r(n(84241)),h=r(n(86212)),g=/^<example name="([\w|-]+)"/,v=function(e,t){return 4===e?(0,a.getUidStr)():"".concat(e,"-").concat((t||"").replace(/[\W|-]/g,"-"))};t.default=u.default.memo(function(e){var t=e.onHeadingSet,r=e.examples,e=e.source,n=u.default.useRef([]).current;function a(e){n.push(e)}return u.default.useEffect(function(){null!=t&&t(n)},[]),u.default.createElement(d.default,{className:(0,s.markdownClass)("_"),source:e,renderers:{code:m.default,heading:function(e){var t=e.level,n=e.children,r="h".concat(t),e="heading-".concat(v(t,n[0]));return 2!==t&&3!==t||a({id:e,level:t,children:n}),u.default.createElement(r,{id:e},n)},html:function(e){if("<example />"===e.value)return function(){if(!r)return u.default.createElement("div",null);var e=(0,f.default)("示例","Example"),t="heading-example-h";return a({id:t,level:2,children:[e]}),i([u.default.createElement("h2",{key:"h",id:t},e)],l(r.map(function(e,t){if(/\d+-/.test(e.name)){var n="heading-".concat(e.name),r=l(e.title.split("\n"),1)[0];return a({id:n,level:3,children:[r]}),u.default.createElement(p.default,o({key:t,id:n},e))}})),!1)}();var t,n=e.value.match(g);return n?(t=n[1],(n=(r||[]).find(function(e){return e.name===t}))?u.default.createElement(p.default,o({},n)):null):"<br>"===e.value||"<br />"===e.value?u.default.createElement("br",null):null},table:h.default,link:function(e){var t=0===e.href.indexOf("http")?"_blank":void 0;return t?u.default.createElement("a",{href:e.href,target:t},e.children):u.default.createElement(c.Link,{to:e.href,target:t},e.children)}}})})},54365:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},i=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),l=[];try{for(;(void 0===t||0<t--)&&!(r=o.next()).done;)l.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return l},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=o(n(24698)),d=n(12101),c=n(64744),s=n(36910),f=l(n(98789));t.default=function(l){return u.default.memo(function(e){var t=e.noNav,e=i((0,u.useState)(""),2),r=e[0],a=e[1],e=i((0,u.useState)([]),2),o=e[0],e=e[1],n=(0,c.useLocation)().hash;(0,u.useEffect)(function(){function e(){var n,r=document.documentElement.scrollTop,e=o.filter(function(e){return 3===e.level&&e.children.length});0!==e.length&&(n=e[0].id,e.forEach(function(e){var t=document.querySelector("#".concat(e.id));(null==t?void 0:t.offsetTop)<=r&&(n=e.id)}),a(n))}var t;return e(),n&&(t=document.querySelector(n),setTimeout(function(){null!=t&&t.scrollIntoView()},20)),document.addEventListener("scroll",e),function(){document.removeEventListener("scroll",e)}},[o]);return u.default.createElement("div",{className:(0,s.navClass)("_")},u.default.createElement(l,{onHeadingSet:e}),!t&&u.default.createElement(d.Sticky,{className:(0,s.navClass)("sticky"),top:50},u.default.createElement("div",{className:(0,s.navClass)("nav")},o.map(function(e,t){var n=e.children.filter(function(e){return"string"==typeof e});return u.default.createElement("a",{key:t,className:(0,s.navClass)("level-".concat(e.level),r===e.id&&"active"),onClick:function(e){0===f.default.location.search.indexOf("?example=")?f.default.push("".concat(f.default.location.pathname,"?example=").concat(e.replace("heading-",""))):(f.default.push("".concat(f.default.location.pathname,"#").concat(e)),null!=(e=document.getElementById(e))&&e.scrollIntoView())}.bind(null,e.id)},n)}))))})}},86212:function(e,t,n){"use strict";var r=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),l=[];try{for(;(void 0===t||0<t--)&&!(r=o.next()).done;)l.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return l},a=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,a=0,o=t.length;a<o;a++)!r&&a in t||((r=r||Array.prototype.slice.call(t,0,a))[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=o(n(24698));t.default=function(e){var e=e.children,t=a([],r(e[1].props.children),!1);try{t.sort(function(e,t){return e.props.children[0].props.children[0].localeCompare(t.props.children[0].props.children[0])})}catch(e){console.log("sort fail...")}return l.default.createElement("div",{style:{overflow:"auto"}},l.default.createElement("table",{className:"doc-api-table"},e[0],l.default.cloneElement(e[1],{children:t})))}},73243:function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.action=void 0,t.action="//jsonplaceholder.typicode.com/posts"},99004:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),o=n(12101),l=n(73243);t.default=function(){return a.default.createElement(o.Upload,{action:l.action,accept:"image/*",name:"file",onChange:function(e){console.log(e)},limit:3,style:{width:300}},a.default.createElement(o.Button,null,a.default.createElement(o.FontAwesome,{name:"cloud-upload ",style:{marginRight:4}}),"Upload file"))}},96698:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),o=n(12101),l=n(73243);t.default=function(){return a.default.createElement(a.default.Fragment,null,a.default.createElement(o.Upload,{action:l.action,accept:"image/*",name:"file",renderContent:function(e){return a.default.createElement("span",{style:{fontSize:"16px"}},e.name)},limit:3,style:{width:300,marginBottom:30}},a.default.createElement(o.Button,null,a.default.createElement(o.FontAwesome,{name:"cloud-upload ",style:{marginRight:4}}),"Upload file")),a.default.createElement(o.Upload.Image,{action:"/upload/",accept:"image/*",name:"file",limit:3,renderContent:function(e){return a.default.createElement("div",{onClick:function(){return o.Message.info("i am click")}},a.default.createElement("img",{width:"100%",src:e.data,alt:"not found"}))}}))}},51527:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),o=n(12101),l=n(73243);t.default=function(){return a.default.createElement(o.Upload.Image,{drop:!0,action:l.action,accept:"image/*",name:"file",limit:3,width:300,height:300})}},81186:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),o=n(12101),l=n(73243);t.default=function(){return a.default.createElement(o.Upload.Button,{action:l.action,name:"file",loading:"正在上传...",placeholder:"点击上传",type:"primary"})}},90560:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),o=n(12101),l=n(73243);t.default=function(){return a.default.createElement("div",null,a.default.createElement(o.Upload,{action:l.action,accept:"image/*",multiple:!0,name:"file",style:{width:300,marginBottom:80},validator:{size:function(e){return 10240<e?new Error("max file size is 10KB"):void 0}}},a.default.createElement(o.Button,null,a.default.createElement(o.FontAwesome,{name:"cloud-upload"})," Upload file")),a.default.createElement(o.Upload.Image,{action:"/upload/",accept:"image/*",name:"file",width:200,height:100,limit:1,style:{width:300,marginBottom:80},validator:{imageSize:function(e){return 200!==e.width||100!==e.height?new Error("only allow 200px * 100px"):void 0},ext:function(e){return["jpg","png"].includes(e)?void 0:new Error("File extension must be jpg or png")}}},a.default.createElement("div",{style:{margin:"auto",color:"#999",textAlign:"center"}},a.default.createElement(o.FontAwesome,{name:"cloud-upload "})," Upload Image",a.default.createElement("br",null),"Allow size 200 * 100")),a.default.createElement(o.Upload.Image,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",multiple:!0,name:"file",validator:{size:function(e){return 10240<e?new Error("max file size is 10KB"):void 0}}}))}},60933:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},l=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),l=[];try{for(;(void 0===t||0<t--)&&!(r=o.next()).done;)l.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return l};Object.defineProperty(t,"__esModule",{value:!0});var i=o(n(24698)),u=n(12101),d=n(73243);t.default=function(){var e=l((0,i.useState)([]),2),t=e[0],n=e[1];return i.default.createElement(u.Upload,{action:d.action,accept:"image/*",name:"file",value:t,onChange:function(e){console.log(e),n(e)},limit:3,style:{width:300}},i.default.createElement(u.Button,null,i.default.createElement(u.FontAwesome,{name:"cloud-upload ",style:{marginRight:4}}),"Upload file"))}},53196:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),o=n(12101);t.default=function(){return a.default.createElement("div",null,a.default.createElement(o.Upload,{action:"/path-no-exist",accept:"image/*",onError:function(e){return 404===e.status?"Url not found.":"Upload Fail."},limit:3,style:{width:300,marginBottom:30}},a.default.createElement(o.Button,null,a.default.createElement(o.FontAwesome,{name:"cloud-upload"})," Upload file")),a.default.createElement(o.Upload.Image,{action:"/path-no-exist",accept:"image/*",onError:function(e){return 404===e.status?"Url not found.":"Upload Fail."}}))}},89679:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),o=n(12101),l=n(73243);t.default=function(){return a.default.createElement("div",null,a.default.createElement(o.Upload,{action:l.action,accept:"image/*",name:"file",multiple:!0,limit:2,recoverAble:!0,style:{width:300,marginBottom:30}},a.default.createElement(o.Button,null,a.default.createElement(o.FontAwesome,{name:"cloud-upload"})," Upload file")),a.default.createElement(o.Upload.Image,{action:"/upload/",accept:"image/*",multiple:!0,limit:1,recoverAble:!0,name:"file"}))}},1094:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),o=n(12101),l=n(73243),i=function(e){var t=e.file,n=e.onLoad,r=e.onProgress,a=new XMLHttpRequest;a.open("post",l.action);e=new FormData;return e.append("file",t),a.upload.onprogress=r,a.onload=function(){return n(a)},a.send(e),a};t.default=function(){return a.default.createElement(o.Upload,{accept:"image/*",limit:3,style:{width:300},request:i},a.default.createElement(o.Button,null,a.default.createElement(o.FontAwesome,{name:"cloud-upload"})," Upload file"))}},37018:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),u=n(12101),d=n(73243),o=function(e){var n=e.file,r=e.onLoad,a=e.onError,o=e.onProgress,l=new XMLHttpRequest;l.open("post",d.action);e=new window.JSZip;e.file(n.name,n);var i=(new Date).getTime();return e.generateInternalStream({type:"blob"}).accumulate(function(e){u.Message.loading("current zipping:".concat(Math.floor(100*e.percent),"%"),0,{id:i})}).then(function(e){var t=new File([e],"".concat(n.name,".zip")),e=new FormData;e.append("file",t),l.upload.onprogress=function(e){o(e),u.Message.loading("current uploading:".concat(Math.floor(e.loaded/e.total*100),"%"),0,{id:i})},l.onload=function(e){r(e.currentTarget),u.Message.success("upload success",2,{id:i})},l.onerror=function(){a(),u.Message.error("update fail",2,{id:i})},l.send(e)}),l};t.default=function(){return a.default.createElement(u.Upload,{limit:3,style:{width:300},request:o,onChange:console.log},a.default.createElement(u.Button,null,a.default.createElement(u.FontAwesome,{name:"cloud-upload"})," Upload file"))}},5983:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),o=n(12101);t.default=function(){return a.default.createElement("div",null,a.default.createElement(o.Upload,{name:"file",limit:3,style:{width:300},beforeUpload:function(){return Promise.resolve({status:"MANUAL"})},onChange:console.log},a.default.createElement(o.Button,null,a.default.createElement(o.FontAwesome,{name:"cloud-upload ",style:{marginRight:4}}),"Upload file")))}},76465:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),o=n(12101),l=n(73243);t.default=function(){return a.default.createElement("div",null,a.default.createElement(o.Upload.Image,{action:l.action,name:"file",limit:3,style:{width:300},beforeUpload:function(t){return new Promise(function(r){var e=new FileReader;e.readAsDataURL(t),e.onload=function(){var t=document.createElement("img");t.src=e.result,t.onload=function(){var n=document.createElement("canvas");n.width=t.naturalWidth,n.height=t.naturalHeight;var e=n.getContext("2d");e.drawImage(t,0,0),e.fillStyle="red",e.textBaseline="middle",e.font="33px Arial",e.fillText("Ethan",20,20),n.toBlob(function(e){var t=n.toDataURL("image/jpeg",1);r({blob:e,data:t})})}}})}}))}},32435:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(24698)),o=n(12101),l=n(73243);t.default=function(){return a.default.createElement("div",null,a.default.createElement(o.Upload.Image,{action:l.action,accept:"image/*",name:"file",limit:3,width:250,drop:!0},a.default.createElement("div",{style:{textAlign:"center",width:"100%",padding:20}},a.default.createElement(o.FontAwesome,{style:{color:"#409dfd",fontSize:20},name:"image"}),a.default.createElement("br",null),"Click or Drag image to upload")),a.default.createElement("br",null),a.default.createElement(o.Upload,{action:l.action,multiple:!0,name:"file",limit:3,style:{width:300},drop:!0},a.default.createElement(o.Button,null,a.default.createElement(o.FontAwesome,{name:"file"}),"  Drop file to upload")))}}}]);