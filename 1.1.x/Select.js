(self.webpackChunkEthanDoc=self.webpackChunkEthanDoc||[]).push([[179],{84063:function(e,n,a){"use strict";a.r(n),a.d(n,{default:function(){return d}});var r=a(67154),t=a.n(r),n=a(24698),i=a.n(n),r=a(54365),n=a.n(r),r=a(82281),l=a.n(r),r=a(70954),o=(0,r.default)("# Select _选择框_\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| 属性                | 类型                                              | 默认值                      | 说明                                                                                                                                                                                          |\r\n| ------------------- | ------------------------------------------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| width               | number                                            | -                           | 宽度                                                                                                                                                                                          |\r\n| style               | object                                            | -                           | 扩展外层 style                                                                                                                                                                                |\r\n| absolute            | boolean                                           | false                       | 为 true 时，选项弹出层在 DOM 中独立 render                                                                                                                                                    |\r\n| autoAdapt           | boolean                                           | false                       | 下拉列表宽度根据内容自由展开                                                                                                                                                                  |\r\n| clearable           | boolean                                           | false                       | 是否可清除值                                                                                                                                                                                  |\r\n| multiple            | boolean                                           | false                       | 是否是多选                                                                                                                                                                                    |\r\n| columns             | number                                            | 1                           | columns 大于 1 时，选项展示为多列布局模式                                                                                                                                                     |\r\n| columnWidth         | number                                            | 160                         | column 单列宽度，仅在 columns 大于 1 时有效                                                                                                                                                   |\r\n| data                | any[]                                             | 必填                        | 数据项，单条数据作为 value 的数据必须是唯一的                                                                                                                                                 |\r\n| defaultValue        | any[]                                             |                             | 初始值                                                                                                                                                                                        |\r\n| disabled            | (data: any) => boolean \\| boolean                 | false                       | 如果 disabled 为 true，禁用全部选项，如果 disabled 为函数，根据函数反回结果禁用选项                                                                                                           |\r\n| format              | (data: any) => any \\| string                      | d => d                      | 格式化 value<br />默认值，返回原始数据<br />为 string 时，会作为 key 从原始数据中获取值，相当于 (d) => d\\[format\\]<br /> 为函数时，以函数返回结果作为 value                                   |\r\n| keygen              | ((data: any) => string) \\| string \\| true         | 必填                        | 生成每一项 key 的辅助方法<br />为 true 时，以数据项本身作为 key，相当于 (d => d)<br />为函数时，使用此函数返回值<br />为 string 时，使用这个 string 对应的数据值。如 'id'，相当于 (d => d.id) |\r\n| onChange            | (value: any, data: any, checked: boolean) => void | -                           | value 为 datum.getValue()                                                                                                                                                                     |\r\n| onCreate            | (input: string) => any \\| boolean                 | -                           | 如果设置了 onCreate 事件，组件为可输入状态<br />onCreate 为函数时，将此函数返回值作为新的选项拆入最上方<br />onCreate 为 true 时，使用默认函数 text => text                                   |\r\n| onFilter            | (text: string,data:any) => boolean                | -                           | 过滤数据函数                                                                                                                                                                                  |\r\n| prediction          | (value: any, data: any) => boolean                | (val, d) => val===format(d) | 默认使用 format 函数执行的结果来比较是否匹配，在某些情况下（例如返回原始数据的对象，更新数据时，生成了一个值相同，非同一个对象的选项），需要借助 prediction 函数来判断是否匹配                |\r\n| renderItem          | (data: any) => ReactNode \\| string                | 必填                        | 为 string 时，返回 d\\[string]<br />为 function 时，返回函数结果                                                                                                                               |\r\n| renderResult        | (data: any) => ReactNode \\| string                | renderItem                  | 选中后在结果中显示的内容，默认和 renderItem 相同                                                                                                                                              |\r\n| value               | any[] \\| string \\| object                         |                             | 在 Form 中，value 会被表单接管，value 无效                                                                                                                                                    |\r\n| compressed          | boolean                                           | false                       | 将选中值合并，只在多选模式下有效                                                                                                                                                              |\r\n| groupBy             | (record: any, index: number, data: any) => any    | -                           | 分组                                                                                                                                                                                          |\r\n| showArrow           | boolean                                           | true                        | 是否显示下拉箭头，仅针对单选情况                                                                                                                                                              |\r\n| cacheAble           | boolean                                           | true                        | 是否开启数据缓存，如果数据存在动态更新的情况建议开启                                                                                                                                          |\r\n| compressedClassName | string                                            | -                           | 多选合并展示弹出框的类名                                                                                                                                                                      |\r\n| onCollapse          | (collapse: boolean) => void                       | -                           | 下拉列表展开/收起回调                                                                                                                                                                         |\r\n| resultClassName     | ((value: any) => string) \\| string                | -                           | 选中结果内容容器的 className                                                                                                                                                                  |\r\n| customRender        | object                                            | -                           | 自定义渲染 header 和 footer                                                                                                                                                                   |\r\n","# Select\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| Property            | Type                                              | Default                     | Description                                                                                                                                                                                                                                                                                               |\r\n| ------------------- | ------------------------------------------------- | --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| width               | number                                            | null                        | width                                                                                                                                                                                                                                                                                                     |\r\n| style               | object                                            | null                        | expand style                                                                                                                                                                                                                                                                                              |\r\n| absolute            | boolean                                           | false                       | When it is true, the pop-up layer of option append into document.body.                                                                                                                                                                                                                                    |\r\n| autoAdapt           | boolean                                           | false                       | option list is auto adapt                                                                                                                                                                                                                                                                                 |\r\n| clearable           | boolean                                           | false                       | If clearable is true, show clear value icon                                                                                                                                                                                                                                                               |\r\n| multiple            | boolean                                           | false                       | if it is true, it will be multiple selection                                                                                                                                                                                                                                                              |\r\n| columns             | number                                            | 1                           | Option columns.                                                                                                                                                                                                                                                                                           |\r\n| columnWidth         | number                                            | 160                         | Option column width, only effective when columns > 1                                                                                                                                                                                                                                                      |\r\n| data                | any[]                                             | required                    | Options data                                                                                                                                                                                                                                                                                              |\r\n| defaultValue        | any[]                                             |                             | Initial value                                                                                                                                                                                                                                                                                             |\r\n| disabled            | (data: any) => boolean \\| boolean                 | false                       | When the value is true, disabled all checkboxes; When the value is function, disable the checkbox that this function returns true.                                                                                                                                                                        |\r\n| format              | (data: any) => any \\| string                      | d => d                      | Format value<br />The defaule value is return the original data.<br />When it is a string, the value is fetched from the original data as a key equivalent to (d) => d\\[format\\]<br />When it is a function, use its return value.                                                                        |\r\n| keygen              | ((data: any) => string) \\| string \\| true         | index                       | Generate a auxiliary method for each key<br />If not filled, index will be used(not recommended,there may be problems with more than 10 data)<br />When it is a function, use its return value.<br />When it is a string，ues the value of the string.For example, 'id' is the same thing as (d) => d.id. |\r\n| onChange            | (value: any, data: any, checked: boolean) => void | -                           | value is the datum.getValue().                                                                                                                                                                                                                                                                            |\r\n| onCreate            | (input: string) => any \\| boolean                 | -                           | If the onCreate event is set, the component is inputable.                                                                                                                                                                                                                                                 |\r\n| onFilter            | (text: string,data:any) => boolean                | -                           | When the onFilter is not empty, you can filter data by input.                                                                                                                                                                                                                                             |\r\n| prediction          | (value: any, data: any) => boolean                | (val, d) => val===format(d) | By default, the result of the format function is used to compare whether it matches. In some cases (for example, whe an object that returns the original data is updated, an different option with the same value is generated), the prediction function needs to be used to determine whether match      |\r\n| renderItem          | (data: any) => ReactNode \\| string                | required                    | When it is a string, return d\\[string]<br />When it is a function, return the result of the function.                                                                                                                                                                                                     |\r\n| renderResult        | (data: any) => ReactNode \\| string                | renderItem                  | The content displayed in the result after selecting, if not set, use renderItem                                                                                                                                                                                                                           |\r\n| value               | any[] \\| string \\| object                         |                             | In the Form, the value will be taken over by the form and the value will be invalid.                                                                                                                                                                                                                      |\r\n| compressed          | boolean                                           | false                       | Merges selected values, valid only in multiselect mode                                                                                                                                                                                                                                                    |\r\n| groupBy             | (record: any, index: number, data: any) => any    | -                           | group by                                                                                                                                                                                                                                                                                                  |\r\n| cacheAble           | boolean                                           | false                       | data cache, if data change asynchronously, better set true                                                                                                                                                                                                                                                |\r\n| compressedClassName | string                                            | none                        | compressed popover classname                                                                                                                                                                                                                                                                              |\r\n| onCollapse          | (collapse: boolean) => void                       | none                        | option list collapse callback                                                                                                                                                                                                                                                                             |\r\n| resultClassName     | ((value: any) => string) \\| string                | none                        | The className of the selected result content container                                                                                                                                                                                                                                                    |\r\n| customRender        | object                                            | -                           | Custom render header and footer                                                                                                                                                                                                                                                                           |\r\n"),u=[{name:"01-basex",title:(0,r.default)("基本用法 \n Select 没有单独的 Option 选项，通过数据来渲染。","Base \n Select generate group of options from data."),component:a(41481).default,rawText:a(84577).Z},{name:"01-cadaptx",title:(0,r.default)(" \n 当文字过长时，下拉列表宽度根据内容自由展开"," \n options auto adapt width"),component:a(41061).default,rawText:a(25864).Z},{name:"01-multiplex",title:(0,r.default)("多选 \n multiple 属性为true时，为多选状态，默认为单选","Multiple \n Set the multiple property to true, it is multi-selection."),component:a(56541).default,rawText:a(38721).Z},{name:"01-o-compressedx",title:(0,r.default)(" \n 设置 compressed 使选中值合并展示，鼠标悬浮时将会展示所有值。"," \n Set the compressed property to compress values, hover to show all values."),component:a(3439).default,rawText:a(81820).Z},{name:"02-formatx",title:(0,r.default)("数据处理 \n 设置 format 选项把数据对象格式化为指定的 value","Datum \n Set format property to format the data object to the specified value."),component:a(24398).default,rawText:a(82362).Z},{name:"02-groupx",title:(0,r.default)("分组 \n 可以通过 groupBy 去将数据分组 \n 组件会通过该函数的返回值对内容进行分组, 如果返回的是空, 则默认不分组, 为了防止产生歧义, 建议有一个默认分组.","GroupBy \n Grouping data by groupBy. \n The component will group the content by the return value of the function. If the return is empty, the default is not grouped. To prevent ambiguity, it is recommended to have a default grouping."),component:a(67406).default,rawText:a(69890).Z},{name:"04-clearablex",title:(0,r.default)("可清空 \n clearable 属性为 true 时，hover 后会显示清空图标。","Clearable \n Set the clearable property to true, the clear icon will be displayed on hover."),component:a(96681).default,rawText:a(88647).Z},{name:"04-sizex",title:(0,r.default)("大小 \n 有三种 size，['small', default, 'large']","Size \n There are three sizes, ['small', default, 'large']"),component:a(26913).default,rawText:a(78103).Z},{name:"06-bigdatax",title:(0,r.default)("性能 \n Select 内部用懒加载机制来优化性能，本例加载了10000条数据。","Performance \n Select uses a lazy loading to optimize performance. This example loads 10,000 pieces of data."),component:a(90474).default,rawText:a(27424).Z},{name:"07-disabledx",title:(0,r.default)("禁用 \n 设置 disabled 禁用组件","Disabled \n Set the disabled property to disable the component."),component:a(69599).default,rawText:a(32372).Z},{name:"08-filterx",title:(0,r.default)("筛选数据 \n onFilter 返回函数时，使用这个函数做过滤","Filter \n When the onFilter property returns a function, use this function to do filtering."),component:a(789).default,rawText:a(72763).Z},{name:"11-createx",title:(0,r.default)("创建选项 \n 设置 onCreate 属性可以通过输入创建选项","Create by input \n Set the onCreate property can create options by inputting."),component:a(31420).default,rawText:a(78205).Z},{name:"12-createx",title:(0,r.default)(" \n 示例：创建选项和 filter 配合使用"," \n Example: Create options with filter"),component:a(26736).default,rawText:a(89943).Z},{name:"13-absolutex",title:(0,r.default)("绝对定位 \n 如果选项弹出层的父容器被遮挡，可以设置 absolute 属性使弹出选项在单独层中渲染。（非必要情况下不建议）","Absolute \n If the parent container of the pop-up layer is occluded, you can set the absolute property to make the pop-up options rendered in a separate layer. (not recommended if not necessary)"),component:a(18252).default,rawText:a(76781).Z},{name:"14-columns-defaultx",title:(0,r.default)("多列选项 \n 设置 columns 属性，选项变为多列展示，设置 columnWidth 指定每一列宽度","Columns \n Set columns property over 1, options will display in multiple columns."),component:a(62971).default,rawText:a(43129).Z},{name:"14-columns-stackx",title:(0,r.default)(" \n columns 为 -1 时选项会堆叠展示， columnWidth 为选项框的宽度"," \n Set columns -1, options will display end by end， columnsWidth is the width of the option box"),component:a(16182).default,rawText:a(26457).Z},{name:"17-resultx",title:(0,r.default)("自定义结果 \n 使用 renderResult 去自定义选中的结果。","result \n use renderRsult. to format the result"),component:a(78987).default,rawText:a(60396).Z}],d=n()(function(e){return i().createElement(l(),t()({},e,{source:o,examples:u}))})},84577:function(e,n){"use strict";n.Z="/**\r\n * cn - 基本用法\r\n *    -- Select 没有单独的 Option 选项，通过数据来渲染。\r\n * en - Base\r\n *    -- Select generate group of options from data.\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n    const [value, updateValue] = React.useState('red')\r\n\r\n    return (\r\n        <Select\r\n            keygen\r\n            style={{ width: 240 }}\r\n            data={data}\r\n            value={value}\r\n            onChange={(c: string, v, b) => {\r\n                updateValue(c)\r\n                console.log(c, v, b)\r\n            }}\r\n        />\r\n    )\r\n}\r\n"},25864:function(e,n){"use strict";n.Z="/**\r\n * cn -\r\n *    -- 当文字过长时，下拉列表宽度根据内容自由展开\r\n * en -\r\n *    --  options auto adapt width\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst data = ['red', 'orange', 'this option is so long long long long long', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n    return <Select keygen autoAdapt style={{ width: 240 }} data={data} defaultValue=\"\" />\r\n}\r\n"},38721:function(e,n){"use strict";n.Z="/**\r\n * cn - 多选\r\n *    -- multiple 属性为true时，为多选状态，默认为单选\r\n * en - Multiple\r\n *    -- Set the multiple property to true, it is multi-selection.\r\n */\r\nimport React, { useState } from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\ninterface Value {\r\n    id: string\r\n}\r\n\r\nconst data: Value[] = [\r\n    { id: 'red' },\r\n    { id: 'orange' },\r\n    { id: 'yellow' },\r\n    { id: 'green' },\r\n    { id: 'cyan' },\r\n    { id: 'blue' },\r\n    { id: 'violet' },\r\n]\r\n\r\nexport default () => {\r\n    const [value, updateValue] = useState<string[]>(['blue'])\r\n\r\n    return (\r\n        <Select<Value, string>\r\n            style={{ width: 300, marginBottom: 15 }}\r\n            data={data}\r\n            keygen=\"id\"\r\n            multiple\r\n            placeholder=\"Multiple select\"\r\n            onChange={updateValue}\r\n            value={value}\r\n            renderItem=\"id\"\r\n            format=\"id\"\r\n            disabled={({ id }) => {\r\n                return id === 'blue'\r\n            }}\r\n        />\r\n    )\r\n}\r\n"},81820:function(e,n){"use strict";n.Z="/**\r\n * cn -\r\n *    -- 设置 compressed 使选中值合并展示，鼠标悬浮时将会展示所有值。\r\n * en -\r\n *    -- Set the compressed property to compress values, hover to show all values.\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst data = [\r\n    { id: 'red' },\r\n    { id: 'orange' },\r\n    { id: 'yellow' },\r\n    { id: 'green' },\r\n    { id: 'cyan' },\r\n    { id: 'blue' },\r\n    { id: 'violet' },\r\n]\r\n\r\nexport default function() {\r\n    return (\r\n        <Select\r\n            compressed\r\n            style={{ width: 300 }}\r\n            data={data}\r\n            keygen=\"id\"\r\n            multiple\r\n            placeholder=\"Multiple select Compressed\"\r\n            renderItem=\"id\"\r\n            format=\"id\"\r\n        />\r\n    )\r\n}\r\n"},82362:function(e,n){"use strict";n.Z="/**\r\n * cn - 数据处理\r\n *    -- 设置 format 选项把数据对象格式化为指定的 value\r\n * en - Datum\r\n *    -- Set format property to format the data object to the specified value.\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst citys = [\r\n    { id: 1, city: 'Osaka-Kobe-Kyoto' },\r\n    { id: 2, city: 'Dhaka' },\r\n    { id: 3, city: 'Pune' },\r\n    { id: 4, city: 'Buenos Aires' },\r\n    { id: 5, city: 'Nanjing' },\r\n    { id: 6, city: 'Accra' },\r\n    { id: 7, city: 'Chongqing' },\r\n    { id: 8, city: 'Dongguan' },\r\n    { id: 9, city: 'Bandung' },\r\n    { id: 10, city: 'Bogota' },\r\n]\r\nconst style = { width: 240, marginBottom: 12, display: 'block' }\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Select\r\n                data={citys}\r\n                format=\"id\"\r\n                keygen=\"id\"\r\n                defaultValue={3}\r\n                prediction={(v, d) => v === d.id}\r\n                style={style}\r\n                placeholder=\"Select a city\"\r\n                renderItem=\"city\"\r\n            />\r\n\r\n            <Select\r\n                data={citys}\r\n                multiple\r\n                keygen=\"id\"\r\n                defaultValue={[3, 4]}\r\n                format=\"id\"\r\n                placeholder=\"Select citys\"\r\n                renderItem=\"city\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},69890:function(e,n){"use strict";n.Z="/**\r\n * cn - 分组\r\n *    -- 可以通过 groupBy 去将数据分组\r\n *    -- 组件会通过该函数的返回值对内容进行分组, 如果返回的是空, 则默认不分组, 为了防止产生歧义, 建议有一个默认分组.\r\n * en - GroupBy\r\n *    -- Grouping data by groupBy.\r\n *    -- The component will group the content by the return value of the function. If the return is empty, the default is not grouped. To prevent ambiguity, it is recommended to have a default grouping.\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst data = [\r\n    { value: 'Beijing', tag: '1' },\r\n    { value: 'China', tag: '2' },\r\n    { value: 'Shanghai', tag: '1' },\r\n    { value: 'Mars', tag: '3' },\r\n]\r\n\r\nexport default function() {\r\n    return (\r\n        <Select\r\n            groupBy={d => {\r\n                if (d.tag === '1') return 'City'\r\n                if (d.tag === '2') return 'Country'\r\n                return 'Other'\r\n            }}\r\n            keygen=\"value\"\r\n            style={{ width: 240 }}\r\n            data={data}\r\n            renderItem=\"value\"\r\n        />\r\n    )\r\n}\r\n"},88647:function(e,n){"use strict";n.Z="/**\r\n * cn - 可清空\r\n *    -- clearable 属性为 true 时，hover 后会显示清空图标。\r\n * en - Clearable\r\n *    -- Set the clearable property to true, the clear icon will be displayed on hover.\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Select style={{ width: 240, marginBottom: 12 }} clearable keygen data={data} placeholder=\"Select color\" />\r\n            <br />\r\n            <Select\r\n                style={{ width: 300 }}\r\n                data={data}\r\n                clearable\r\n                keygen\r\n                multiple\r\n                placeholder=\"Multiple select\"\r\n                resultClassName={value => {\r\n                    console.log('resultClassName value: ', value)\r\n                    return `result-class-name-${value}`\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},78103:function(e,n){"use strict";n.Z="/**\r\n * cn - 大小\r\n *    -- 有三种 size，['small', default, 'large']\r\n * en - Size\r\n *    -- There are three sizes, ['small', default, 'large']\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n    const props = { data, keygen: true, style: { width: 100, marginRight: 12 } }\r\n\r\n    return (\r\n        <div>\r\n            <Select {...props} size=\"small\" placeholder=\"small\" />\r\n            <Select {...props} placeholder=\"default\" />\r\n            <Select {...props} size=\"large\" placeholder=\"large\" />\r\n        </div>\r\n    )\r\n}\r\n"},27424:function(e,n){"use strict";n.Z="/**\r\n * cn - 性能\r\n *    -- Select 内部用懒加载机制来优化性能，本例加载了10000条数据。\r\n * en - Performance\r\n *    -- Select uses a lazy loading to optimize performance. This example loads 10,000 pieces of data.\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\nimport { fetchSync as fetchUser } from 'doc/data/user'\r\n\r\nconst users = fetchUser(10000)\r\nconst style = { width: 240, marginBottom: 12, display: 'block' }\r\n\r\nexport default function() {\r\n    return (\r\n        <Select\r\n            data={users}\r\n            keygen=\"id\"\r\n            format=\"id\"\r\n            defaultValue={3}\r\n            style={style}\r\n            placeholder=\"Select a user\"\r\n            renderItem={(user, i) => `${user.firstName} ${user.lastName} (${i + 1})`}\r\n            renderResult={user => `${user.firstName} ${user.lastName}`}\r\n        />\r\n    )\r\n}\r\n"},32372:function(e,n){"use strict";n.Z="/**\r\n * cn - 禁用\r\n *    -- 设置 disabled 禁用组件\r\n * en - Disabled\r\n *    -- Set the disabled property to disable the component.\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Select style={{ width: 240, marginBottom: 12 }} disabled keygen data={data} placeholder=\"Select color\" />\r\n            <br />\r\n            <Select\r\n                style={{ width: 300 }}\r\n                data={data}\r\n                disabled={d => d === 'green'}\r\n                keygen\r\n                multiple\r\n                defaultValue={['orange', 'green']}\r\n                placeholder=\"Multiple select\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},72763:function(e,n){"use strict";n.Z="/**\r\n * cn - 筛选数据\r\n *    -- onFilter 返回函数时，使用这个函数做过滤\r\n * en - Filter\r\n *    -- When the onFilter property returns a function, use this function to do filtering.\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Select\r\n                style={{ width: 240, marginBottom: 12 }}\r\n                data={data}\r\n                keygen\r\n                placeholder=\"Select color\"\r\n                onFilter={(text, d) => d.indexOf(text) >= 0}\r\n            />\r\n\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n"},78205:function(e,n){"use strict";n.Z="/**\r\n * cn - 创建选项\r\n *    -- 设置 onCreate 属性可以通过输入创建选项\r\n * en - Create by input\r\n *    -- Set the onCreate property can create options by inputting.\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Select\r\n                style={{ width: 240, marginBottom: 12 }}\r\n                data={data}\r\n                keygen\r\n                placeholder=\"input color\"\r\n                onCreate\r\n                defaultValue=\"brown\"\r\n            />\r\n            <br />\r\n            <Select style={{ width: 400 }} data={data} keygen multiple placeholder=\"input color\" onCreate={t => t} />\r\n        </div>\r\n    )\r\n}\r\n"},89943:function(e,n){"use strict";n.Z="/**\r\n * cn -\r\n *    -- 示例：创建选项和 filter 配合使用\r\n * en -\r\n *    -- Example: Create options with filter\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Select\r\n                style={{ width: 240, marginBottom: 12 }}\r\n                data={data}\r\n                placeholder=\"input label\"\r\n                keygen\r\n                onCreate\r\n                onFilter={(text, d) => d.indexOf(text) >= 0}\r\n            />\r\n            <br />\r\n            <Select\r\n                style={{ width: 360, marginBottom: 12 }}\r\n                data={data}\r\n                placeholder=\"input label\"\r\n                keygen\r\n                onCreate\r\n                multiple\r\n                onFilter={(text, d) => d.indexOf(text) >= 0}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},76781:function(e,n){"use strict";n.Z="/**\r\n * cn - 绝对定位\r\n *    -- 如果选项弹出层的父容器被遮挡，可以设置 absolute 属性使弹出选项在单独层中渲染。（非必要情况下不建议）\r\n * en - Absolute\r\n *    -- If the parent container of the pop-up layer is occluded, you can set the absolute property to make the pop-up options rendered in a separate layer. (not recommended if not necessary)\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\nimport { fetchSync as fetchUser } from 'doc/data/user'\r\n\r\nconst users = fetchUser(10000)\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n    return (\r\n        <div style={{ padding: 10, height: 100, overflow: 'hidden' }}>\r\n            <Select\r\n                absolute\r\n                data={data}\r\n                keygen\r\n                style={{ width: 100, marginRight: 12 }}\r\n                onFilter={(text, d) => d.indexOf(text) > -1}\r\n                placeholder=\"default\"\r\n            />\r\n\r\n            <Select\r\n                multiple\r\n                data={users}\r\n                keygen=\"id\"\r\n                absolute\r\n                style={{ width: 300 }}\r\n                placeholder=\"Select user\"\r\n                onFilter={(text, d) => d.firstName.indexOf(text) > -1}\r\n                format=\"id\"\r\n                renderItem={user => `${user.firstName} ${user.lastName}`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},43129:function(e,n){"use strict";n.Z='/**\r\n * cn - 多列选项\r\n *    -- 设置 columns 属性，选项变为多列展示，设置 columnWidth 指定每一列宽度\r\n * en - Columns\r\n *    -- Set columns property over 1, options will display in multiple columns.\r\n */\r\nimport React from \'react\'\r\nimport { Select } from \'ethan-ui\'\r\nimport { fetchSync as fetchCity } from \'doc/data/city\'\r\n\r\nconst citys = fetchCity(200)\r\nconst style = { width: 300, marginBottom: 12, display: \'block\' }\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <Select\r\n                data={citys}\r\n                format="id"\r\n                keygen="id"\r\n                columns={3}\r\n                prediction={(v, d) => v === d.id}\r\n                style={style}\r\n                placeholder="Select a city"\r\n                renderItem="city"\r\n            />\r\n\r\n            <Select\r\n                data={citys}\r\n                format="id"\r\n                keygen="id"\r\n                columns={4}\r\n                columnWidth={180}\r\n                multiple\r\n                prediction={(v, d) => v === d.id}\r\n                style={style}\r\n                placeholder="Select citys"\r\n                renderItem="city"\r\n                onFilter={(text, d) => d.city.toLowerCase().indexOf(text.toLowerCase()) >= 0}\r\n                absolute\r\n            />\r\n        </div>\r\n    )\r\n}\r\n'},26457:function(e,n){"use strict";n.Z='/**\r\n * cn -\r\n *    -- columns 为 -1 时选项会堆叠展示， columnWidth 为选项框的宽度\r\n * en -\r\n *    -- Set columns -1, options will display end by end， columnsWidth is the width of the option box\r\n */\r\nimport React from \'react\'\r\nimport { Select } from \'ethan-ui\'\r\nimport { fetchSync as fetchCity } from \'doc/data/city\'\r\n\r\nconst citys = fetchCity(200)\r\n\r\nexport default function() {\r\n    return (\r\n        <Select\r\n            data={citys}\r\n            format="id"\r\n            keygen="id"\r\n            columns={-1}\r\n            columnWidth={500}\r\n            multiple\r\n            prediction={(v, d) => v === d.id}\r\n            placeholder="Select citys"\r\n            renderItem="city"\r\n            onFilter={(text, d) => d.city.toLowerCase().indexOf(text.toLowerCase()) >= 0}\r\n            absolute\r\n        />\r\n    )\r\n}\r\n'},60396:function(e,n){"use strict";n.Z="/**\r\n * cn - 自定义结果\r\n *    --  使用 renderResult 去自定义选中的结果。\r\n * en -  result\r\n *    --  use renderRsult. to format the result\r\n */\r\nimport React from 'react'\r\nimport { Select } from 'ethan-ui'\r\n\r\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']\r\n\r\nexport default function() {\r\n    return <Select keygen renderResult={c => `I love ${c}`} style={{ width: 240 }} data={data} defaultValue=\"\" />\r\n}\r\n"},12095:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.fCitys=n.fetchSync=void 0;var t=a(96222),a=r(a(12611)),i=(0,t.shuffle)(a.default).map(function(e,n){return{id:n+1,city:e}});function l(e,n){return void 0===e&&(e=100),void 0===n&&(n=0),i.slice(n,n+e)}n.fetchSync=l,n.fCitys=l(10)},60886:function(e,n,a){"use strict";var t=this&&this.__assign||function(){return(t=Object.assign||function(e){for(var n,a=1,r=arguments.length;a<r;a++)for(var t in n=arguments[a])Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e}).apply(this,arguments)},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.fetch=n.fetchSync=n.all=void 0;var o=r(a(18172)),u=a(96222),i=r(a(69878)),l=r(a(86913)),d=r(a(22590)),s=r(a(59770)),c=r(a(12611)),m=1e4,h=[];!function(){for(var e=(0,u.pick)(s.default,20),n=(0,u.pick)(c.default,30),a=(0,u.pick)(c.default,5),r=1;r<=m;r++)h.push({id:r,firstName:(0,u.one)(i.default),lastName:(0,u.one)(l.default),position:(0,u.one)(d.default),start:(0,u.pickDate)("yyyy-MM-dd",432e9),time:(0,u.pickDate)("hh:mm"),salary:(0,u.pickInteger)(5e5,5e4),country:(0,u.one)(e),office:(0,u.one)(n),office5:(0,u.one)(a),height:(0,u.pickNumber)(80,200)});for(var t=[],r=0;r<=i.default.length;r+=3)t.push(i.default[r])}();function y(e,n,a,r){void 0===e&&(e=100),void 0===n&&(n=0),void 0===a&&(a={});var t,i=a.name,l=a.order;switch(i){case"id":case"salary":t="asc"===l?function(e,n){return e[i]-n[i]}:function(e,n){return n[i]-e[i]};break;default:i&&(t="asc"===l?function(e,n){return e[i].localeCompare(n[i])}:function(e,n){return n[i].localeCompare(e[i])})}a=t?(0,o.default)(h,function(e){return e.sort(t)}):h;return r&&(r=r.toLocaleLowerCase(),a=a.filter(function(e){return 0<="".concat(e.firstName," ").concat(e.lastName).toLocaleLowerCase().indexOf(r)})),a.slice(n,n+e)}n.all=function(n){return void 0===n&&(n=500),new Promise(function(e){setTimeout(function(){e(h)},n)})},n.fetchSync=y,n.fetch={get:function(e,n){var a=n.current,r=void 0===a?1:a,a=n.pageSize,t=void 0===a?100:a,i=n.sorter,l=n.username,o=(r-1)*t;return new Promise(function(e){setTimeout(function(){e({status:1,data:y(t,o,i,l),current:r,pageSize:t,total:h.length})},(0,u.pickInteger)(500,300))})},post:function(e,n){var a=n.op,r=n.ids;return new Promise(function(e){switch(a){case"delete":h=h.filter(function(e){return r.indexOf(e.id)<0});break;case"on":case"off":h.forEach(function(e,n){0<=r.indexOf(e.id)&&(h[n]=t(t({},e),{status:"on"===a}))})}setTimeout(function(){e(!0)},(0,u.pickInteger)(200))})}}},41481:function(e,n,a){"use strict";var t=this&&this.__read||function(e,n){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var r,t,i=a.call(e),l=[];try{for(;(void 0===n||0<n--)&&!(r=i.next()).done;)l.push(r.value)}catch(e){t={error:e}}finally{try{r&&!r.done&&(a=i.return)&&a.call(i)}finally{if(t)throw t.error}}return l},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var i=r(a(24698)),l=a(12101),o=["red","orange","yellow","green","cyan","blue","violet"];n.default=function(){var e=t(i.default.useState("red"),2),n=e[0],r=e[1];return i.default.createElement(l.Select,{keygen:!0,style:{width:240},data:o,value:n,onChange:function(e,n,a){r(e),console.log(e,n,a)}})}},41061:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=["red","orange","this option is so long long long long long","green","cyan","blue","violet"];n.default=function(){return t.default.createElement(i.Select,{keygen:!0,autoAdapt:!0,style:{width:240},data:l,defaultValue:""})}},56541:function(e,n,a){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,a,r){void 0===r&&(r=a),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[a]}})}:function(e,n,a,r){void 0===r&&(r=a),e[r]=n[a]}),t=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&r(n,e,a);return t(n,e),n},l=this&&this.__read||function(e,n){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var r,t,i=a.call(e),l=[];try{for(;(void 0===n||0<n--)&&!(r=i.next()).done;)l.push(r.value)}catch(e){t={error:e}}finally{try{r&&!r.done&&(a=i.return)&&a.call(i)}finally{if(t)throw t.error}}return l};Object.defineProperty(n,"__esModule",{value:!0});var o=i(a(24698)),u=a(12101),d=[{id:"red"},{id:"orange"},{id:"yellow"},{id:"green"},{id:"cyan"},{id:"blue"},{id:"violet"}];n.default=function(){var e=l((0,o.useState)(["blue"]),2),n=e[0],e=e[1];return o.default.createElement(u.Select,{style:{width:300,marginBottom:15},data:d,keygen:"id",multiple:!0,placeholder:"Multiple select",onChange:e,value:n,renderItem:"id",format:"id",disabled:function(e){return"blue"===e.id}})}},3439:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=[{id:"red"},{id:"orange"},{id:"yellow"},{id:"green"},{id:"cyan"},{id:"blue"},{id:"violet"}];n.default=function(){return t.default.createElement(i.Select,{compressed:!0,style:{width:300},data:l,keygen:"id",multiple:!0,placeholder:"Multiple select Compressed",renderItem:"id",format:"id"})}},24398:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=[{id:1,city:"Osaka-Kobe-Kyoto"},{id:2,city:"Dhaka"},{id:3,city:"Pune"},{id:4,city:"Buenos Aires"},{id:5,city:"Nanjing"},{id:6,city:"Accra"},{id:7,city:"Chongqing"},{id:8,city:"Dongguan"},{id:9,city:"Bandung"},{id:10,city:"Bogota"}],o={width:240,marginBottom:12,display:"block"};n.default=function(){return t.default.createElement("div",null,t.default.createElement(i.Select,{data:l,format:"id",keygen:"id",defaultValue:3,prediction:function(e,n){return e===n.id},style:o,placeholder:"Select a city",renderItem:"city"}),t.default.createElement(i.Select,{data:l,multiple:!0,keygen:"id",defaultValue:[3,4],format:"id",placeholder:"Select citys",renderItem:"city"}))}},67406:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=[{value:"Beijing",tag:"1"},{value:"China",tag:"2"},{value:"Shanghai",tag:"1"},{value:"Mars",tag:"3"}];n.default=function(){return t.default.createElement(i.Select,{groupBy:function(e){return"1"===e.tag?"City":"2"===e.tag?"Country":"Other"},keygen:"value",style:{width:240},data:l,renderItem:"value"})}},96681:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=["red","orange","yellow","green","cyan","blue","violet"];n.default=function(){return t.default.createElement("div",null,t.default.createElement(i.Select,{style:{width:240,marginBottom:12},clearable:!0,keygen:!0,data:l,placeholder:"Select color"}),t.default.createElement("br",null),t.default.createElement(i.Select,{style:{width:300},data:l,clearable:!0,keygen:!0,multiple:!0,placeholder:"Multiple select",resultClassName:function(e){return console.log("resultClassName value: ",e),"result-class-name-".concat(e)}}))}},26913:function(e,n,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var n,a=1,r=arguments.length;a<r;a++)for(var t in n=arguments[a])Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t]);return e}).apply(this,arguments)},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var i=t(a(24698)),l=a(12101),o=["red","orange","yellow","green","cyan","blue","violet"];n.default=function(){var e={data:o,keygen:!0,style:{width:100,marginRight:12}};return i.default.createElement("div",null,i.default.createElement(l.Select,r({},e,{size:"small",placeholder:"small"})),i.default.createElement(l.Select,r({},e,{placeholder:"default"})),i.default.createElement(l.Select,r({},e,{size:"large",placeholder:"large"})))}},90474:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=(0,a(60886).fetchSync)(1e4),o={width:240,marginBottom:12,display:"block"};n.default=function(){return t.default.createElement(i.Select,{data:l,keygen:"id",format:"id",defaultValue:3,style:o,placeholder:"Select a user",renderItem:function(e,n){return"".concat(e.firstName," ").concat(e.lastName," (").concat(n+1,")")},renderResult:function(e){return"".concat(e.firstName," ").concat(e.lastName)}})}},69599:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=["red","orange","yellow","green","cyan","blue","violet"];n.default=function(){return t.default.createElement("div",null,t.default.createElement(i.Select,{style:{width:240,marginBottom:12},disabled:!0,keygen:!0,data:l,placeholder:"Select color"}),t.default.createElement("br",null),t.default.createElement(i.Select,{style:{width:300},data:l,disabled:function(e){return"green"===e},keygen:!0,multiple:!0,defaultValue:["orange","green"],placeholder:"Multiple select"}))}},789:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=["red","orange","yellow","green","cyan","blue","violet"];n.default=function(){return t.default.createElement("div",null,t.default.createElement(i.Select,{style:{width:240,marginBottom:12},data:l,keygen:!0,placeholder:"Select color",onFilter:function(e,n){return 0<=n.indexOf(e)}}),t.default.createElement("br",null))}},31420:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=["red","orange","yellow","green","cyan","blue","violet"];n.default=function(){return t.default.createElement("div",null,t.default.createElement(i.Select,{style:{width:240,marginBottom:12},data:l,keygen:!0,placeholder:"input color",onCreate:!0,defaultValue:"brown"}),t.default.createElement("br",null),t.default.createElement(i.Select,{style:{width:400},data:l,keygen:!0,multiple:!0,placeholder:"input color",onCreate:function(e){return e}}))}},26736:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=["red","orange","yellow","green","cyan","blue","violet"];n.default=function(){return t.default.createElement("div",null,t.default.createElement(i.Select,{style:{width:240,marginBottom:12},data:l,placeholder:"input label",keygen:!0,onCreate:!0,onFilter:function(e,n){return 0<=n.indexOf(e)}}),t.default.createElement("br",null),t.default.createElement(i.Select,{style:{width:360,marginBottom:12},data:l,placeholder:"input label",keygen:!0,onCreate:!0,multiple:!0,onFilter:function(e,n){return 0<=n.indexOf(e)}}))}},18252:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=(0,a(60886).fetchSync)(1e4),o=["red","orange","yellow","green","cyan","blue","violet"];n.default=function(){return t.default.createElement("div",{style:{padding:10,height:100,overflow:"hidden"}},t.default.createElement(i.Select,{absolute:!0,data:o,keygen:!0,style:{width:100,marginRight:12},onFilter:function(e,n){return-1<n.indexOf(e)},placeholder:"default"}),t.default.createElement(i.Select,{multiple:!0,data:l,keygen:"id",absolute:!0,style:{width:300},placeholder:"Select user",onFilter:function(e,n){return-1<n.firstName.indexOf(e)},format:"id",renderItem:function(e){return"".concat(e.firstName," ").concat(e.lastName)}}))}},62971:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=(0,a(12095).fetchSync)(200),o={width:300,marginBottom:12,display:"block"};n.default=function(){return t.default.createElement("div",null,t.default.createElement(i.Select,{data:l,format:"id",keygen:"id",columns:3,prediction:function(e,n){return e===n.id},style:o,placeholder:"Select a city",renderItem:"city"}),t.default.createElement(i.Select,{data:l,format:"id",keygen:"id",columns:4,columnWidth:180,multiple:!0,prediction:function(e,n){return e===n.id},style:o,placeholder:"Select citys",renderItem:"city",onFilter:function(e,n){return 0<=n.city.toLowerCase().indexOf(e.toLowerCase())},absolute:!0}))}},16182:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=(0,a(12095).fetchSync)(200);n.default=function(){return t.default.createElement(i.Select,{data:l,format:"id",keygen:"id",columns:-1,columnWidth:500,multiple:!0,prediction:function(e,n){return e===n.id},placeholder:"Select citys",renderItem:"city",onFilter:function(e,n){return 0<=n.city.toLowerCase().indexOf(e.toLowerCase())},absolute:!0})}},78987:function(e,n,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var t=r(a(24698)),i=a(12101),l=["red","orange","yellow","green","cyan","blue","violet"];n.default=function(){return t.default.createElement(i.Select,{keygen:!0,renderResult:function(e){return"I love ".concat(e)},style:{width:240},data:l,defaultValue:""})}},12611:function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=["Tokyo","Jakarta","Delhi","Manila","Seoul","Shanghai","Karachi","Beijing","New York","Guangzhou","San Paulo","Mexico City","Mumbai","Osaka-Kobe-Kyoto","Moscow","Dhaka","Cairo","Los Angelles","Bangkok","Kolkata","Buenos Aires","Tehran","Istanbul","Lagos","Shenzhen","Rio de Janeiro","Kinshasa","Tianjin","Paris","Lima","Chengdu","London","Nagoya","Lahore","Bangalore","Channai","Chicago","Bogota","Ho Chi Minh City","Hyderabad","Dongguan","Johannesburg-East Rand","Wuhan","Taipei","Hangzhou","Hong Kong","Chongqing","Ahmadabad","Kuala Lumpur","Quanzhou","Essen-Dusseldorf","Baghdad","Toronto","Santiago","Dallas-Fort Worth","Madrid","Nanjing","Shenyang","Xian","San Francisco-San Jose","Luanda","Qingdao","Houston","Miami","Bandung","Riyadh","Pune","Singapore","Philadelphia","Surat","Milan","Suzhou","St. Petersburg","Khartoum","Atlanta","Zhengzhou","Washington","Surabaya","Harbin","Abidjan","Yangon","Nairobi","Barcelona","Alexandria","Kabul","Guadalajara","Ankara","Belo Horizonte","Boston","Xiamen","Kuwait","Dar es Salaam","Phoenix","Dalian","Accra","Monterrey","Berlin","Sydney","Fuzhou","Medan"]},59770:function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=["Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Bouvet Island (Bouvetoya)","Brazil","British Indian Ocean Territory (Chagos Archipelago)","Brunei Darussalam","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos (Keeling) Islands","Colombia","Comoros","Congo","Cook Islands","Costa Rica","Cote d'Ivoire","Croatia","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Ethiopia","Faroe Islands","Falkland Islands (Malvinas)","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guinea-Bissau","Guyana","Haiti","Heard Island and McDonald Islands","Holy See (Vatican City State)","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Isle of Man","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Democratic People's Republic of Korea","Republic of Korea","Kuwait","Kyrgyz Republic","Lao People's Democratic Republic","Latvia","Lebanon","Lesotho","Liberia","Libyan Arab Jamahiriya","Liechtenstein","Lithuania","Luxembourg","Macao","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands Antilles","Netherlands","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestinian Territory","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn Islands","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russian Federation","Rwanda","Saint Barthelemy","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Martin","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia (Slovak Republic)","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","Spain","Sri Lanka","Sudan","Suriname","Svalbard & Jan Mayen Islands","Swaziland","Sweden","Switzerland","Syrian Arab Republic","Tajikistan","Tanzania","Thailand","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Virgin Islands, British","Virgin Islands, U.S.","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe"]},69878:function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=["Aaliyah","Abbey","Abby","Abdullah","Abelardo","Abigayle","Ada","Adaline","Addie","Adelbert","Adeline","Adelle","Adolfo","Adonis","Adriana","Adrien","Aglae","Agustina","Aida","Aileen","Aiyana","Alaina","Alanis","Alba","Albertha","Albina","Alec","Alejandrin","Alene","Alessia","Alexa","Alexandre","Alexandrine","Alexanne","Alexys","Alfonso","Alfred","Ali","Alicia","Alison","Aliyah","Allan","Allie","Alphonso","Alva","Alvera","Alvis","Alysa","Alysson","Amani","Amaya","Amelia","America","Amina","Amiya","Amy","Anabel","Anais","Anderson","Andreanne","Andy","Angelica","Angelita","Angus","Anissa","Aniyah","Annabel","Annalise","Anne","Annie","Anthony","Antonetta","Antonietta","Antwan","April","Aracely","Ardella","Arely","Arianna","Arielle","Arlie","Armando","Arne","Arnoldo","Art","Arvel","Aryanna","Ashlee","Ashly","Ashtyn","Astrid","Aubrey","Audreanne","Augusta","Aurelia","Aurore","Austyn","Avery","Ayana","Aylin","Bailey","Baron","Bart","Baylee","Beaulah","Belle","Benjamin","Benny","Bernadette","Bernardo","Bernice","Bernita","Berta","Bertrand","Beth","Betsy","Betty","Beverly","Billie","Blair","Blanca","Bo","Bonita","Boyd","Bradford","Brady","Brandi","Brandt","Brannon","Braulio","Breana","Brenda","Brendon","Brennon","Brett","Briana","Bridget","Brielle","Brisa","Brock","Brook","Brooks","Bryana","Bryon","Buddy","Burdette","Buster","Caesar","Caleb","Calista","Cameron","Camille","Camryn","Candelario","Candido","Carissa","Carley","Carlo","Carmel","Carmelo","Carol","Carolina","Carolyne","Carson","Casandra","Casimir","Cassandre","Catalina","Catherine","Cathy","Cecelia","Cecilia","Celestino","Cesar","Chadrick","Chandler","Charity","Charley","Chase","Chaya","Chelsey","Chester","Cheyenne","Christ","Christian","Christine","Christopher","Ciara","Cierra","Clair","Clarabelle","Clark","Claudia","Clay","Clementina","Cleo","Cletus","Clifford","Clinton","Cloyd","Cody","Coleman","Collin","Colton","Conner","Conor","Constantin","Cora","Cordelia","Cordie","Cornelius","Cortez","Coty","Craig","Cristal","Cristobal","Crystal","Curt","Cynthia","Dagmar","Daisha","Dale","Dalton","Damian","Damon","Dandre","Dangelo","Daniella","Dannie","Danyka","Daphney","Darian","Dario","Darlene","Darrell","Darrin","Darryl","Dashawn","David","Davon","Dawson","Dayna","Dean","Deborah","Dedrick","Deja","Dejuan","Delfina","Dell","Delores","Delphine","Demarcus","Demetrius","Denis","Deondre","Dereck","Deron","Deshawn","Dessie","Destinee","Destiny","Deven","Devonte","Dewitt","Diana","Dillan","Dina","Dixie","Dolores","Domenick","Dominic","Donald","Donna","Donny","Dorian","Dorothy","Dorthy","Dovie","Drew","Dulce","Dustin","Dylan","Earline","Easter","Ebony","Edd","Edgar","Edmond","Eduardo","Edwin","Edythe","Efren","Eino","Elbert","Eldora","Eleanora","Electa","Elenora","Eli","Elias","Elinor","Elisabeth","Elisha","Elizabeth","Ellie","Ellis","Elmira","Elna","Eloisa","Eloy","Else","Elton","Elvie","Elwyn","Elza","Emelie","Emerson","Emil","Emiliano","Emily","Emmanuel","Emmett","Emmy","Enid","Enos","Ephraim","Eric","Erick","Erika","Erna","Ernestine","Ervin","Esmeralda","Esteban","Estell","Estevan","Etha","Ethelyn","Eudora","Eula","Euna","Eva","Evangeline","Eveline","Everett","Evie","Ezekiel","Fabian","Fannie","Faustino","Fay","Felicia","Felipa","Felton","Fernando","Filiberto","Fiona","Fleta","Florence","Florida","Floy","Forest","Frances","Francis","Franco","Franz","Freddie","Frederick","Fredrick","Freeman","Frieda","Furman","Gabriella","Gage","Garett","Garnet","Garrett","Garry","Gavin","Gaylord","Genesis","Genoveva","George","Georgianna","Geovany","Gerard","Gerhard","Gerry","Gia","Gilbert","Giles","Gino","Giovanni","Giuseppe","Glen","Glennie","Golda","Gordon","Graciela","Grant","Grayson","Gregg","Gregory","Greyson","Guadalupe","Guillermo","Gunner","Gust","Gwen","Hailee","Hal","Halie","Hank","Hans","Harmon","Harrison","Haskell","Hattie","Haylee","Hazel","Heather","Hector","Helena","Hellen","Henderson","Henry","Hermann","Herminio","Hertha","Hilario","Hildegard","Hilma","Hiram","Hollie","Hope","Hortense","Howard","Hubert","Hulda","Hyman","Icie","Idella","Ike","Iliana","Imelda","Ines","Irwin","Isabell","Isac","Isaiah","Ismael","Israel","Iva","Ivy","Jabari","Jacinthe","Jackeline","Jackson","Jacquelyn","Jada","Jadon","Jaida","Jaime","Jake","Jalen","Jamaal","Jamarcus","Jamey","Jamir","Jan","Jane","Janet","Janie","Jannie","Jaquelin","Jaren","Jarred","Jarrett","Jasen","Jasper","Javon","Jayce","Jayde","Jaylan","Jaylon","Jayson","Jazmyn","Jeanette","Jed","Jeff","Jeffrey","Jenifer","Jennings","Jerad","Jeramy","Jeremy","Jermey","Jeromy","Jerrold","Jesse","Jessika","Jesus","Jevon","Jillian","Jo","Joanie","Joanny","Jocelyn","Joe","Joesph","Johann","John","Johnnie","Johnson","Jonas","Jonathon","Jordi","Jordyn","Josefa","Josephine","Joshuah","Josianne","Jovan","Jovany","Juana","Judd","Judson","Julia","Julianne","Juliet","June","Justen","Justine","Justyn","Kacey","Kade","Kaela","Kailee","Kaitlin","Kaleb","Kali","Kamille","Kamryn","Kareem","Kari","Karina","Karlee","Karlie","Kasandra","Katarina","Katelynn","Katheryn","Kathryn","Katlynn","Kattie","Kaya","Kayla","Kayleigh","Kaylie","Keanu","Keegan","Keenan","Kellen","Kellie","Kelsie","Ken","Kendrick","Kennedy","Kenny","Kenyatta","Keshaun","Kevin","Keyshawn","Kian","Kiara","Kiera","Kim","Kip","Kirsten","Kobe","Kolby","Korey","Kris","Kristin","Kristoffer","Krystal","Kurt","Kyle","Kyler","Lacey","Lafayette","Lamar","Lance","Laney","Larry","Laurel","Lauretta","Laurie","Lauryn","Laverna","Lavinia","Lawrence","Layne","Leann","Leatha","Leif","Lela","Lelia","Lenna","Lenora","Leola","Leonardo","Leonie","Leopold","Lera","Lesly","Leta","Levi","Lexi","Lia","Libbie","Lilian","Lilla","Lillie","Lilyan","Linda","Linnea","Lionel","Lisette","Lizeth","Lloyd","Lola","Lon","Lonnie","Lora","Lorena","Lorenzo","Lorna","Louie","Louvenia","Loyal","Luciano","Lucile","Lucious","Ludie","Luella","Luisa","Lulu","Lura","Luz","Lyla","Lysanne","Mable","Maci","Mackenzie","Madalyn","Madelyn","Madie","Madison","Madyson","Maeve","Magdalen","Magnolia","Maida","Makayla","Malachi","Malinda","Malvina","Manuel","Marc","Marcelino","Marcellus","Marco","Margaret","Margaretta","Marge","Margret","Mariah","Mariana","Marianne","Marie","Marietta","Marilyne","Marion","Maritza","Marjory","Marlee","Marley","Marques","Marshall","Martina","Marvin","Maryjane","Mateo","Mathilde","Matt","Maud","Maureen","Maurine","Max","Maximilian","Maximo","Maxwell","Maybell","Maymie","Mazie","Mckenzie","Meda","Meghan","Melba","Mellie","Melvina","Mercedes","Merle","Mertie","Mia","Michael","Micheal","Michelle","Mike","Miles","Millie","Mina","Miracle","Misael","Mitchel","Modesta","Mohammad","Mollie","Monica","Monserrat","Monte","Moriah","Morton","Moshe","Mozelle","Murl","Mustafa","Mylene","Myriam","Myron","Myrtis","Nakia","Naomi","Narciso","Nat","Natasha","Nathanial","Nayeli","Nedra","Nelda","Nellie","Neoma","Neva","Nia","Nichole","Nickolas","Nicolas","Nigel","Nikko","Nils","Noble","Noelia","Noemy","Nona","Norberto","Norris","Nova","Nyah","Oceane","Oda","Odie","Ola","Olen","Olin","Oma","Ona","Ophelia","Oran","Orin","Orlando","Orrin","Osbaldo","Osvaldo","Otha","Otis","Otto","Ozella","Palma","Paolo","Pascale","Patience","Patsy","Paula","Payton","Pearline","Penelope","Perry","Petra","Phoebe","Pierre","Pinkie","Porter","Preston","Princess","Prudence","Quentin","Quinten","Rachel","Raegan","Raheem","Raina","Ramiro","Randal","Randy","Raphael","Rashad","Raul","Raymond","Reanna","Rebecca","Reece","Regan","Reid","Reinhold","Renee","Retha","Reva","Reyes","Reynold","Rhianna","Ricardo","Richmond","Rickie","Rigoberto","River","Robert","Robin","Rocky","Rodger","Rodrigo","Roger","Rollin","Roman","Ronny","Rosa","Rosalind","Rosamond","Roscoe","Roselyn","Rosendo","Rosina","Rossie","Rowland","Roy","Rozella","Ruby","Rudy","Russel","Ruth","Ryan","Rylan","Ryley","Sabryna","Sage","Sally","Salvatore","Samantha","Sammie","Sandra","Sanford","Santina","Sarah","Sasha","Savanna","Scarlett","Scottie","Sean","Selena","Serena","Shad","Shana","Shanelle","Shaniya","Shanny","Sharon","Shawna","Shayne","Sheldon","Sherman","Shyann","Sid","Sierra","Sigurd","Simeon","Sister","Skylar","Solon","Sonya","Spencer","Stan","Stanton","Stella","Stephanie","Stephon","Stevie","Stuart","Susan","Susie","Syble","Sydni","Sylvester","Tad","Tamara","Tanner","Taryn","Tatyana","Taya","Ted","Teresa","Terrence","Tess","Thad","Thea","Theodora","Therese","Thomas","Tia","Tiara","Tillman","Timothy","Titus","Tod","Tomasa","Toni","Torrance","Trace","Travis","Tremaine","Trenton","Treva","Trevor","Trisha","Triston","Trycia","Twila","Tyree","Tyrell","Tyshawn","Ulices","Unique","Uriel","Valentin","Valerie","Vance","Veda","Velma","Verda","Verla","Verna","Vernie","Veronica","Vicente","Victor","Vidal","Vincent","Vinnie","Violette","Virginia","Vito","Viviane","Vivienne","Waino","Wallace","Wanda","Watson","Wayne","Wellington","Werner","Whitney","Wilburn","Wilfred","Wilhelm","Willa","Willie","Willy","Wilson","Winifred","Winston","Wyman","Xzavier","Yasmin","Yesenia","Yoshiko","Zachariah","Zack","Zakary","Zaria","Zella","Zetta","Zoe","Zoila","Zula"]},86913:function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=["Abbott","Abernathy","Abshire","Adams","Altenwerth","Anderson","Ankunding","Armstrong","Auer","Aufderhar","Bahringer","Bailey","Balistreri","Barrows","Bartell","Bartoletti","Barton","Bashirian","Batz","Bauch","Baumbach","Bayer","Beahan","Beatty","Bechtelar","Becker","Bednar","Beer","Beier","Berge","Bergnaum","Bergstrom","Bernhard","Bernier","Bins","Blanda","Blick","Block","Bode","Boehm","Bogan","Bogisich","Borer","Bosco","Botsford","Boyer","Boyle","Bradtke","Brakus","Braun","Breitenberg","Brekke","Brown","Bruen","Buckridge","Carroll","Carter","Cartwright","Casper","Cassin","Champlin","Christiansen","Cole","Collier","Collins","Conn","Connelly","Conroy","Considine","Corkery","Cormier","Corwin","Cremin","Crist","Crona","Cronin","Crooks","Cruickshank","Cummerata","Cummings","Dach","D'Amore","Daniel","Dare","Daugherty","Davis","Deckow","Denesik","Dibbert","Dickens","Dicki","Dickinson","Dietrich","Donnelly","Dooley","Douglas","Doyle","DuBuque","Durgan","Ebert","Effertz","Eichmann","Emard","Emmerich","Erdman","Ernser","Fadel","Fahey","Farrell","Fay","Feeney","Feest","Feil","Ferry","Fisher","Flatley","Frami","Franecki","Friesen","Fritsch","Funk","Gaylord","Gerhold","Gerlach","Gibson","Gislason","Gleason","Gleichner","Glover","Goldner","Goodwin","Gorczany","Gottlieb","Goyette","Grady","Graham","Grant","Green","Greenfelder","Greenholt","Grimes","Gulgowski","Gusikowski","Gutkowski","Gutmann","Haag","Hackett","Hagenes","Hahn","Haley","Halvorson","Hamill","Hammes","Hand","Hane","Hansen","Harber","Harris","Hartmann","Harvey","Hauck","Hayes","Heaney","Heathcote","Hegmann","Heidenreich","Heller","Herman","Hermann","Hermiston","Herzog","Hessel","Hettinger","Hickle","Hilll","Hills","Hilpert","Hintz","Hirthe","Hodkiewicz","Hoeger","Homenick","Hoppe","Howe","Howell","Hudson","Huel","Huels","Hyatt","Jacobi","Jacobs","Jacobson","Jakubowski","Jaskolski","Jast","Jenkins","Jerde","Johns","Johnson","Johnston","Jones","Kassulke","Kautzer","Keebler","Keeling","Kemmer","Kerluke","Kertzmann","Kessler","Kiehn","Kihn","Kilback","King","Kirlin","Klein","Kling","Klocko","Koch","Koelpin","Koepp","Kohler","Konopelski","Koss","Kovacek","Kozey","Krajcik","Kreiger","Kris","Kshlerin","Kub","Kuhic","Kuhlman","Kuhn","Kulas","Kunde","Kunze","Kuphal","Kutch","Kuvalis","Labadie","Lakin","Lang","Langosh","Langworth","Larkin","Larson","Leannon","Lebsack","Ledner","Leffler","Legros","Lehner","Lemke","Lesch","Leuschke","Lind","Lindgren","Littel","Little","Lockman","Lowe","Lubowitz","Lueilwitz","Luettgen","Lynch","Macejkovic","MacGyver","Maggio","Mann","Mante","Marks","Marquardt","Marvin","Mayer","Mayert","McClure","McCullough","McDermott","McGlynn","McKenzie","McLaughlin","Medhurst","Mertz","Metz","Miller","Mills","Mitchell","Moen","Mohr","Monahan","Moore","Morar","Morissette","Mosciski","Mraz","Mueller","Muller","Murazik","Murphy","Murray","Nader","Nicolas","Nienow","Nikolaus","Nitzsche","Nolan","Oberbrunner","O'Connell","O'Conner","O'Hara","O'Keefe","O'Kon","Okuneva","Olson","Ondricka","O'Reilly","Orn","Ortiz","Osinski","Pacocha","Padberg","Pagac","Parisian","Parker","Paucek","Pfannerstill","Pfeffer","Pollich","Pouros","Powlowski","Predovic","Price","Prohaska","Prosacco","Purdy","Quigley","Quitzon","Rath","Ratke","Rau","Raynor","Reichel","Reichert","Reilly","Reinger","Rempel","Renner","Reynolds","Rice","Rippin","Ritchie","Robel","Roberts","Rodriguez","Rogahn","Rohan","Rolfson","Romaguera","Roob","Rosenbaum","Rowe","Ruecker","Runolfsdottir","Runolfsson","Runte","Russel","Rutherford","Ryan","Sanford","Satterfield","Sauer","Sawayn","Schaden","Schaefer","Schamberger","Schiller","Schimmel","Schinner","Schmeler","Schmidt","Schmitt","Schneider","Schoen","Schowalter","Schroeder","Schulist","Schultz","Schumm","Schuppe","Schuster","Senger","Shanahan","Shields","Simonis","Sipes","Skiles","Smith","Smitham","Spencer","Spinka","Sporer","Stamm","Stanton","Stark","Stehr","Steuber","Stiedemann","Stokes","Stoltenberg","Stracke","Streich","Stroman","Strosin","Swaniawski","Swift","Terry","Thiel","Thompson","Tillman","Torp","Torphy","Towne","Toy","Trantow","Tremblay","Treutel","Tromp","Turcotte","Turner","Ullrich","Upton","Vandervort","Veum","Volkman","Von","VonRueden","Waelchi","Walker","Walsh","Walter","Ward","Waters","Watsica","Weber","Wehner","Weimann","Weissnat","Welch","West","White","Wiegand","Wilderman","Wilkinson","Will","Williamson","Willms","Windler","Wintheiser","Wisoky","Wisozk","Witting","Wiza","Wolf","Wolff","Wuckert","Wunsch","Wyman","Yost","Yundt","Zboncak","Zemlak","Ziemann","Zieme","Zulauf"]},22590:function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=["Accountant","Customer Support","Data Coordinator","Developer","Development Lead","Financial Controller","Integration Specialist","Javascript Developer","Marketing Designer","Office Manager","Regional Director","Sales Assistant","Secretary","Software Engineer","Support Engineer","Support Lead","Systems Administrator","System Architect","Technical Author","Team Leader"]}}]);