"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[6623],{75722:function(e,r,n){n.d(r,{Z:function(){return B}});var t=n(87462),o=n(29439),l=n(93433),a=n(87363),i=n.n(a),c=n(92242),u=n.n(c),d=n(73727),s=n(22770),p=n(62625),m=n(94184),f=n.n(m),g=n(15660),h=n.n(g),C=(n(62356),function(e){var r=e.language,n=void 0===r?"lang-jsx":r,t=e.value,o=(0,a.useRef)(null);return(0,a.useEffect)((function(){h().highlightElement(o.current,!1)}),[]),i().createElement("pre",{ref:o,className:f()(n,(0,s.vf)("pre"))},i().createElement("code",null,t))}),v=n(84506),E=n(11888),y=n(91391),b=function(e){var r=e.component,n=e.id,t=e.rawText,l=void 0===t?"":t,c=e.title,u=(0,a.useState)(!1),d=(0,o.Z)(u,2),p=d[0],m=d[1],f=(0,a.useRef)((0,a.createElement)(r)).current,g=l.replace(/(^|\n|\r)\s*\/\*[\s\S]*?\*\/\s*(?:\r|\n|$)/,"").trim(),h=c.split("\n"),b=(0,v.Z)(h),P=b[0],Z=b.slice(1),k=function(){m(!p)};return i().createElement(i().Fragment,null,P&&i().createElement("h3",{id:n},P),i().createElement(E.Zr,{placeholder:i().createElement("div",{className:(0,s.vf)("placeholder")},i().createElement(E.yC,{size:"54px",name:"four-dots",color:"#53a0fd"}))},i().createElement("div",{className:(0,s.vf)("_",p&&"showcode")},i().createElement("div",{className:(0,s.vf)("body")},f),c.length>0&&i().createElement("div",{className:(0,s.vf)("desc")},Z.map((function(e,r){return i().createElement("div",{key:r,dangerouslySetInnerHTML:{__html:e}})})),i().createElement("a",{className:(0,s.vf)("toggle"),onClick:k},i().createElement(y.Z,{name:p?"code-close":"code"}))),i().createElement(E.y_.Transition,{visible:p,transitionTypes:["collapse","fade"]},i().createElement(C,{value:g}),i().createElement("a",{className:(0,s.vf)("toggle"),onClick:k},i().createElement(y.Z,{name:p?"code-close":"code"}))))))},P=i().memo(b),Z=function(e){var r=e.children,n=(0,l.Z)(r[1].props.children);try{n.sort((function(e,r){return e.props.children[0].props.children[0].localeCompare(r.props.children[0].props.children[0])}))}catch(e){console.log("sort fail...")}return i().createElement("div",{style:{overflow:"auto"}},i().createElement("table",{className:"doc-api-table"},r[0],i().cloneElement(r[1],{children:n})))},k=n(35087),x=function(e){var r=[],n=(0,a.useContext)(k.Z).setHeadings,c=e.source,m=e.examples;return i().useEffect((function(){n(r)}),[]),i().createElement(u(),{className:(0,s.EX)("_"),source:c,renderers:{code:C,heading:function(e){var n=e.level,t=e.children,o="h".concat(n),l="heading-".concat(function(e,r){return"".concat(e,"-").concat((r||"").replace(/[\W|-]/g,"-"))}(n,t[0]));return 2!==n&&3!==n||r.push({id:l,level:n,children:t}),i().createElement(o,{id:l},t)},table:Z,html:function(e){return"<example />"===e.value?i().createElement(i().Fragment,null,function(){if(!m)return i().createElement("div",null);var e=(0,p.ZP)("示例","Example"),n="heading-example-h";return r.push({id:n,level:2,children:[e]}),[i().createElement("h2",{key:"h",id:n},e)].concat((0,l.Z)(m.map((function(e){var n="heading-".concat(e.name),l=e.title.split("\n"),a=(0,o.Z)(l,1)[0];return r.push({id:n,level:3,children:[a]}),i().createElement(P,(0,t.Z)({key:n,id:n},e))}))))}()):"<br>"===e.value||"<br />"===e.value?i().createElement("br",null):null},link:function(e){var r=0===e.href.indexOf("http")?"_blank":void 0;return r?i().createElement("a",{href:e.href,target:r},e.children):i().createElement(d.rU,{to:e.href},e.children)}}})},B=i().memo(x)},35087:function(e,r,n){var t=(0,n(87363).createContext)(void 0);r.Z=t},88981:function(e,r,n){var t=n(29439),o=n(87363),l=n.n(o),a=n(91291),i=n(22770),c=n(11888),u=n(75964),d=n(12025),s=n(35087),p=function(e){var r=e.children,n=(0,o.useState)(""),p=(0,t.Z)(n,2),m=p[0],f=p[1],g=(0,o.useState)([]),h=(0,t.Z)(g,2),C=h[0],v=h[1],E=(0,a.Z)().hash,y=(0,u.Z)((function(e){d.Z.push("".concat(d.Z.location.pathname,"#").concat(e));var r=document.getElementById(e);null==r||r.scrollIntoView()})),b=(0,u.Z)((function(){var e=document.documentElement.scrollTop,r=C.filter((function(e){return 3===e.level&&e.children.length}));if(0!==r.length){var n=r[0].id;r.forEach((function(r){var t=document.querySelector("#".concat(r.id));(null==t?void 0:t.offsetTop)<=e&&(n=r.id)})),f(n)}}));(0,o.useEffect)((function(){if(b(),E){var e=document.querySelector(E);setTimeout((function(){null==e||e.scrollIntoView()}),20)}return document.addEventListener("scroll",b),function(){document.removeEventListener("scroll",b)}}),[C]);var P=l().useMemo((function(){return{setHeadings:v}}),[]);return l().createElement("div",{className:(0,i.EH)("_")},l().createElement(s.Z.Provider,{value:P},r),l().createElement(c.Le,{className:(0,i.EH)("sticky"),top:50},l().createElement("div",{className:(0,i.EH)("nav")},C.map((function(e,r){var n=e.children.filter((function(e){return"string"==typeof e}));return l().createElement("a",{key:r,className:(0,i.EH)("level-".concat(e.level),m===e.id&&"active"),onClick:y.bind(null,e.id)},n)})))))};r.Z=l().memo(p)},63848:function(e,r,n){n.r(r),n.d(r,{default:function(){return s}});var t=n(87363),o=n.n(t),l=n(88981),a=n(75722),i=n(62625),c=n(36519),u=(0,i.ZP)("# ColorPicker _颜色选择器_\r\n\r\n<example />\r\n\r\n## API\r\n\r\n### ColorPicker\r\n\r\n| 属性          | 类型                                                         | 默认值        | 说明                     |\r\n| ------------- | ------------------------------------------------------------ | ------------- | ------------------------ |\r\n| value         | string                                                       | -             | 选中的颜色               |\r\n| disabled      | boolean                                                      | false         | 是否禁止                 |\r\n| size          | 'small' \\| 'large' \\| 'default'                              | 'default'     | 大小                     |\r\n| mode          | 'rgba' \\| 'hex' \\| 'hsla'                                    | 'rgba'        | 颜色展示模式             |\r\n| defaultColors | string[]                                                     | []            | 自定义颜色盘             |\r\n| style         | React.CSSProperties                                          | -             | 输入框样式               |\r\n| className     | string                                                       | -             | 输入框样式名             |\r\n| position      | 'left-bottom' \\| 'left-top' \\| 'right-bottom' \\| 'right-top' | 'left-bottom' | 下拉框弹出位置           |\r\n| portal        | boolean                                                      | true          | 是否在 body 中弹出下拉框 |\r\n| defaultValue  | string                                                       | -             | 默认选中的颜色           |\r\n| onChange      | (color:string)=>void                                         | -             | 颜色改变时回调           |\r\n| showIcon      | boolean                                                      | true          | 是否显示下拉图标         |\r\n\r\n### ColorPicker.ColorBoard\r\n\r\n**_ColorPicker.ColorBoard 与 ColorPicker 保持一致的 props，但是不包含 position,size _**\r\n","# ColorPicker\r\n\r\n<example />\r\n\r\n## API\r\n\r\n### ColorPicker\r\n\r\n| Property      | Type                                                         | Default       | Description                                      |\r\n| ------------- | ------------------------------------------------------------ | ------------- | ------------------------------------------------ |\r\n| value         | string                                                       | -             | The selected color                               |\r\n| disabled      | boolean                                                      | false         | Whether to disabled                              |\r\n| size          | 'small' \\| 'large' \\| 'default'                              | 'default'     | Size                                             |\r\n| mode          | 'rgba' \\| 'hex' \\| 'hsla'                                    | 'rgba'        | Show patterns of color                           |\r\n| defaultColors | string[]                                                     | []            | Customize the color tray                         |\r\n| style         | React.CSSProperties                                          | -             | Input style                                      |\r\n| className     | string                                                       | -             | Input className                                  |\r\n| position      | 'left-bottom' \\| 'left-top' \\| 'right-bottom' \\| 'right-top' | 'left-bottom' | Position where the drop-down box is displayed    |\r\n| portal        | boolean                                                      | true          | Whether a drop-down box is displayed in the body |\r\n| defaultValue  | string                                                       | -             | The default selected color                       |\r\n| onChange      | (color:string)=>void                                         | -             | Callback when color changes                      |\r\n| showIcon      | boolean                                                      | true          | Whether to display the drop-down icon            |\r\n\r\n### ColorPicker.ColorBoard\r\n\r\n**_ColorPicker.ColorBoard props consistent with ColorPicker, but does not contain position,size _**\r\n"),d=[{name:"1-base",title:(0,i.ZP)("基本用法 \n 基本的使用","Base \n Basic usage"),component:n(27740).Z,rawText:n(95311).Z},{name:"2-size",title:(0,i.ZP)("大小 \n 提供了三种大小的颜色选择器，small、default、large","Size \n Three sizes of color pickers are provided, small, default, and large"),component:n(77171).Z,rawText:n(64815).Z},{name:"3-value",title:(0,i.ZP)("受控 \n 设置value属性使组件受控","Control \n Set the value prop to bring the component under control"),component:n(25577).Z,rawText:n(66833).Z},{name:"4-mode",title:(0,i.ZP)("模式 \n ColorPicker提供三种模式(rgba,hsla,hex)切换","Mode \n ColorPicker provides three modes (rgba,hsla,hex) toggle"),component:n(83629).Z,rawText:n(7791).Z},{name:"5-board",title:(0,i.ZP)("色版 \n 使用ColorBoard组件单独显示色板","ColorBoard \n Display ColorBoard separately"),component:n(60865).Z,rawText:n(51345).Z},{name:"6-format",title:(0,i.ZP)("格式化结果 \n 设置format prop进行格式化结果","Format result \n Set format prop to format the results"),component:n(36509).Z,rawText:n(37614).Z},{name:"7-defaultColors",title:(0,i.ZP)("默认颜色 \n 设置defaultColors prop定义默认的颜色盘","Default Colors \n Set defaultColors prop to update the default color panel"),component:n(57674).Z,rawText:n(86635).Z},{name:"8-disabled",title:(0,i.ZP)("禁用 \n 设置 disabled 属性禁用组件","Disabled \n Set the disabled property to disable the component."),component:n(53100).Z,rawText:n(12786).Z},{name:"9-container",title:(0,i.ZP)("渲染到指定容器中 \n 使用 getPopupContainer渲染到指定位置","Container \n You can use getPopupContainer to render to the specified location"),component:n(48776).Z,rawText:n(45606).Z}],s=(0,c.Z)((function(){return o().createElement(l.Z,null,o().createElement(a.Z,{source:u,examples:d}))}))},27740:function(e,r,n){n.d(r,{Z:function(){return a}});var t=n(87363),o=n.n(t),l=n(11888);function a(){return o().createElement(o().Fragment,null,o().createElement(l.zH,{defaultValue:"#ECC626"}))}},77171:function(e,r,n){n.d(r,{Z:function(){return a}});var t=n(87363),o=n.n(t),l=n(11888);function a(){return o().createElement(o().Fragment,null,o().createElement(l.zH,{defaultValue:"#795548",size:"small",style:{marginRight:10},showIcon:!1}),o().createElement(l.zH,{defaultValue:"#CDDC39",size:"default",style:{marginRight:10},showIcon:!1}),o().createElement(l.zH,{defaultValue:"#E91E63",size:"large",showIcon:!1}))}},25577:function(e,r,n){n.d(r,{Z:function(){return i}});var t=n(29439),o=n(87363),l=n.n(o),a=n(11888);function i(){var e=(0,o.useState)("red"),r=(0,t.Z)(e,2),n=r[0],i=r[1],c=(0,o.useCallback)((function(e){console.log("onChange:",e),i(e)}),[]);return l().createElement("div",null,l().createElement(a.zH,{value:n}),l().createElement(a.zH,{value:n,onChange:c,style:{marginLeft:20}}),l().createElement(a.II,{placeholder:"Input the color",value:n,onChange:c,width:200,style:{display:"block"}}))}},83629:function(e,r,n){n.d(r,{Z:function(){return a}});var t=n(87363),o=n.n(t),l=n(11888);function a(){return o().createElement(o().Fragment,null,o().createElement(l.zH,{mode:"hex",defaultValue:"#004dcf"}))}},60865:function(e,r,n){n.d(r,{Z:function(){return i}});var t=n(87363),o=n.n(t),l=n(11888),a={marginRight:20,display:"inline-block"};function i(){var e=(0,t.useCallback)(console.log,[]);return o().createElement(o().Fragment,null,o().createElement(l.zH.ColorBoard,{defaultValue:"#C940C6",mode:!0,onChange:e,style:a}),o().createElement(l.zH.ColorBoard,{defaultValue:"#7E3C54",mode:"hsla",onChange:e,style:a}),o().createElement(l.zH.ColorBoard,{defaultValue:"#517B3B",mode:"hex",onChange:e,style:a}))}},36509:function(e,r,n){n.d(r,{Z:function(){return i}});var t=n(29439),o=n(87363),l=n.n(o),a=n(11888);function i(){var e=(0,o.useState)("#3F51B5"),r=(0,t.Z)(e,2),n=r[0],i=r[1],c=(0,o.useState)("hex"),u=(0,t.Z)(c,2),d=u[0],s=u[1];return l().createElement("div",{style:{display:"flex"}},l().createElement("div",null,l().createElement(a.zH.ColorBoard,{value:n,format:d,onChange:i})),l().createElement("div",{style:{marginLeft:10}},l().createElement(a.Ph,{style:{width:280},value:d,data:["rgba","hex","hsla"],onChange:s}),l().createElement("pre",{style:{marginTop:10,padding:"5px",fontSize:"14px",width:280,background:n}},"color: ",l().createElement("strong",null,n))))}},57674:function(e,r,n){n.d(r,{Z:function(){return s}});for(var t=n(87363),o=n.n(t),l=n(11888),a=[],i=0;i<50;i++){for(var c=[],u=0;u<3;u++)c.push(Math.floor(255*Math.random()));a.push(c)}var d=a.map((function(e){return"rgb(".concat(e.join(","),")")}));function s(){return o().createElement(l.zH.ColorBoard,{defaultColors:d,defaultValue:"#FFC107"})}},53100:function(e,r,n){n.d(r,{Z:function(){return a}});var t=n(87363),o=n.n(t),l=n(11888);function a(){return o().createElement("div",{style:{display:"flex"}},o().createElement(l.zH,{disabled:!0,defaultValue:"#23B613"}),o().createElement(l.zH.ColorBoard,{disabled:!0,defaultValue:"#23B613",mode:!0,style:{marginLeft:20}}))}},48776:function(e,r,n){n.d(r,{Z:function(){return i}});var t=n(87363),o=n.n(t),l=n(11888);function a(){for(var e=[],r=0;r<3;r++)e.push(Math.floor(255*Math.random()));return"rgb(".concat(e.join(","),")")}function i(){return o().createElement("div",null,o().createElement("div",{id:"popup-target",style:{height:200,overflow:"auto",position:"relative"}},o().createElement("p",{style:{marginTop:200}}),o().createElement("p",null,"Render to trigger element"),o().createElement(l.zH,{defaultValue:a(),position:"left-bottom",style:{margin:"0 400px"},getPopupContainer:function(e){return e}}),o().createElement(l.zH,{defaultValue:a(),position:"left-top",style:{margin:"0 400px"},getPopupContainer:function(e){return e}}),o().createElement(l.zH,{defaultValue:a(),position:"right-bottom",style:{margin:"0 400px"},getPopupContainer:function(e){return e}}),o().createElement(l.zH,{defaultValue:a(),position:"right-top",style:{margin:"0 400px"},getPopupContainer:function(e){return e}}),o().createElement("p",null,"Render to popup target"),o().createElement(l.zH,{defaultValue:a(),position:"left-bottom",style:{margin:"0 400px"},getPopupContainer:function(){return document.getElementById("popup-target")}}),o().createElement(l.zH,{defaultValue:a(),position:"left-top",style:{margin:"0 400px"},getPopupContainer:function(){return document.getElementById("popup-target")}}),o().createElement(l.zH,{defaultValue:a(),position:"right-bottom",style:{margin:"0 400px"},getPopupContainer:function(){return document.getElementById("popup-target")}}),o().createElement(l.zH,{defaultValue:a(),position:"right-top",style:{margin:"0 400px"},getPopupContainer:function(){return document.getElementById("popup-target")}})))}},36519:function(e,r,n){var t=n(11888),o=n(87363),l=n.n(o);r.Z=function(e){var r=function(r){return(0,o.useEffect)((function(){return t.gb.finish(),function(){t.gb.start()}}),[]),l().createElement(e,r)};return l().memo(r)}},95311:function(e,r){r.Z="/**\r\n * cn - 基本用法\r\n *    -- 基本的使用\r\n * en - Base\r\n *    -- Basic usage\r\n */\r\n\r\nimport React from 'react'\r\nimport { ColorPicker } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <>\r\n            <ColorPicker defaultValue=\"#ECC626\" />\r\n        </>\r\n    )\r\n}\r\n"},64815:function(e,r){r.Z='/**\r\n * cn - 大小\r\n *    -- 提供了三种大小的颜色选择器，small、default、large\r\n * en - Size\r\n *    -- Three sizes of color pickers are provided, small, default, and large\r\n */\r\n\r\nimport React from \'react\'\r\nimport { ColorPicker } from \'ethan-ui\'\r\n\r\nexport default function () {\r\n    return (\r\n        <>\r\n            <ColorPicker defaultValue="#795548" size="small" style={{ marginRight: 10 }} showIcon={false} />\r\n\r\n            <ColorPicker defaultValue="#CDDC39" size="default" style={{ marginRight: 10 }} showIcon={false} />\r\n\r\n            <ColorPicker defaultValue="#E91E63" size="large" showIcon={false} />\r\n        </>\r\n    )\r\n}\r\n'},66833:function(e,r){r.Z="/**\r\n * cn - 受控\r\n *    -- 设置value属性使组件受控\r\n * en - Control\r\n *    -- Set the value prop to bring the component under control\r\n */\r\n\r\nimport React, { useCallback, useState } from 'react'\r\nimport { Input } from 'ethan-ui'\r\nimport { ColorPicker } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    const [color, updateColor] = useState('red')\r\n\r\n    const handleChange = useCallback((c) => {\r\n        console.log('onChange:', c)\r\n\r\n        updateColor(c)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <ColorPicker value={color} />\r\n\r\n            <ColorPicker value={color} onChange={handleChange} style={{ marginLeft: 20 }} />\r\n\r\n            <Input\r\n                placeholder=\"Input the color\"\r\n                value={color}\r\n                onChange={handleChange}\r\n                width={200}\r\n                style={{ display: 'block' }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},7791:function(e,r){r.Z="/**\r\n * cn - 模式\r\n *    -- ColorPicker提供三种模式(rgba,hsla,hex)切换\r\n * en - Mode\r\n *    -- ColorPicker provides three modes (rgba,hsla,hex) toggle\r\n */\r\n\r\nimport React from 'react'\r\nimport { ColorPicker } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <>\r\n            <ColorPicker mode=\"hex\" defaultValue=\"#004dcf\" />\r\n        </>\r\n    )\r\n}\r\n"},51345:function(e,r){r.Z='/**\r\n * cn - 色版\r\n *    -- 使用ColorBoard组件单独显示色板\r\n * en - ColorBoard\r\n *    -- Display ColorBoard separately\r\n */\r\n\r\nimport React, { useCallback } from \'react\'\r\nimport { ColorPicker } from \'ethan-ui\'\r\n\r\nconst style = { marginRight: 20, display: \'inline-block\' }\r\n\r\nexport default function () {\r\n    const handleChange = useCallback(console.log, [])\r\n\r\n    return (\r\n        <>\r\n            <ColorPicker.ColorBoard defaultValue="#C940C6" mode onChange={handleChange} style={style} />\r\n\r\n            <ColorPicker.ColorBoard defaultValue="#7E3C54" mode="hsla" onChange={handleChange} style={style} />\r\n\r\n            <ColorPicker.ColorBoard defaultValue="#517B3B" mode="hex" onChange={handleChange} style={style} />\r\n        </>\r\n    )\r\n}\r\n'},37614:function(e,r){r.Z="/**\r\n * cn - 格式化结果\r\n *    -- 设置format prop进行格式化结果\r\n * en - Format result\r\n *    -- Set format prop to format the results\r\n */\r\n\r\nimport React, { useState } from 'react'\r\nimport { ColorPicker, Select } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    const [color, updateColor] = useState('#3F51B5')\r\n\r\n    const [format, updateFormat] = useState<'rgba' | 'hex' | 'hsla'>('hex')\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <div>\r\n                <ColorPicker.ColorBoard value={color} format={format} onChange={updateColor} />\r\n            </div>\r\n\r\n            <div style={{ marginLeft: 10 }}>\r\n                <Select style={{ width: 280 }} value={format} data={['rgba', 'hex', 'hsla']} onChange={updateFormat} />\r\n\r\n                <pre style={{ marginTop: 10, padding: '5px', fontSize: '14px', width: 280, background: color }}>\r\n                    color: <strong>{color}</strong>\r\n                </pre>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"},86635:function(e,r){r.Z="/**\r\n * cn - 默认颜色\r\n *    -- 设置defaultColors prop定义默认的颜色盘\r\n * en - Default Colors\r\n *    -- Set defaultColors prop to update the default color panel\r\n */\r\n\r\nimport React from 'react'\r\nimport { ColorPicker } from 'ethan-ui'\r\n\r\nconst rgb = []\r\n\r\nfor (let i = 0; i < 50; i++) {\r\n    const arr = []\r\n\r\n    for (let j = 0; j < 3; j++) {\r\n        arr.push(Math.floor(Math.random() * 255))\r\n    }\r\n\r\n    rgb.push(arr)\r\n}\r\n\r\nconst defaultColors = rgb.map((group) => `rgb(${group.join(',')})`)\r\n\r\nexport default function () {\r\n    return <ColorPicker.ColorBoard defaultColors={defaultColors} defaultValue=\"#FFC107\" />\r\n}\r\n"},12786:function(e,r){r.Z="/**\r\n * cn - 禁用\r\n *    -- 设置 disabled 属性禁用组件\r\n * en - Disabled\r\n *    -- Set the disabled property to disable the component.\r\n */\r\n\r\nimport React from 'react'\r\nimport { ColorPicker } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <ColorPicker disabled defaultValue=\"#23B613\" />\r\n\r\n            <ColorPicker.ColorBoard disabled defaultValue=\"#23B613\" mode style={{ marginLeft: 20 }} />\r\n        </div>\r\n    )\r\n}\r\n"},45606:function(e,r){r.Z="/**\r\n * cn - 渲染到指定容器中\r\n *    -- 使用 getPopupContainer渲染到指定位置\r\n * en - Container\r\n *    -- You can use getPopupContainer to render to the specified location\r\n */\r\n\r\nimport React from 'react'\r\nimport { ColorPicker } from 'ethan-ui'\r\n\r\nfunction randomColor() {\r\n    const arr = []\r\n\r\n    for (let j = 0; j < 3; j++) {\r\n        arr.push(Math.floor(Math.random() * 255))\r\n    }\r\n\r\n    return `rgb(${arr.join(',')})`\r\n}\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <div id=\"popup-target\" style={{ height: 200, overflow: 'auto', position: 'relative' }}>\r\n                <p style={{ marginTop: 200 }} />\r\n\r\n                <p>Render to trigger element</p>\r\n\r\n                <ColorPicker\r\n                    defaultValue={randomColor()}\r\n                    position=\"left-bottom\"\r\n                    style={{ margin: '0 400px' }}\r\n                    getPopupContainer={(triggerElement) => triggerElement}\r\n                />\r\n\r\n                <ColorPicker\r\n                    defaultValue={randomColor()}\r\n                    position=\"left-top\"\r\n                    style={{ margin: '0 400px' }}\r\n                    getPopupContainer={(triggerElement) => triggerElement}\r\n                />\r\n\r\n                <ColorPicker\r\n                    defaultValue={randomColor()}\r\n                    position=\"right-bottom\"\r\n                    style={{ margin: '0 400px' }}\r\n                    getPopupContainer={(triggerElement) => triggerElement}\r\n                />\r\n\r\n                <ColorPicker\r\n                    defaultValue={randomColor()}\r\n                    position=\"right-top\"\r\n                    style={{ margin: '0 400px' }}\r\n                    getPopupContainer={(triggerElement) => triggerElement}\r\n                />\r\n\r\n                <p>Render to popup target</p>\r\n\r\n                <ColorPicker\r\n                    defaultValue={randomColor()}\r\n                    position=\"left-bottom\"\r\n                    style={{ margin: '0 400px' }}\r\n                    getPopupContainer={() => document.getElementById('popup-target')}\r\n                />\r\n\r\n                <ColorPicker\r\n                    defaultValue={randomColor()}\r\n                    position=\"left-top\"\r\n                    style={{ margin: '0 400px' }}\r\n                    getPopupContainer={() => document.getElementById('popup-target')}\r\n                />\r\n\r\n                <ColorPicker\r\n                    defaultValue={randomColor()}\r\n                    position=\"right-bottom\"\r\n                    style={{ margin: '0 400px' }}\r\n                    getPopupContainer={() => document.getElementById('popup-target')}\r\n                />\r\n\r\n                <ColorPicker\r\n                    defaultValue={randomColor()}\r\n                    position=\"right-top\"\r\n                    style={{ margin: '0 400px' }}\r\n                    getPopupContainer={() => document.getElementById('popup-target')}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"}}]);