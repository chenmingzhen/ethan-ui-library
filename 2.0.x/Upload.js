"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[4806],{75722:function(e,n,r){r.d(n,{Z:function(){return F}});var t=r(87462),o=r(29439),a=r(93433),i=r(87363),l=r.n(i),c=r(92242),d=r.n(c),u=r(73727),s=r(22770),m=r(62625),p=r(94184),f=r.n(p),g=r(15660),h=r.n(g),v=(r(62356),function(e){var n=e.language,r=void 0===n?"lang-jsx":n,t=e.value,o=(0,i.useRef)(null);return(0,i.useEffect)((function(){h().highlightElement(o.current,!1)}),[]),l().createElement("pre",{ref:o,className:f()(r,(0,s.vf)("pre"))},l().createElement("code",null,t))}),E=r(84506),U=r(11888),w=r(91391),b=function(e){var n=e.component,r=e.id,t=e.rawText,a=void 0===t?"":t,c=e.title,d=(0,i.useState)(!1),u=(0,o.Z)(d,2),m=u[0],p=u[1],f=(0,i.useRef)((0,i.createElement)(n)).current,g=a.replace(/(^|\n|\r)\s*\/\*[\s\S]*?\*\/\s*(?:\r|\n|$)/,"").trim(),h=c.split("\n"),b=(0,E.Z)(h),x=b[0],y=b.slice(1),Z=function(){p(!m)};return l().createElement(l().Fragment,null,x&&l().createElement("h3",{id:r},x),l().createElement(U.Zr,{placeholder:l().createElement("div",{className:(0,s.vf)("placeholder")},l().createElement(U.yC,{size:"54px",name:"four-dots",color:"#53a0fd"}))},l().createElement("div",{className:(0,s.vf)("_",m&&"showcode")},l().createElement("div",{className:(0,s.vf)("body")},f),c.length>0&&l().createElement("div",{className:(0,s.vf)("desc")},y.map((function(e,n){return l().createElement("div",{key:n,dangerouslySetInnerHTML:{__html:e}})})),l().createElement("a",{className:(0,s.vf)("toggle"),onClick:Z},l().createElement(w.Z,{name:m?"code-close":"code"}))),l().createElement(U.y_.Transition,{visible:m,transitionTypes:["collapse","fade"]},l().createElement(v,{value:g}),l().createElement("a",{className:(0,s.vf)("toggle"),onClick:Z},l().createElement(w.Z,{name:m?"code-close":"code"}))))))},x=l().memo(b),y=function(e){var n=e.children,r=(0,a.Z)(n[1].props.children);try{r.sort((function(e,n){return e.props.children[0].props.children[0].localeCompare(n.props.children[0].props.children[0])}))}catch(e){console.log("sort fail...")}return l().createElement("div",{style:{overflow:"auto"}},l().createElement("table",{className:"doc-api-table"},n[0],l().cloneElement(n[1],{children:r})))},Z=r(35087),A=function(e){var n=[],r=(0,i.useContext)(Z.Z).setHeadings,c=e.source,p=e.examples;return l().useEffect((function(){r(n)}),[]),l().createElement(d(),{className:(0,s.EX)("_"),source:c,renderers:{code:v,heading:function(e){var r=e.level,t=e.children,o="h".concat(r),a="heading-".concat(function(e,n){return"".concat(e,"-").concat((n||"").replace(/[\W|-]/g,"-"))}(r,t[0]));return 2!==r&&3!==r||n.push({id:a,level:r,children:t}),l().createElement(o,{id:a},t)},table:y,html:function(e){return"<example />"===e.value?l().createElement(l().Fragment,null,function(){if(!p)return l().createElement("div",null);var e=(0,m.ZP)("示例","Example"),r="heading-example-h";return n.push({id:r,level:2,children:[e]}),[l().createElement("h2",{key:"h",id:r},e)].concat((0,a.Z)(p.map((function(e){var r="heading-".concat(e.name),a=e.title.split("\n"),i=(0,o.Z)(a,1)[0];return n.push({id:r,level:3,children:[i]}),l().createElement(x,(0,t.Z)({key:r,id:r},e))}))))}()):"<br>"===e.value||"<br />"===e.value?l().createElement("br",null):null},link:function(e){var n=0===e.href.indexOf("http")?"_blank":void 0;return n?l().createElement("a",{href:e.href,target:n},e.children):l().createElement(u.rU,{to:e.href},e.children)}}})},F=l().memo(A)},35087:function(e,n,r){var t=(0,r(87363).createContext)(void 0);n.Z=t},88981:function(e,n,r){var t=r(29439),o=r(87363),a=r.n(o),i=r(91291),l=r(22770),c=r(11888),d=r(75964),u=r(12025),s=r(35087),m=function(e){var n=e.children,r=(0,o.useState)(""),m=(0,t.Z)(r,2),p=m[0],f=m[1],g=(0,o.useState)([]),h=(0,t.Z)(g,2),v=h[0],E=h[1],U=(0,i.Z)().hash,w=(0,d.Z)((function(e){u.Z.push("".concat(u.Z.location.pathname,"#").concat(e));var n=document.getElementById(e);null==n||n.scrollIntoView()})),b=(0,d.Z)((function(){var e=document.documentElement.scrollTop,n=v.filter((function(e){return 3===e.level&&e.children.length}));if(0!==n.length){var r=n[0].id;n.forEach((function(n){var t=document.querySelector("#".concat(n.id));(null==t?void 0:t.offsetTop)<=e&&(r=n.id)})),f(r)}}));(0,o.useEffect)((function(){if(b(),U){var e=document.querySelector(U);setTimeout((function(){null==e||e.scrollIntoView()}),20)}return document.addEventListener("scroll",b),function(){document.removeEventListener("scroll",b)}}),[v]);var x=a().useMemo((function(){return{setHeadings:E}}),[]);return a().createElement("div",{className:(0,l.EH)("_")},a().createElement(s.Z.Provider,{value:x},n),a().createElement(c.Le,{className:(0,l.EH)("sticky"),top:50},a().createElement("div",{className:(0,l.EH)("nav")},v.map((function(e,n){var r=e.children.filter((function(e){return"string"==typeof e}));return a().createElement("a",{key:n,className:(0,l.EH)("level-".concat(e.level),p===e.id&&"active"),onClick:w.bind(null,e.id)},r)})))))};n.Z=a().memo(m)},5544:function(e,n,r){r.r(n),r.d(n,{default:function(){return s}});var t=r(87363),o=r.n(t),a=r(88981),i=r(75722),l=r(62625),c=r(36519),d=(0,l.ZP)("# Upload\r\n\r\n<example />\r\n\r\n## API\r\n\r\n### Upload\r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| accept | string | - | 上传文件类型, 和标准一致, 详见[accept](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept) |\r\n| action | string\\|(file:File)=>string | - | 上传地址 |\r\n| children | ReactNode | 必填 | 上传占位内容 |\r\n| beforeUpload | (file:File)=>EthanFile | - | 上传前处理 |\r\n| className | string | - | 扩展className |\r\n| defaultValue | EthanFile[] | - | 默认值 |\r\n| headers | object | - | 请求头部信息 |\r\n| limit | number | 100 | 最大上传文件数 |\r\n| disabled | boolean | false | 是否禁用上传行为 | \r\n| name | string | - | 服务端接收的 filename |\r\n| request | (options: RequestOptions) => void | - | 自定义上传方法<br /> options: 上传的配置 |\r\n| onChange | (values: EthanFile[],EthanFile) => void | - | 值改变回调 |\r\n| params | object | - | 提交到服务端的额外参数 |\r\n| recoverAble | boolean | false | 是否可以恢复已删除的value |\r\n| validator | UploadValidator | - | 上传前文件校验 |\r\n| value | EthanFile[] | \\[] | defaultValue 和 value 可以同时设置，defaultValue 会被value覆盖<br />在Form中，value会被表单接管，value无效 |\r\n| withCredentials | boolean | false | 是否携带 cookie |\r\n| multiple | boolean | false | 是否支持多选文件 |\r\n| renderContent | (file:EthanFile) => ReactNode | - | 自定义File的内容 |\r\n| drop | boolean | false | 是否开启拖拽上传文件 |\r\n| showUploadList | boolean | true | 是否展示上传列表 |\r\n\r\n\r\n### Upload.Image\r\n\r\n**Upload.Image在Upload的Props上添加下面的Props**\r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| width | number | 80 | 图片宽度 |\r\n| height | number | 80 | 图片高度 |\r\n| validator | UploadImageValidator | - | 上传前文件校验 |\r\n\r\n### Upload.Button\r\n\r\n**Upload.Button在Upload的Props上添加下面的Props,但不支持多选**\r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| type | 'primary' \\| success' \\| 'info' \\| 'warning' \\| 'danger' | primary | 按钮类型 |\r\n| placeholder | ReactNode | - | 按钮默认内容 |\r\n| loading | ReactNode | - | 上传中按钮的内容，如果是字符串默认会有spin loading |\r\n\r\n\r\n### RequestOptions \r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| file |  File | - |  传入的文件 |\r\n| name | string | - | 服务端接收的 filename |\r\n| url | string | - | 请求的地址 |\r\n| onError | (xhr: XMLHttpRequest) => void | -| 上传出错事件 |\r\n| onProgress |  (e: ProgressEvent) => void | - | 上传进度事件 |\r\n| onLoad | (xhr: XMLHttpRequest)=> void | - | 上传成功事件 |\r\n| params | object | - | 上传的额外参数 |\r\n| headers | object | - | 请求的头部信息 |\r\n| withCredentials | boolean | false | 是否携带 cookie |\r\n\r\n\r\n### UploadValidator\r\n\r\n| 属性 | 类型 | 说明 |\r\n| --- | --- | --- |\r\n| ext | (ext: string) => Error \\| void | 判断后缀名，传入参数为文件后缀，校验失败返回 Error |\r\n| size | (size: number) => Error \\| void | 判断文件大小，校验失败返回 Error |\r\n| customValidator | (file: File) => Error \\| void | 自定义校验 |\r\n\r\n\r\n### UploadImageValidator\r\n\r\n**UploadImageValidator在UploadValidator上增加以下的属性**\r\n\r\n| 属性 | 类型 | 说明 |\r\n| --- | --- | --- |\r\n| imageSize | (image: HTMLImageElement) => Error \\| void | 只对 Image 有效，判断图片尺寸，校验失败返回 Error |\r\n\r\n### EthanFile\r\n\r\n| 属性 | 类型 | 说明 |\r\n| --- | --- | --- |\r\n| id | React.Key | 唯一Key |\r\n| name | string | 文件名 |\r\n| process | number | 上传进度 |\r\n| status | 'UPLOADING' \\| 'SUCCESS' \\| 'ERROR' \\| 'REMOVED' \\| 'MANUAL' \\| 'PENDING' | 文件的状态 |\r\n| blob | File | 选中的文件 |\r\n| message | string | 文件携带的信息 |\r\n| xhr | XMLHttpRequest | - |\r\n| data | string | 文件的额外信息，在Upload.Image中为图片的src |\r\n\r\n","# Upload\r\n\r\n<example />\r\n\r\n## API\r\n\r\n### Upload\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| accept | string | - | The type of the upload file, same as the standard,See details [accept](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept)  |\r\n| action | string\\|(file:File)=>string | - | The address for uploading |\r\n| children | ReactNode | required | Upload placeholder |\r\n| beforeUpload | (file:File)=>EthanFile | - | Before upload handler |\r\n| className | string | - | Extend className |\r\n| defaultValue | EthanFile[] | -  | default value |\r\n| headers | object | - | Request headers |\r\n| limit | number | 100 | Maximum number of uploaded files |\r\n| disabled | boolean | false | disabled upload action | \r\n| name | string | - | The key access data in the Form  |\r\n| request | (options: RequestOptions) => void | - | Custom upload method<br /> options: the options of upload |\r\n| onChange | (values: EthanFile[],EthanFile) => void | - | The callback function when the value is changing |\r\n| params | object | - | Additional parameters submitted to the server |\r\n| recoverAble | boolean | true | Whether to recover deleted values. |\r\n| validator | UploadValidator | - | Check file before uploading |\r\n| value | EthanFile[] | \\[] | value |\r\n| withCredentials | boolean | false | Whether to take the cookie |\r\n| multiple | boolean | false | Whether multi-select files are supported |\r\n| renderContent | (file:EthanFile) => ReactNode | - | Custom content  | \r\n| drop | boolean | false | drop to update |\r\n| showUploadList | boolean | true | show upload list |\r\n\r\n### Upload.Image\r\n\r\n**Upload.Image Add the following Props to the Props of the Upload.**\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| width | number | 80 | image width |\r\n| height | number | 80 | image height |\r\n| validator | UploadImageValidator | - | Check file before uploading |\r\n\r\n### Upload.Button\r\n\r\n**Upload.Button Adds the following Props to the uploads, but multiple options are not supported.**\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| type | string | primary | options: \\['primary', success', 'info', 'warning', 'danger'\\] |\r\n| placeholder | ReactNode | - | button default content |\r\n| loading | ReactNode | - | content of uploading, will have spin if a string |\r\n\r\n\r\n### RequestOptions \r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| file |  File | - |  The file |\r\n| name | string | - | Filename received by the server |\r\n| url | string | - | Requested address |\r\n| onError | (xhr: XMLHttpRequest) => void | -| Upload error event |\r\n| onProgress |  (e: ProgressEvent) => void | - | Upload Progress event |\r\n| onLoad | (xhr: XMLHttpRequest)=> void | - | Uploading successful event |\r\n| params | object | - | Additional parameters for upload |\r\n| headers | object | - | Request header information |\r\n| withCredentials | boolean | false | Whether to take the cookie |\r\n\r\n### UploadValidator\r\n\r\n| Property | Type | Description |\r\n| --- | --- | --- |\r\n| ext | (ext: string) => Error \\| void | Check the suffix name. The parameter passed in is the file suffix. Error is returned if the verification fails |\r\n| size | (size: number) => Error \\| void | Check the file size. An Error message is returned if the verification fails |\r\n| customValidator | (file: File) => Error \\| void | Custom check |\r\n\r\n\r\n### UploadImageValidator\r\n\r\n**UploadImageValidator Adds the following attributes to UploadValidator**\r\n\r\n| Property | Type | Description |\r\n| --- | --- | --- |\r\n| imageSize | (image: HTMLImageElement) => Error \\| void | This parameter is valid only for Image. If the Image size is judged, Error is returned if the verification fails |\r\n\r\n### EthanFile\r\n\r\n| Property | Type | Description |\r\n| --- | --- | --- |\r\n| id | React.Key | Key |\r\n| name | string | File name |\r\n| process | number | Upload progress |\r\n| status | 'UPLOADING' \\| 'SUCCESS' \\| 'ERROR' \\| 'REMOVED' \\| 'MANUAL' \\| 'PENDING' | File status |\r\n| blob | File | Selected file |\r\n| message | string | The information carried by the file |\r\n| xhr | XMLHttpRequest | - |\r\n| data | string | Additional information for the file, in upload. Image, is the SRC of the Image |\r\n"),u=[{name:"01-base",title:(0,l.ZP)("基本用法 \n 基础的文件上传","Base \n Basic usage for uploading file."),component:r(89399).Z,rawText:r(5598).Z},{name:"01-renderContent",title:(0,l.ZP)("自定义内容 \n 默认展示的结果为File的name, 如果有需求需要, 可以用 renderContent 自行处理","Custom content \n The result of the default display is the name of file. If there is a need, you can use the renderContent to handle it yourself."),component:r(33721).Z,rawText:r(95713).Z},{name:"02-image",title:(0,l.ZP)("上传图片 \n 使用 Upload.Image 处理带预览的图片上传","Image \n Use Upload.Image to upload and preview images."),component:r(22450).Z,rawText:r(2328).Z},{name:"03-button",title:(0,l.ZP)("按钮上传 \n 使用 Upload.Button 展示单个文件的上传进度","Button \n Use Upload.Button to show the upload progress of individual files"),component:r(99594).Z,rawText:r(61950).Z},{name:"04-validator",title:(0,l.ZP)("校验 \n 通过 validator 校验文件","Validator \n Set validator to validate the file."),component:r(84112).Z,rawText:r(4881).Z},{name:"05-control",title:(0,l.ZP)("受控 \n 传入value使Upload受控","Control \n Pass value props control Upload fileList"),component:r(41706).Z,rawText:r(14611).Z},{name:"06-error",title:(0,l.ZP)("异常处理 \n onError 用来处理上传到服务器返回的异常","Error \n Set onError to handle exceptions returned by uploading to the server."),component:r(2270).Z,rawText:r(24910).Z},{name:"07-recover",title:(0,l.ZP)("恢复删除 \n 设置 recoverAble 为 true，点击删除后，文件会标记为已删除，可以通过恢复图标恢复","Recover \n Set recoverAble to true, Clicking delete icon will not remove the file, but will mark it as deleted."),component:r(27196).Z,rawText:r(53970).Z},{name:"08-request",title:(0,l.ZP)("自定义上传 \n 通过 request 函数，替代默认上传方法","Custom Request \n Set request property to use your own XMLHttpRequest."),component:r(95233).Z,rawText:r(17082).Z},{name:"09-zip",title:(0,l.ZP)(" \n 此事例演示通过自定义函数压缩文件后上传"," \n Zip file and upload."),component:r(64482).Z,rawText:r(8832).Z},{name:"10-beforeUpload",title:(0,l.ZP)("手动上传 \n beforeUpload返回一个Promise对象，resolve一个status为MANUAL的EthanFile","Manually upload \n BeforeUpload return a Promise Object and resolve an EthanFile with MANUAL status"),component:r(46874).Z,rawText:r(32983).Z},{name:"11-beforeUpload",title:(0,l.ZP)("处理文件 \n 利用beforeUpload预先处理文件，例如添加水印","Process File \n BeforeUpload return a Promise Object and resolve an EthanFile with MANUAL status"),component:r(58230).Z,rawText:r(50816).Z},{name:"12-dragger",title:(0,l.ZP)("拖拽上传 \n 设置 drop 来支持拖拽上传","Drag and Drop \n set drop to Drag files to upload."),component:r(94366).Z,rawText:r(51316).Z}],s=(0,c.Z)((function(){return o().createElement(a.Z,null,o().createElement(i.Z,{source:d,examples:u}))}))},67473:function(e,n,r){r.d(n,{a:function(){return t}});var t="//jsonplaceholder.typicode.com/posts"},89399:function(e,n,r){var t=r(87363),o=r.n(t),a=r(11888),i=r(67473);n.Z=function(){return o().createElement(a.gq,{action:i.a,accept:"image/*",name:"file",onChange:console.log,limit:3,style:{width:300}},o().createElement(a.zx,null,o().createElement(a.Ay,{name:"cloud-upload ",style:{marginRight:4}}),"Upload file"))}},33721:function(e,n,r){r.d(n,{Z:function(){return c}});var t=r(87363),o=r.n(t),a=r(11888),i=r(67473),l=r(44592);function c(){return o().createElement(o().Fragment,null,o().createElement(a.gq,{action:i.a,accept:"image/*",name:"file",renderContent:function(e){return o().createElement("span",null,e.name,"(",e.blob.size/1e3,"kb)")},limit:3,style:{width:300,marginBottom:30}},o().createElement(a.zx,null,o().createElement(a.Ay,{name:"cloud-upload ",style:{marginRight:4}}),"Upload file")),o().createElement(a.gq.Image,{action:"/upload/",accept:"image/*",name:"file",limit:3,renderContent:function(e){return o().createElement(l.Z,{width:"100%",height:"100%",src:e.data,alt:"not found",fit:"contain"})}}))}},22450:function(e,n,r){r.d(n,{Z:function(){return l}});var t=r(87363),o=r.n(t),a=r(11888),i=r(67473);function l(){return o().createElement(a.gq.Image,{drop:!0,action:i.a,accept:"image/*",name:"file",limit:3,width:300,height:300})}},99594:function(e,n,r){r.d(n,{Z:function(){return l}});var t=r(87363),o=r.n(t),a=r(11888),i=r(67473);function l(){return o().createElement(a.gq.Button,{action:i.a,name:"file",loading:"正在上传...",placeholder:"点击上传",type:"primary"})}},84112:function(e,n,r){r.d(n,{Z:function(){return l}});var t=r(87363),o=r.n(t),a=r(11888),i=r(67473);function l(){return o().createElement("div",null,o().createElement(a.gq,{action:i.a,accept:"image/*",multiple:!0,name:"file",style:{width:300,marginBottom:80},validator:{size:function(e){return e>10240?new Error("max file size is 10KB"):void 0}}},o().createElement(a.zx,null,o().createElement(a.Ay,{name:"cloud-upload"})," Upload file")),o().createElement(a.gq.Image,{action:"/upload/",accept:"image/*",name:"file",width:200,height:100,limit:1,style:{width:300,marginBottom:80},onChange:console.log,validator:{imageSize:function(e){return 200!==e.width||100!==e.height?new Error("only allow 200px * 100px"):void 0},ext:function(e){return["jpg","png"].includes(e)?void 0:new Error("File extension must be jpg or png")}}},o().createElement("div",{style:{margin:"auto",color:"#999",textAlign:"center"}},o().createElement(a.Ay,{name:"cloud-upload "})," Upload Image",o().createElement("br",null),"Allow size 200 * 100")),o().createElement(a.gq.Image,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",multiple:!0,name:"file",validator:{size:function(e){return e>10240?new Error("max file size is 10KB"):void 0}}}))}},41706:function(e,n,r){var t=r(29439),o=r(87363),a=r.n(o),i=r(11888),l=r(67473);n.Z=function(){var e=(0,o.useState)([{id:"test",status:"MANUAL",name:"imag test",data:"https://img.alicdn.com/bao/uploaded/i4/54458674/O1CN01sIQvPX2Dwk8PBXBx2_!!54458674.png_60x60.jpg"}]),n=(0,t.Z)(e,2),r=n[0],c=n[1];return a().createElement(i.gq.Image,{action:l.a,accept:"image/*",name:"file",value:r,onChange:function(e){c(e)},limit:3,style:{width:300}})}},2270:function(e,n,r){r.d(n,{Z:function(){return i}});var t=r(87363),o=r.n(t),a=r(11888);function i(){return o().createElement("div",null,o().createElement(a.gq,{action:"/path-no-exist",accept:"image/*",onError:function(e){return 404===e.status?"Url not found.":"Upload Fail."},limit:3,style:{width:300,marginBottom:30}},o().createElement(a.zx,null,o().createElement(a.Ay,{name:"cloud-upload"})," Upload file")),o().createElement(a.gq.Image,{action:"/path-no-exist",accept:"image/*",onError:function(e){return 404===e.status?"Url not found.":"Upload Fail."}}))}},27196:function(e,n,r){r.d(n,{Z:function(){return l}});var t=r(87363),o=r.n(t),a=r(11888),i=r(67473);function l(){return o().createElement("div",null,o().createElement(a.gq,{action:i.a,accept:"image/*",name:"file",multiple:!0,limit:2,recoverAble:!0,style:{width:300,marginBottom:30}},o().createElement(a.zx,null,o().createElement(a.Ay,{name:"cloud-upload"})," Upload file")),o().createElement(a.gq.Image,{action:"/upload/",accept:"image/*",multiple:!0,limit:1,recoverAble:!0,name:"file"}))}},95233:function(e,n,r){r.d(n,{Z:function(){return c}});var t=r(87363),o=r.n(t),a=r(11888),i=r(67473),l=function(e){var n=e.file,r=e.onLoad,t=e.onProgress,o=new XMLHttpRequest;o.open("post",i.a);var a=new FormData;return a.append("file",n),o.upload.onprogress=t,o.onload=function(){return r(o)},o.send(a),o};function c(){return o().createElement(a.gq,{accept:"image/*",limit:3,style:{width:300},request:l},o().createElement(a.zx,null,o().createElement(a.Ay,{name:"cloud-upload"})," Upload file"))}},64482:function(e,n,r){r.d(n,{Z:function(){return c}});var t=r(87363),o=r.n(t),a=r(11888),i=r(67473),l=function(e){var n=e.file,r=e.onLoad,t=e.onError,o=e.onProgress,l=new XMLHttpRequest;l.open("post",i.a);var c=new window.JSZip;c.file(n.name,n);var d=(new Date).getTime();return c.generateInternalStream({type:"blob"}).accumulate((function(e){a.v0.loading("current zipping:".concat(Math.floor(100*e.percent),"%"),0,{id:d})})).then((function(e){var i=new File([e],"".concat(n.name,".zip")),c=new FormData;c.append("file",i),l.upload.onprogress=function(e){o(e),a.v0.loading("current uploading:".concat(Math.floor(e.loaded/e.total*100),"%"),0,{id:d})},l.onload=function(e){r(e.currentTarget),a.v0.success("upload success",2,{id:d})},l.onerror=function(){t(),a.v0.error("update fail",2,{id:d})},l.send(c)})),l};function c(){return o().createElement(a.gq,{limit:3,style:{width:300},request:l,onChange:console.log},o().createElement(a.zx,null,o().createElement(a.Ay,{name:"cloud-upload"})," Upload file"))}},46874:function(e,n,r){r.d(n,{Z:function(){return i}});var t=r(87363),o=r.n(t),a=r(11888);function i(){return o().createElement("div",null,o().createElement(a.gq,{name:"file",limit:3,style:{width:300},beforeUpload:function(){return Promise.resolve({status:"MANUAL"})},onChange:console.log},o().createElement(a.zx,null,o().createElement(a.Ay,{name:"cloud-upload ",style:{marginRight:4}}),"Upload file")))}},58230:function(e,n,r){r.d(n,{Z:function(){return l}});var t=r(87363),o=r.n(t),a=r(11888),i=r(67473);function l(){return o().createElement("div",null,o().createElement(a.gq.Image,{action:i.a,name:"file",limit:3,style:{width:300},beforeUpload:function(e){return new Promise((function(n){var r=new FileReader;r.readAsDataURL(e),r.onload=function(){var e=document.createElement("img");e.src=r.result,e.onload=function(){var r=document.createElement("canvas");r.width=e.naturalWidth,r.height=e.naturalHeight;var t=r.getContext("2d");t.drawImage(e,0,0),t.fillStyle="red",t.textBaseline="middle",t.font="33px Arial",t.fillText("Ethan",20,20),r.toBlob((function(e){var t=r.toDataURL("image/jpeg",1);n({blob:e,data:t})}))}}}))}}))}},94366:function(e,n,r){r.d(n,{Z:function(){return l}});var t=r(87363),o=r.n(t),a=r(11888),i=r(67473);function l(){return o().createElement("div",null,o().createElement(a.gq.Image,{action:i.a,accept:"image/*",name:"file",limit:3,width:250,drop:!0},o().createElement("div",{style:{textAlign:"center",width:"100%",padding:20}},o().createElement(a.Ay,{style:{color:"#409dfd",fontSize:20},name:"image"}),o().createElement("br",null),"Click or Drag image to upload")),o().createElement("br",null),o().createElement(a.gq,{action:i.a,multiple:!0,name:"file",limit:3,style:{width:300},drop:!0},o().createElement(a.zx,null,o().createElement(a.Ay,{name:"file"}),"  Drop file to upload")))}},36519:function(e,n,r){var t=r(11888),o=r(87363),a=r.n(o);n.Z=function(e){var n=function(n){return(0,o.useEffect)((function(){return t.gb.finish(),function(){t.gb.start()}}),[]),a().createElement(e,n)};return a().memo(n)}},5598:function(e,n){n.Z="/**\r\n * cn - 基本用法\r\n *    -- 基础的文件上传\r\n * en - Base\r\n *    -- Basic usage for uploading file.\r\n\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nexport default () => (\r\n    <Upload action={action} accept=\"image/*\" name=\"file\" onChange={console.log} limit={3} style={{ width: 300 }}>\r\n        <Button>\r\n            <FontAwesome name=\"cloud-upload \" style={{ marginRight: 4 }} />\r\n            Upload file\r\n        </Button>\r\n    </Upload>\r\n)\r\n"},95713:function(e,n){n.Z='/**\r\n * cn - 自定义内容\r\n *    -- 默认展示的结果为File的name, 如果有需求需要, 可以用 renderContent 自行处理\r\n * en - Custom content\r\n *    -- The result of the default display is the name of file. If there is a need, you can use the renderContent to handle it yourself.\r\n\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Button, FontAwesome } from \'ethan-ui\'\r\nimport { action } from \'doc/config\'\r\nimport ProImage from \'@/component/ProImage/ProImage\'\r\n\r\nexport default function () {\r\n    return (\r\n        <>\r\n            <Upload\r\n                action={action}\r\n                accept="image/*"\r\n                name="file"\r\n                renderContent={(f) => (\r\n                    <span>\r\n                        {f.name}({f.blob.size / 1000}kb)\r\n                    </span>\r\n                )}\r\n                limit={3}\r\n                style={{ width: 300, marginBottom: 30 }}\r\n            >\r\n                <Button>\r\n                    <FontAwesome name="cloud-upload " style={{ marginRight: 4 }} />\r\n                    Upload file\r\n                </Button>\r\n            </Upload>\r\n\r\n            <Upload.Image\r\n                action="/upload/"\r\n                accept="image/*"\r\n                name="file"\r\n                limit={3}\r\n                renderContent={(file) => (\r\n                    <ProImage width="100%" height="100%" src={file.data} alt="not found" fit="contain" />\r\n                )}\r\n            />\r\n        </>\r\n    )\r\n}\r\n'},2328:function(e,n){n.Z="/**\r\n * cn - 上传图片\r\n *    -- 使用 Upload.Image 处理带预览的图片上传\r\n * en - Image\r\n *    -- Use Upload.Image to upload and preview images.\r\n */\r\nimport React from 'react'\r\nimport { Upload } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nexport default function () {\r\n    return <Upload.Image drop action={action} accept=\"image/*\" name=\"file\" limit={3} width={300} height={300} />\r\n}\r\n"},61950:function(e,n){n.Z='/**\r\n * cn - 按钮上传\r\n *    -- 使用 Upload.Button 展示单个文件的上传进度\r\n * en - Button\r\n *    -- Use Upload.Button to show the upload progress of individual files\r\n */\r\nimport React from \'react\'\r\nimport { Upload } from \'ethan-ui\'\r\nimport { action } from \'doc/config\'\r\n\r\nexport default function () {\r\n    return <Upload.Button action={action} name="file" loading="正在上传..." placeholder="点击上传" type="primary" />\r\n}\r\n'},4881:function(e,n){n.Z="/**\r\n * cn - 校验\r\n *    -- 通过 validator 校验文件\r\n * en - Validator\r\n *    -- Set validator to validate the file.\r\n */\r\nimport React from 'react'\r\nimport { Upload, FontAwesome, Button } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <Upload\r\n                action={action}\r\n                accept=\"image/*\"\r\n                multiple\r\n                name=\"file\"\r\n                style={{ width: 300, marginBottom: 80 }}\r\n                validator={{\r\n                    size: (s) => (s > 10240 ? new Error('max file size is 10KB') : undefined),\r\n                }}\r\n            >\r\n                <Button>\r\n                    <FontAwesome name=\"cloud-upload\" /> Upload file\r\n                </Button>\r\n            </Upload>\r\n\r\n            <Upload.Image\r\n                action=\"/upload/\"\r\n                accept=\"image/*\"\r\n                name=\"file\"\r\n                width={200}\r\n                height={100}\r\n                limit={1}\r\n                style={{ width: 300, marginBottom: 80 }}\r\n                onChange={console.log}\r\n                validator={{\r\n                    imageSize: (img) =>\r\n                        img.width !== 200 || img.height !== 100 ? new Error('only allow 200px * 100px') : undefined,\r\n                    ext: (ext) =>\r\n                        ['jpg', 'png'].includes(ext) ? undefined : new Error('File extension must be jpg or png'),\r\n                }}\r\n            >\r\n                <div style={{ margin: 'auto', color: '#999', textAlign: 'center' }}>\r\n                    <FontAwesome name=\"cloud-upload \" /> Upload Image\r\n                    <br />\r\n                    Allow size 200 * 100\r\n                </div>\r\n            </Upload.Image>\r\n\r\n            <Upload.Image\r\n                action=\"//jsonplaceholder.typicode.com/posts\"\r\n                accept=\"image/*\"\r\n                multiple\r\n                name=\"file\"\r\n                validator={{\r\n                    size: (s) => (s > 10240 ? new Error('max file size is 10KB') : undefined),\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},14611:function(e,n){n.Z="/**\r\n * cn - 受控\r\n *    -- 传入value使Upload受控\r\n * en - Control\r\n *    -- Pass value props control Upload fileList\r\n\r\n */\r\nimport React, { useState } from 'react'\r\nimport { Upload } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\nimport { EthanFile } from '@/component/Upload/type'\r\n\r\nexport default () => {\r\n    const [fileList, updateFileList] = useState<EthanFile[]>([\r\n        {\r\n            id: 'test',\r\n            status: 'MANUAL',\r\n            name: 'imag test',\r\n            data: 'https://img.alicdn.com/bao/uploaded/i4/54458674/O1CN01sIQvPX2Dwk8PBXBx2_!!54458674.png_60x60.jpg',\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <Upload.Image\r\n            action={action}\r\n            accept=\"image/*\"\r\n            name=\"file\"\r\n            value={fileList}\r\n            onChange={(v) => {\r\n                updateFileList(v)\r\n            }}\r\n            limit={3}\r\n            style={{ width: 300 }}\r\n        />\r\n    )\r\n}\r\n"},24910:function(e,n){n.Z="/**\r\n * cn - 异常处理\r\n *    -- onError 用来处理上传到服务器返回的异常\r\n * en - Error\r\n *    -- Set onError to handle exceptions returned by uploading to the server.\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <Upload\r\n                action=\"/path-no-exist\"\r\n                accept=\"image/*\"\r\n                onError={(xhr) => {\r\n                    if (xhr.status === 404) return 'Url not found.'\r\n                    return 'Upload Fail.'\r\n                }}\r\n                limit={3}\r\n                style={{ width: 300, marginBottom: 30 }}\r\n            >\r\n                <Button>\r\n                    <FontAwesome name=\"cloud-upload\" /> Upload file\r\n                </Button>\r\n            </Upload>\r\n\r\n            <Upload.Image\r\n                action=\"/path-no-exist\"\r\n                accept=\"image/*\"\r\n                onError={(xhr) => {\r\n                    if (xhr.status === 404) return 'Url not found.'\r\n                    return 'Upload Fail.'\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},53970:function(e,n){n.Z='/**\r\n * cn - 恢复删除\r\n *    -- 设置 recoverAble 为 true，点击删除后，文件会标记为已删除，可以通过恢复图标恢复\r\n * en - Recover\r\n *    -- Set recoverAble to true, Clicking delete icon will not remove the file, but will mark it as deleted.\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Button, FontAwesome } from \'ethan-ui\'\r\nimport { action } from \'doc/config\'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <Upload\r\n                action={action}\r\n                accept="image/*"\r\n                name="file"\r\n                multiple\r\n                limit={2}\r\n                recoverAble\r\n                style={{ width: 300, marginBottom: 30 }}\r\n            >\r\n                <Button>\r\n                    <FontAwesome name="cloud-upload" /> Upload file\r\n                </Button>\r\n            </Upload>\r\n\r\n            <Upload.Image action="/upload/" accept="image/*" multiple limit={1} recoverAble name="file" />\r\n        </div>\r\n    )\r\n}\r\n'},17082:function(e,n){n.Z="/**\r\n * cn - 自定义上传\r\n *    -- 通过 request 函数，替代默认上传方法\r\n * en - Custom Request\r\n *    -- Set request property to use your own XMLHttpRequest.\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nconst request = (options) => {\r\n    const { file, onLoad, onProgress } = options\r\n    const xhr = new XMLHttpRequest()\r\n    xhr.open('post', action)\r\n\r\n    const data = new FormData()\r\n    data.append('file', file)\r\n    xhr.upload.onprogress = onProgress\r\n    xhr.onload = () => onLoad(xhr)\r\n    xhr.send(data)\r\n\r\n    return xhr\r\n}\r\n\r\nexport default function () {\r\n    return (\r\n        <Upload accept=\"image/*\" limit={3} style={{ width: 300 }} request={request}>\r\n            <Button>\r\n                <FontAwesome name=\"cloud-upload\" /> Upload file\r\n            </Button>\r\n        </Upload>\r\n    )\r\n}\r\n"},8832:function(e,n){n.Z="/**\r\n * cn -\r\n *    -- 此事例演示通过自定义函数压缩文件后上传\r\n * en -\r\n *    -- Zip file and upload.\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome, Message } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nconst request = (options) => {\r\n    const { file, onLoad, onError, onProgress } = options\r\n\r\n    const xhr = new XMLHttpRequest()\r\n    xhr.open('post', action)\r\n\r\n    const zip = new window.JSZip()\r\n\r\n    zip.file(file.name, file)\r\n\r\n    const id = new Date().getTime()\r\n\r\n    zip.generateInternalStream({ type: 'blob' })\r\n        .accumulate((e) => {\r\n            Message.loading(`current zipping:${Math.floor(e.percent * 100)}%`, 0, { id })\r\n        })\r\n        .then((content) => {\r\n            const zipFile = new File([content], `${file.name}.zip`)\r\n\r\n            const data = new FormData()\r\n\r\n            data.append('file', zipFile)\r\n\r\n            xhr.upload.onprogress = (e) => {\r\n                onProgress(e)\r\n\r\n                Message.loading(`current uploading:${Math.floor((e.loaded / e.total) * 100)}%`, 0, { id })\r\n            }\r\n\r\n            xhr.onload = (e) => {\r\n                onLoad(e.currentTarget)\r\n\r\n                Message.success('upload success', 2, { id })\r\n            }\r\n\r\n            xhr.onerror = () => {\r\n                onError()\r\n\r\n                Message.error('update fail', 2, { id })\r\n            }\r\n            xhr.send(data)\r\n        })\r\n\r\n    return xhr\r\n}\r\n\r\nexport default function () {\r\n    return (\r\n        <Upload limit={3} style={{ width: 300 }} request={request} onChange={console.log}>\r\n            <Button>\r\n                <FontAwesome name=\"cloud-upload\" /> Upload file\r\n            </Button>\r\n        </Upload>\r\n    )\r\n}\r\n"},32983:function(e,n){n.Z="/**\r\n * cn - 手动上传\r\n *    -- beforeUpload返回一个Promise对象，resolve一个status为MANUAL的EthanFile\r\n * en - Manually upload\r\n *    -- BeforeUpload return a Promise Object and resolve an EthanFile with MANUAL status\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <Upload\r\n                name=\"file\"\r\n                limit={3}\r\n                style={{ width: 300 }}\r\n                beforeUpload={() => Promise.resolve({ status: 'MANUAL' })}\r\n                onChange={console.log}\r\n            >\r\n                <Button>\r\n                    <FontAwesome name=\"cloud-upload \" style={{ marginRight: 4 }} />\r\n                    Upload file\r\n                </Button>\r\n            </Upload>\r\n        </div>\r\n    )\r\n}\r\n"},50816:function(e,n){n.Z="/**\r\n * cn - 处理文件\r\n *    -- 利用beforeUpload预先处理文件，例如添加水印\r\n * en - Process File\r\n *    -- BeforeUpload return a Promise Object and resolve an EthanFile with MANUAL status\r\n */\r\nimport React from 'react'\r\nimport { Upload } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <Upload.Image\r\n                action={action}\r\n                name=\"file\"\r\n                limit={3}\r\n                style={{ width: 300 }}\r\n                beforeUpload={(file) =>\r\n                    new Promise((resolve) => {\r\n                        const reader = new FileReader()\r\n\r\n                        reader.readAsDataURL(file)\r\n\r\n                        reader.onload = () => {\r\n                            const img = document.createElement('img')\r\n\r\n                            img.src = reader.result as string\r\n\r\n                            img.onload = () => {\r\n                                const canvas = document.createElement('canvas')\r\n\r\n                                canvas.width = img.naturalWidth\r\n                                canvas.height = img.naturalHeight\r\n\r\n                                const ctx = canvas.getContext('2d')\r\n\r\n                                ctx.drawImage(img, 0, 0)\r\n                                ctx.fillStyle = 'red'\r\n                                ctx.textBaseline = 'middle'\r\n                                ctx.font = '33px Arial'\r\n                                ctx.fillText('Ethan', 20, 20)\r\n                                canvas.toBlob((blob: File) => {\r\n                                    /** @see https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLCanvasElement/toDataURL */\r\n                                    const data = canvas.toDataURL('image/jpeg', 1)\r\n\r\n                                    resolve({ blob, data })\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"},51316:function(e,n){n.Z="/**\r\n * cn - 拖拽上传\r\n *    -- 设置 drop 来支持拖拽上传\r\n * en - Drag and Drop\r\n *    -- set drop to Drag files to upload.\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan-ui'\r\nimport { action } from 'doc/config'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <Upload.Image action={action} accept=\"image/*\" name=\"file\" limit={3} width={250} drop>\r\n                <div style={{ textAlign: 'center', width: '100%', padding: 20 }}>\r\n                    <FontAwesome style={{ color: '#409dfd', fontSize: 20 }} name=\"image\" />\r\n                    <br />\r\n                    Click or Drag image to upload\r\n                </div>\r\n            </Upload.Image>\r\n            <br />\r\n            <Upload action={action} multiple name=\"file\" limit={3} style={{ width: 300 }} drop>\r\n                <Button>\r\n                    <FontAwesome name=\"file\" />\r\n                    &nbsp; Drop file to upload\r\n                </Button>\r\n            </Upload>\r\n        </div>\r\n    )\r\n}\r\n"}}]);