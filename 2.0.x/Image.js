"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[1686],{75722:function(e,n,t){t.d(n,{Z:function(){return z}});var r=t(87462),i=t(29439),a=t(93433),o=t(87363),l=t.n(o),c=t(92242),h=t.n(c),u=t(73727),m=t(22770),s=t(62625),d=t(94184),g=t.n(d),p=t(15660),f=t.n(p),b=(t(62356),function(e){var n=e.language,t=void 0===n?"lang-jsx":n,r=e.value,i=(0,o.useRef)(null);return(0,o.useEffect)((function(){f().highlightElement(i.current,!1)}),[]),l().createElement("pre",{ref:i,className:g()(t,(0,m.vf)("pre"))},l().createElement("code",null,r))}),y=t(84506),v=t(11888),E=t(91391),w=function(e){var n=e.component,t=e.id,r=e.rawText,a=void 0===r?"":r,c=e.title,h=(0,o.useState)(!1),u=(0,i.Z)(h,2),s=u[0],d=u[1],g=(0,o.useRef)((0,o.createElement)(n)).current,p=a.replace(/(^|\n|\r)\s*\/\*[\s\S]*?\*\/\s*(?:\r|\n|$)/,"").trim(),f=c.split("\n"),w=(0,y.Z)(f),Z=w[0],_=w.slice(1),I=function(){d(!s)};return l().createElement(l().Fragment,null,Z&&l().createElement("h3",{id:t},Z),l().createElement(v.Zr,{placeholder:l().createElement("div",{className:(0,m.vf)("placeholder")},l().createElement(v.yC,{size:"54px",name:"four-dots",color:"#53a0fd"}))},l().createElement("div",{className:(0,m.vf)("_",s&&"showcode")},l().createElement("div",{className:(0,m.vf)("body")},g),c.length>0&&l().createElement("div",{className:(0,m.vf)("desc")},_.map((function(e,n){return l().createElement("div",{key:n,dangerouslySetInnerHTML:{__html:e}})})),l().createElement("a",{className:(0,m.vf)("toggle"),onClick:I},l().createElement(E.Z,{name:s?"code-close":"code"}))),l().createElement(v.y_.Transition,{visible:s,transitionTypes:["collapse","fade"]},l().createElement(b,{value:p}),l().createElement("a",{className:(0,m.vf)("toggle"),onClick:I},l().createElement(E.Z,{name:s?"code-close":"code"}))))))},Z=l().memo(w),_=function(e){var n=e.children,t=(0,a.Z)(n[1].props.children);try{t.sort((function(e,n){return e.props.children[0].props.children[0].localeCompare(n.props.children[0].props.children[0])}))}catch(e){console.log("sort fail...")}return l().createElement("div",{style:{overflow:"auto"}},l().createElement("table",{className:"doc-api-table"},n[0],l().cloneElement(n[1],{children:t})))},I=t(35087),T=function(e){var n=[],t=(0,o.useContext)(I.Z).setHeadings,c=e.source,d=e.examples;return l().useEffect((function(){t(n)}),[]),l().createElement(h(),{className:(0,m.EX)("_"),source:c,renderers:{code:b,heading:function(e){var t=e.level,r=e.children,i="h".concat(t),a="heading-".concat(function(e,n){return"".concat(e,"-").concat((n||"").replace(/[\W|-]/g,"-"))}(t,r[0]));return 2!==t&&3!==t||n.push({id:a,level:t,children:r}),l().createElement(i,{id:a},r)},table:_,html:function(e){return"<example />"===e.value?l().createElement(l().Fragment,null,function(){if(!d)return l().createElement("div",null);var e=(0,s.ZP)("示例","Example"),t="heading-example-h";return n.push({id:t,level:2,children:[e]}),[l().createElement("h2",{key:"h",id:t},e)].concat((0,a.Z)(d.map((function(e){var t="heading-".concat(e.name),a=e.title.split("\n"),o=(0,i.Z)(a,1)[0];return n.push({id:t,level:3,children:[o]}),l().createElement(Z,(0,r.Z)({key:t,id:t},e))}))))}()):"<br>"===e.value||"<br />"===e.value?l().createElement("br",null):null},link:function(e){var n=0===e.href.indexOf("http")?"_blank":void 0;return n?l().createElement("a",{href:e.href,target:n},e.children):l().createElement(u.rU,{to:e.href},e.children)}}})},z=l().memo(T)},35087:function(e,n,t){var r=(0,t(87363).createContext)(void 0);n.Z=r},88981:function(e,n,t){var r=t(29439),i=t(87363),a=t.n(i),o=t(91291),l=t(22770),c=t(11888),h=t(75964),u=t(12025),m=t(35087),s=function(e){var n=e.children,t=(0,i.useState)(""),s=(0,r.Z)(t,2),d=s[0],g=s[1],p=(0,i.useState)([]),f=(0,r.Z)(p,2),b=f[0],y=f[1],v=(0,o.Z)().hash,E=(0,h.Z)((function(e){u.Z.push("".concat(u.Z.location.pathname,"#").concat(e));var n=document.getElementById(e);null==n||n.scrollIntoView()})),w=(0,h.Z)((function(){var e=document.documentElement.scrollTop,n=b.filter((function(e){return 3===e.level&&e.children.length}));if(0!==n.length){var t=n[0].id;n.forEach((function(n){var r=document.querySelector("#".concat(n.id));(null==r?void 0:r.offsetTop)<=e&&(t=n.id)})),g(t)}}));(0,i.useEffect)((function(){if(w(),v){var e=document.querySelector(v);setTimeout((function(){null==e||e.scrollIntoView()}),20)}return document.addEventListener("scroll",w),function(){document.removeEventListener("scroll",w)}}),[b]);var Z=a().useMemo((function(){return{setHeadings:y}}),[]);return a().createElement("div",{className:(0,l.EH)("_")},a().createElement(m.Z.Provider,{value:Z},n),a().createElement(c.Le,{className:(0,l.EH)("sticky"),top:50},a().createElement("div",{className:(0,l.EH)("nav")},b.map((function(e,n){var t=e.children.filter((function(e){return"string"==typeof e}));return a().createElement("a",{key:n,className:(0,l.EH)("level-".concat(e.level),d===e.id&&"active"),onClick:E.bind(null,e.id)},t)})))))};n.Z=a().memo(s)},793:function(e,n,t){t.r(n),t.d(n,{default:function(){return m}});var r=t(87363),i=t.n(r),a=t(88981),o=t(75722),l=t(62625),c=t(36519),h=(0,l.ZP)("# Image _图片_\r\n\r\n图片组件用来处理指定尺寸的图片，实现占位，异常处理，拉伸、填充，延时加载等功能。\r\n\r\n<example />\r\n\r\n## API\r\n\r\n### Image\r\n\r\n| 属性         | 类型                                                     | 默认值   | 说明                                       |\r\n| ------------ | -------------------------------------------------------- | -------- | ------------------------------------------ |\r\n| className    | string                                                   | -        | 扩展 className                             |\r\n| height       | string \\| number                                         | -        | 图片高度                                   |\r\n| lazy         | boolean \\| number                                        | false    | 是否延迟加载，如果为数字则表示懒加载偏移量 |\r\n| src          | string                                                   | 必填     | 图片地址                                   |\r\n| style        | object                                                   | -        | 最外层扩展样式                             |\r\n| target       | '\\_modal' \\| '\\_blank' \\| '\\_self' \\| '\\_download'       | -        | 图片打开方式                               |\r\n| width        | string \\| number                                         | '100%'   | 图片宽度                                   |\r\n| placeholder  | ReactNode                                                | '加载中' | 图片加载中占位内容                         |\r\n| getContainer | ()=>HTMLElement                                          | -        | 对特定元素进行懒加载判断的选择器,          |\r\n| error        | ReactNode                                                | -        | 图片载入错误的文案                         |\r\n| fit          | 'fill' \\| 'contain' \\| 'cover' \\| 'none' \\| 'scale-down' | -        | 图片适应方式                               |\r\n| thumbnail    | string                                                   | -        | 缩略图图片地址                             |\r\n\r\n### Image.Group\r\n\r\n| 属性   | 类型                                               | 默认值    | 说明         |\r\n| ------ | -------------------------------------------------- | --------- | ------------ |\r\n| height | string \\| number                                   | '100%'    | 单个图片高度 |\r\n| lazy   | boolean                                            | false     | 是否延迟加载 |\r\n| pile   | boolean                                            | false     | 是否堆叠     |\r\n| target | '\\_modal' \\| '\\_blank' \\| '\\_self' \\| '\\_download' | '\\_modal' | 图片打开方式 |\r\n| width  | string \\| number                                   | '100%'    | 单个图片宽度 |\r\n","# Image\r\n\r\n<example />\r\n\r\n## API\r\n\r\n### Image\r\n\r\n| Property     | Type                                                     | Default   | Description                                                    |\r\n| ------------ | -------------------------------------------------------- | --------- | -------------------------------------------------------------- |\r\n| className    | string                                                   | -         | Extend className                                               |\r\n| height       | string \\| number                                         | -         | The height of the image                                        |\r\n| lazy         | boolean \\| number                                        | false     | Whether to delay loading, number to set lazy offset            |\r\n| src          | string                                                   | required  | The picture address                                            |\r\n| style        | object                                                   | -         | Container element style                                        |\r\n| target       | '\\_modal' \\| '\\_blank' \\| '\\_self' \\| '\\_download'       | -         | Target of image                                                |\r\n| width        | string \\| number                                         | '100%'    | The width of the image                                         |\r\n| placeholder  | ReactNode                                                | 'loading' | Loading image placeholder content                              |\r\n| getContainer | ()=>HTMLElement                                          | -         | TTThe special element selector witch container the lazy image. |\r\n| error        | ReactNode                                                | -         | Image error placeholder                                        |\r\n| fit          | 'fill' \\| 'contain' \\| 'cover' \\| 'none' \\| 'scale-down' | -         | Image fit type                                                 |\r\n| thumbnail    | string                                                   | -         | Thumbnail aaaaddress                                           |\r\n\r\n### Image.Group\r\n\r\n| Property | Type                                               | Default   | Description                 |\r\n| -------- | -------------------------------------------------- | --------- | --------------------------- |\r\n| height   | string \\| number                                   | -         | The height of single image  |\r\n| lazy     | boolean                                            | false     | Whether to delay loading    |\r\n| pile     | boolean                                            | false     | Whether to stack            |\r\n| target   | '\\_modal' \\| '\\_blank' \\| '\\_self' \\| '\\_download' | '\\_modal' | Target of image             |\r\n| width    | string \\| number                                   | '100%'    | The width of single picture |\r\n"),u=[{name:"01-base",title:(0,l.ZP)("基本用法 \n 图片设置宽高后即使图片未加载，仍然会先占位","Base \n The most basic image."),component:t(7431).Z,rawText:t(35990).Z},{name:"02-shape",title:(0,l.ZP)("形状 \n 内置了三种图片样式，rounded, cricle, thumbnail","Shape \n There are three built-in styles, rounded, cricle, thumbnail."),component:t(24779).Z,rawText:t(94403).Z},{name:"03-fit",title:(0,l.ZP)('适应 \n 内置了多种适应容器的方式。同 <a target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit"> object-fit。</a>','Fit \n There are four built ways that fit the container. Same with <a target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit"> object-fit。</a>.'),component:t(12761).Z,rawText:t(63869).Z},{name:"04-alt",title:(0,l.ZP)("备用地址 \n 在 src 获取失败的情况下，自动使用 alt 属性设置的地址","Alt \n If the src address fails to load, use the alt property instead."),component:t(21117).Z,rawText:t(83261).Z},{name:"05-error",title:(0,l.ZP)("错误处理 \n alt 属性失效或没有 alt 属性时，会显示 title 属性","Title \n The title property is displayed when the alt property is invalid or there is no alt property."),component:t(2121).Z,rawText:t(35876).Z},{name:"06-target",title:(0,l.ZP)("打开方式 \n 提供了 4 种方式展示原始图片，弹出层、新窗口打开、当前窗口打开、下载","Target \n There are 4 ways to display the original image, pop-up layer, new window open, current window open, download."),component:t(60733).Z,rawText:t(91327).Z},{name:"07-group",title:(0,l.ZP)("图片组 \n 一组图片可以放在 Image.Group 中","Group \n A group of images can be placed in the Image.Group ."),component:t(7539).Z,rawText:t(53288).Z},{name:"08-group",title:(0,l.ZP)(" \n 设置 pile 属性可以把缩略图堆叠展示"," \n Set the pile property to show the image stack."),component:t(52204).Z,rawText:t(23201).Z},{name:"09-lazy",title:(0,l.ZP)("延迟加载 \n lazy 属性为 true 时，图片会在进入屏幕可视区域后加载, 默认以 document 的滚动条为判断","Lazy load \n When the lazy property is true, the image will load when it enter the visual area of the screen."),component:t(97440).Z,rawText:t(18888).Z},{name:"10-lazy",title:(0,l.ZP)(" \n 如果需要在特定的元素内部进行懒加载, 则需要提供一个选择器, 请确保 Image 组件渲染的时候能够通过选择器获取到指定元素."," \n If you need to lazy loading inside a specific element, you need to provide a selector, please ensure that the Image component can get the specified element through the selector when rendering."),component:t(92446).Z,rawText:t(72961).Z}],m=(0,c.Z)((function(){return i().createElement(a.Z,null,i().createElement(o.Z,{source:h,examples:u}))}))},7431:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(87363),i=t.n(r),a=t(11888);function o(){return i().createElement(a.Ee,{width:400,height:250,src:"https://chenmingzhen.github.io/ethan-ui-library/images/1_b.jpg"})}},24779:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(87363),i=t.n(r),a=t(11888);function o(){return i().createElement("div",null,i().createElement(a.Ee,{width:150,height:150,shape:"rounded",title:"rounded"}),i().createElement(a.Ee,{width:150,height:150,shape:"circle",title:"circle"}),i().createElement(a.Ee,{width:150,height:150,shape:"thumbnail",title:"thumbnail"}))}},12761:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(87363),i=t.n(r),a=t(11888);function o(){return i().createElement("div",null,["fill","contain","cover","none","scale-down"].map((function(e){return i().createElement("div",{key:e,style:{padding:4,display:"inline-block"}},i().createElement(a.Ee,{width:"100px",height:"100px",shape:"thumbnail",fit:e,src:"https://chenmingzhen.github.io/ethan-ui-library/images/1_b.jpg"}),i().createElement("div",{style:{textAlign:"center",paddingTop:4}},e))})))}},21117:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(87363),i=t.n(r),a=t(11888);function o(){return i().createElement(a.Ee,{width:200,height:125,src:"notfound",alt:"https://chenmingzhen.github.io/ethan-ui-library/images/1_b.jpg"})}},2121:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(87363),i=t.n(r),a=t(11888);function o(){return i().createElement(a.Ee,{width:200,height:125,src:"notfound",title:"Image not exist"})}},60733:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(87363),i=t.n(r),a=t(11888);function o(){return i().createElement("div",null,["_modal","_blank","_self","_download"].map((function(e){return i().createElement("div",{key:e,style:{display:"inline-block",marginRight:12,textAlign:"center"}},i().createElement(a.Ee,{width:80,height:80,target:e,shape:"thumbnail",fit:"cover",src:"https://chenmingzhen.github.io/ethan-ui-library/images/1_s.jpg",thumbnail:"https://chenmingzhen.github.io/ethan-ui-library/images/1_s_t.jpg"}),i().createElement("br",null),e)})))}},7539:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(87363),i=t.n(r),a=t(11888);function o(){return i().createElement(a.Ee.Group,null,[1,2,3,4].map((function(e){return i().createElement(a.Ee,{key:e,width:80,height:80,fit:"cover",shape:"thumbnail",thumbnail:"https://chenmingzhen.github.io/ethan-ui-library/images/".concat(e,"_s_t.jpg"),src:"https://chenmingzhen.github.io/ethan-ui-library/images/".concat(e,"_s.jpg")})})))}},52204:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(87363),i=t.n(r),a=t(11888);function o(){return i().createElement(a.Ee.Group,{pile:!0},[1,2,3,4].map((function(e){return i().createElement(a.Ee,{key:e,width:80,height:80,fit:"cover",shape:"thumbnail",thumbnail:"https://chenmingzhen.github.io/ethan-ui-library/images/".concat(e,"_s_t.jpg"),src:"https://chenmingzhen.github.io/ethan-ui-library/images/".concat(e,"_s.jpg")})})))}},97440:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(87363),i=t.n(r),a=t(11888);function o(){return i().createElement("div",null,[1,2,3,4].map((function(e){return i().createElement(a.Ee,{lazy:!0,key:e,height:"66%",src:"https://chenmingzhen.github.io/ethan-ui-library/images/".concat(e,"_b.jpg")})})))}},92446:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(87363),i=t.n(r),a=t(11888);function o(){return i().createElement("div",{id:"image-container",style:{height:"300px",overflowY:"scroll"}},[1,2,3,4].map((function(e){return i().createElement(a.Ee,{lazy:!0,getContainer:function(){return document.querySelector("#image-container")},key:e,src:"https://chenmingzhen.github.io/ethan-ui-library/images/".concat(e,"_b.jpg")})})))}},36519:function(e,n,t){var r=t(11888),i=t(87363),a=t.n(i);n.Z=function(e){var n=function(n){return(0,i.useEffect)((function(){return r.gb.finish(),function(){r.gb.start()}}),[]),a().createElement(e,n)};return a().memo(n)}},35990:function(e,n){n.Z="/**\r\n * cn - 基本用法\r\n *    -- 图片设置宽高后即使图片未加载，仍然会先占位\r\n * en - Base\r\n *    -- The most basic image.\r\n */\r\nimport React from 'react'\r\nimport { Image } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return <Image width={400} height={250} src=\"https://chenmingzhen.github.io/ethan-ui-library/images/1_b.jpg\" />\r\n}\r\n"},94403:function(e,n){n.Z='/**\r\n * cn - 形状\r\n *    -- 内置了三种图片样式，rounded, cricle, thumbnail\r\n * en - Shape\r\n *    -- There are three built-in styles, rounded, cricle, thumbnail.\r\n */\r\nimport React from \'react\'\r\nimport { Image } from \'ethan-ui\'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <Image width={150} height={150} shape="rounded" title="rounded" />\r\n            <Image width={150} height={150} shape="circle" title="circle" />\r\n            <Image width={150} height={150} shape="thumbnail" title="thumbnail" />\r\n        </div>\r\n    )\r\n}\r\n'},63869:function(e,n){n.Z="/**\r\n * cn - 适应\r\n *    -- 内置了多种适应容器的方式。同 <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit\"> object-fit。</a>\r\n * en - Fit\r\n *    -- There are four built ways that fit the container. Same with <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit\"> object-fit。</a>.\r\n */\r\nimport React from 'react'\r\nimport { Image } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            {['fill', 'contain', 'cover', 'none', 'scale-down'].map((fit: any) => (\r\n                <div key={fit} style={{ padding: 4, display: 'inline-block' }}>\r\n                    <Image\r\n                        width=\"100px\"\r\n                        height=\"100px\"\r\n                        shape=\"thumbnail\"\r\n                        fit={fit}\r\n                        src=\"https://chenmingzhen.github.io/ethan-ui-library/images/1_b.jpg\"\r\n                    />\r\n                    <div style={{ textAlign: 'center', paddingTop: 4 }}>{fit}</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n"},83261:function(e,n){n.Z="/**\r\n * cn - 备用地址\r\n *    -- 在 src 获取失败的情况下，自动使用 alt 属性设置的地址\r\n * en - Alt\r\n *    -- If the src address fails to load, use the alt property instead.\r\n */\r\nimport React from 'react'\r\nimport { Image } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <Image\r\n            width={200}\r\n            height={125}\r\n            src=\"notfound\"\r\n            alt=\"https://chenmingzhen.github.io/ethan-ui-library/images/1_b.jpg\"\r\n        />\r\n    )\r\n}\r\n"},35876:function(e,n){n.Z="/**\r\n * cn - 错误处理\r\n *    -- alt 属性失效或没有 alt 属性时，会显示 title 属性\r\n * en - Title\r\n *    -- The title property is displayed when the alt property is invalid or there is no alt property.\r\n */\r\nimport React from 'react'\r\nimport { Image } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return <Image width={200} height={125} src=\"notfound\" title=\"Image not exist\" />\r\n}\r\n"},91327:function(e,n){n.Z="/**\r\n * cn - 打开方式\r\n *    -- 提供了 4 种方式展示原始图片，弹出层、新窗口打开、当前窗口打开、下载\r\n * en - Target\r\n *    -- There are 4 ways to display the original image, pop-up layer, new window open, current window open, download.\r\n */\r\nimport React from 'react'\r\nimport { Image } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            {['_modal', '_blank', '_self', '_download'].map((target: any) => (\r\n                <div key={target} style={{ display: 'inline-block', marginRight: 12, textAlign: 'center' }}>\r\n                    <Image\r\n                        width={80}\r\n                        height={80}\r\n                        target={target}\r\n                        shape=\"thumbnail\"\r\n                        fit=\"cover\"\r\n                        src=\"https://chenmingzhen.github.io/ethan-ui-library/images/1_s.jpg\"\r\n                        thumbnail=\"https://chenmingzhen.github.io/ethan-ui-library/images/1_s_t.jpg\"\r\n                    />\r\n                    <br />\r\n                    {target}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n"},53288:function(e,n){n.Z="/**\r\n * cn - 图片组\r\n *    -- 一组图片可以放在 Image.Group 中\r\n * en - Group\r\n *    -- A group of images can be placed in the Image.Group .\r\n */\r\nimport React from 'react'\r\nimport { Image } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <Image.Group>\r\n            {[1, 2, 3, 4].map((i) => (\r\n                <Image\r\n                    key={i}\r\n                    width={80}\r\n                    height={80}\r\n                    fit=\"cover\"\r\n                    shape=\"thumbnail\"\r\n                    thumbnail={`https://chenmingzhen.github.io/ethan-ui-library/images/${i}_s_t.jpg`}\r\n                    src={`https://chenmingzhen.github.io/ethan-ui-library/images/${i}_s.jpg`}\r\n                />\r\n            ))}\r\n        </Image.Group>\r\n    )\r\n}\r\n"},23201:function(e,n){n.Z="/**\r\n * cn -\r\n *    -- 设置 pile 属性可以把缩略图堆叠展示\r\n * en -\r\n *    -- Set the pile property to show the image stack.\r\n */\r\nimport React from 'react'\r\nimport { Image } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <Image.Group pile>\r\n            {[1, 2, 3, 4].map((i) => (\r\n                <Image\r\n                    key={i}\r\n                    width={80}\r\n                    height={80}\r\n                    fit=\"cover\"\r\n                    shape=\"thumbnail\"\r\n                    thumbnail={`https://chenmingzhen.github.io/ethan-ui-library/images/${i}_s_t.jpg`}\r\n                    src={`https://chenmingzhen.github.io/ethan-ui-library/images/${i}_s.jpg`}\r\n                />\r\n            ))}\r\n        </Image.Group>\r\n    )\r\n}\r\n"},18888:function(e,n){n.Z="/**\r\n * cn - 延迟加载\r\n *    -- lazy 属性为 true 时，图片会在进入屏幕可视区域后加载, 默认以 document 的滚动条为判断\r\n * en - Lazy load\r\n *    -- When the lazy property is true, the image will load when it enter the visual area of the screen.\r\n */\r\nimport React from 'react'\r\nimport { Image } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            {[1, 2, 3, 4].map((i) => (\r\n                <Image\r\n                    lazy\r\n                    key={i}\r\n                    height=\"66%\"\r\n                    src={`https://chenmingzhen.github.io/ethan-ui-library/images/${i}_b.jpg`}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n"},72961:function(e,n){n.Z="/**\r\n * cn -\r\n *    -- 如果需要在特定的元素内部进行懒加载, 则需要提供一个选择器, 请确保 Image 组件渲染的时候能够通过选择器获取到指定元素.\r\n * en -\r\n *    -- If you need to lazy loading inside a specific element, you need to provide a selector, please ensure that the Image component can get the specified element through the selector when rendering.\r\n */\r\nimport React from 'react'\r\nimport { Image } from 'ethan-ui'\r\n\r\nexport default function () {\r\n    return (\r\n        <div id=\"image-container\" style={{ height: '300px', overflowY: 'scroll' }}>\r\n            {[1, 2, 3, 4].map((i) => (\r\n                <Image\r\n                    lazy\r\n                    getContainer={() => document.querySelector('#image-container')}\r\n                    key={i}\r\n                    src={`https://chenmingzhen.github.io/ethan-ui-library/images/${i}_b.jpg`}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n"}}]);