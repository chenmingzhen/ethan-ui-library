(window.webpackJsonpEthanDoc=window.webpackJsonpEthanDoc||[]).push([[33],{215:function(e,n,t){"use strict";var r=t(12),c=t.n(r),s=t(1),u=t.n(s),f=t(34),p=t(27),h=t(42),m=t(44);n.a=function(l){return function(e){var n=Object(s.useState)(""),n=c()(n,2),r=n[0],a=n[1],n=Object(s.useState)([]),o=c()(n,1)[0],t=e.location.hash,d=Object(p.useUpdate)(),n=Object(s.useCallback)(function(e){e.forEach(function(e){o.push(e)}),d()},[]),i=Object(s.useCallback)(function(){var e;!t||(e=document.querySelector(t))&&setTimeout(function(){e.scrollIntoView()},50)},[t]);Object(s.useEffect)(function(){i();function e(){var t,r=document.documentElement.scrollTop,e=o.filter(function(e){return 3===e.level&&e.children[0]});0!==e.length&&(t=e[0].id,e.forEach(function(e){var n=document.querySelector("#".concat(e.id));n&&n.offsetTop<=r&&(t=e.id)}),a(t))}return document.addEventListener("scroll",e),e(),function(){document.removeEventListener("scroll",e)}},[]);return u.a.createElement("div",{className:Object(h.f)("_")},u.a.createElement(l,{onHeadingSetted:n}),!e.noNav&&u.a.createElement(f.G,{className:Object(h.f)("sticky"),top:50},u.a.createElement("div",{className:Object(h.f)("nav")},o.map(function(e,n){var t=e.children.filter(function(e){return"string"==typeof e});return u.a.createElement("a",{key:n,className:Object(h.f)("level-".concat(e.level),r===e.id&&"active"),onClick:function(e){0===m.a.location.search.indexOf("?example=")?m.a.push("".concat(m.a.location.pathname,"?example=").concat(e.replace("heading-",""))):(m.a.push("".concat(m.a.location.pathname,"#").concat(e)),(e=document.getElementById(e))&&e.scrollIntoView())}.bind(null,e.id)},t)}))))}}},216:function(e,n,t){"use strict";var r=t(8),l=t.n(r),p=t(1),h=t.n(p),r=t(12),m=t.n(r),r=t(0),a=t.n(r),r=t(25),c=t.n(r),r=t(23),s=t.n(r),r=t(217),u=t.n(r),f=t(49),g=t(14),x=t(42),v=t(35),r=t(10),o=t.n(r),r=t(218),d=t.n(r),y=(t(219),function(e){var n=e.language,n=void 0===n?"lang-jsx":n,t=e.onHighLight,e=e.value,r=Object(p.useRef)(null);return Object(p.useEffect)(function(){var e=r.current;d.a.highlightElement(e,!1,function(){t&&t(e.offsetHeight)})},[]),h.a.createElement("pre",{ref:r,className:o()(n||"lang-jsx",Object(x.a)("pre"))},h.a.createElement("code",null,e))}),r=t(74),b=t.n(r),E=t(34),k=t(72),I=t(44),C=h.a.createElement("div",{className:Object(x.a)("placeholder")},h.a.createElement(E.E,{size:"54px",name:"four-dots",color:"#53a0fd"}));function S(e){var n=e.component,t=e.id,r=e.name,a=e.rawText,o=e.title,d=Object(p.useRef)(null),i=Object(p.useState)(!1),l=m()(i,2),c=l[0],s=l[1],e=Object(p.useState)(Object(p.createElement)(n)),i=m()(e,1)[0],l=Object(p.useState)(),n=m()(l,2),u=n[0],f=n[1],e=Object(p.useState)(),l=(m()(e,1)[0],a.replace(/(^|\n|\r)\s*\/\*[\s\S]*?\*\/\s*(?:\r|\n|$)/,"").trim());Object(p.useEffect)(function(){d.current&&(d.current.style.height=c?"".concat(u,"px"):"0")},[c]);n=function(e){return h.a.createElement("a",{className:Object(x.a)("toggle"),onClick:function(e){s(!c)}.bind(null,e)},h.a.createElement(k.a,{name:c?"code-close":"code"}))},e=I.a.location.search,a="?example=";if(0===e.indexOf(a)&&(e=e.replace(a,""),r.indexOf(e)<0))return null;r=o.split("\n"),e=b()(r),r=e[0],e=e.slice(1),r=r&&r.trim();return h.a.createElement(p.Fragment,null,r&&h.a.createElement("h3",{key:"0",id:t},r),h.a.createElement(E.r,{placeholder:C},h.a.createElement("div",{className:Object(x.a)("_",c&&"showcode")},h.a.createElement("div",{className:Object(x.a)("body")},i),0<o.length&&h.a.createElement("div",{className:Object(x.a)("desc")},e.map(function(e,n){return h.a.createElement("div",{key:n,dangerouslySetInnerHTML:{__html:e}})}),n(!1)),h.a.createElement("div",{ref:d,className:Object(x.a)("code")},h.a.createElement(y,{onHighLight:function(e){f(e)},value:l}),n(!0)))))}S.propTypes={component:a.a.func.isRequired,id:a.a.string,name:a.a.string,rawText:a.a.string,title:a.a.string.isRequired},S.defaultProps={rawText:""};r=function(e){var n=e.children,e=Object(p.useState)(!1),e=m()(e,2),t=e[0],r=e[1],e=n.map(function(e){return e.replace(/"fn#fn/g,"").replace(/fn#fn"/g,"").replace(/\\n/g,"\n")}),n=t?"pre":"div";return h.a.createElement("div",{onClick:function(){r(!t)},className:Object(x.e)("console")},h.a.createElement(n,null,e))};r.propTypes={children:a.a.array},r.defaultProps={children:[]};var R=r;function i(e){var e=e.children,n=s()(e[1].props.children);try{n.sort(function(e,n){return e.props.children[0].props.children[0].localeCompare(n.props.children[0].props.children[0])})}catch(e){console.log("sort fail...")}return h.a.createElement("div",{style:{overflow:"auto"}},h.a.createElement("table",{className:"doc-api-table"},e[0],h.a.cloneElement(e[1],{children:n})))}i.propTypes={children:a.a.any},i.defaultProps={};var j=i,O=/^<code name="([\w|-]+)" /,T=/^<example name="([\w|-]+)"/;function w(e){var n=e.onHeadingSetted,a=e.codes,o=e.examples,t=e.source,e=Object(p.useState)([]),r=m()(e,1)[0],e=Object(p.useState)({}),d=m()(e,1)[0];Object(p.useEffect)(function(){n&&n(r)},[]);function i(e){r.push(e)}return h.a.createElement(u.a,{className:Object(x.e)("_"),source:t,renderers:{code:y,heading:function(e){var n,t=e.level,r=e.children,a="".concat(t,"-").concat(r[0]),o="h".concat(t);return"object"===c()(r[0])?h.a.createElement(o,null,r):(d[a]||(e="heading-".concat((n=t,e=r[0],4===n?Object(g.c)():"".concat(n,"-").concat((e||"").replace(/[\W|-]/g,"-")))),2!==t&&3!==t||i({id:e,level:t,children:r}),d[a]=h.a.createElement(o,{id:e},r)),d[a])},html:function(e){if("<example />"===e.value)return function(){if(d.examples)return d.examples;if(!o)return h.a.createElement("div",null);var e=Object(v.b)("示例","Example"),n="heading-example-h";return i({id:n,level:2,children:[e]}),d.examples=[h.a.createElement("h2",{key:"h",id:n},e)].concat(s()(o.map(function(e,n){if(/\d+-/.test(e.name)){var t="heading-".concat(e.name),r=e.title.split("\n"),r=m()(r,1)[0];return i({id:t,level:3,children:[r]}),h.a.createElement(S,l()({key:n,id:t},e))}}))),d.examples}();var n,t=e.value.match(T);if(t)return n=t[1],e.value.indexOf("noExpand"),r="example-".concat(n),d[r]||(t=(o||[]).find(function(e){return e.name===n}),d[r]=t?h.a.createElement(S,t):null),d[r];if("<br>"===e.value||"<br />"===e.value)return h.a.createElement("br",null);var r=e.value.match(O);return r?(e=r[1],(r=a[e])?[h.a.createElement(y,{key:"cb",value:r.text})].concat(s()(r.log.map(function(e,n){return h.a.createElement(R,{key:n},e)}))):(console.error("Code ".concat(e," not existed")),null)):null},table:j,link:function(e){var n=0===e.href.indexOf("http")?"_blank":void 0;return n?h.a.createElement("a",{href:e.href,target:n},e.children):h.a.createElement(f.a,{to:e.href,target:n},e.children)}}})}w.propTypes={children:a.a.oneOfType([a.a.element,a.a.array]),codes:a.a.object,examples:a.a.array,onHeadingSetted:a.a.func,source:a.a.string.isRequired},w.defaultProps={children:null,examples:null,onHeadingSetted:void 0};var D=t(73),N=(t(215),A.propTypes={loader:a.a.func,source:a.a.string},A.defaultProps={loader:void 0,source:void 0},Object(p.memo)(A));function A(e){var n=Object(p.useState)(e.source),t=m()(n,2),n=t[0],r=t[1];return Object(p.useEffect)(function(){e.loader&&e.loader().then(function(e){r(e.default)})},[]),n?h.a.createElement(w,l()({},e,{source:n})):h.a.createElement(D.a,{style:{minHeight:200}})}n.a=N},223:function(e,n,t){"use strict";t.d(n,"a",function(){return a});function c(n,e,t,r,a,o){var d=t.join("-"),i=Object(f.e)(a,0===n?1:0),l={id:d,text:d};return 0<i&&n<r&&(l.children=Object(u.a)(i).map(function(e){return c(n+1,0,[].concat(s()(t),[e]),r,a,o)})),o&&o.push(d),l}var r=t(23),s=t.n(r),u=t(33),f=t(227),a=[],o=[],t=Object(u.a)(4).map(function(e){return c(0,0,[e],10,5,a)});Object(u.a)(20).map(function(e){return c(0,0,[e],4,10)}),Object(u.a)(3).map(function(e){return c(0,0,[e],2,3,o)});n.b=t},227:function(e,n,t){"use strict";t.d(n,"e",function(){return a}),t.d(n,"d",function(){return o}),t.d(n,"c",function(){return d}),t.d(n,"a",function(){return i}),t.d(n,"b",function(){return l}),t.d(n,"f",function(){return c});t(33);var n=t(250),r=t.n(n);function a(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:65555,n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:2;"string"==typeof e&&(e=parseInt(e,10)),"string"==typeof n&&(n=parseInt(n,10));n=Math.random()*(e-n)+n;return parseFloat(n.toFixed(t),0)}function o(){return Math.round(a.apply(void 0,arguments))}function d(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"yyyy-MM-dd",n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1e10,n=Date.now()-(n=n,Math.ceil(Math.random()*n));return r()(n,e)}function i(e){return e[Math.floor(Math.random()*e.length)]}function l(e){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,t=2<arguments.length?arguments[2]:void 0,r=n;t&&(r=o(n,t));for(var a=[];0<r;)a.push(i(e)),--r;return a}function c(e){for(var n=[],t=e.slice();0!==t.length;){var r=Math.floor(t.length*Math.random());n.push(t[r]),t.splice(r,1)}return n}},756:function(e,n){e.exports="# Tree *树形选择*\r\n\r\n## \r\n\r\n#### 本页面中用到的数据如下（数据量比较大，请谨慎点开）\r\n<example name=\"data\" />\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| className | string | 无 | 扩展className |\r\n| onChange | (value: string[]) => void | 无 | 设置 onChange 属性时，显示 选择框。参数为当前选中值，和 mode 属性相关 |\r\n| data | object[] | [] | 数据，子节点为children，如果 children 值为 null 或 长度为 0 时，视为叶子节点 |\r\n| defaultExpanded | string[] | 无 | 默认展开的节点 key（非受控） |\r\n| disabled | (data: any) => boolean \\| boolean | false | 显示选择框时有效，为 true 时，所有节点禁用选择，为函数时，根据函数返回结果确定是否禁用 |\r\n| expanded | string[] | 无 | 展开的节点 key （受控） |\r\n| keygen | ((data: any, parentKey: string) => string) \\| string | 必填 | 生成key的辅助方法<br />为函数时，使用此函数返回值<br />为string时，使用这个string对应的数据值。如 'id'，相当于 (d) => d.id |\r\n| line | boolean | true | 是否显示连接线 |\r\n| loader | (key: string) => void | 无 | 设置loader属性后，未定义children的节点视为动态加载节点，点击展开触发 loader事件，children 为 null 或者长度为 0 视为叶子节点 |\r\n| mode | 0 \\| 1 \\| 2 \\| 3 \\| 4 | 1 | 选中值模式<br />0: 只返回完全选中的节点，包含父节点<br />1: 返回全部选中的节点和半选中的父节点<br />2: 只返回选中的子节点<br />3: 如果父节点选中，只返回父节点 |\r\n| onExpand | (value: string[]) => void | 无 | 节点展开回调，参数为当前展开节点 key 数组 |\r\n| renderItem | (data: object) => ReactNode | 必填 | 为 string 时，返回 d\\[string]<br />为 function 时，返回函数结果 |\r\n| defaultValue | string[] | 无 | 默认选中的 key （非受控） | \r\n| value | string[] | 无 | 选中的 key （受控） | \r\n| onDrop | (data: object, key: string, targetKey: string, position: number) => void | 无 | 设置 onDrop 属性时，为可拖动状态<br />data: 拖动后重新排序的完整数据<br />key: 拖动的节点key<br />targetKey: 目标节点 key<br />position: 在目标节点的位置，以 0 开始 | \r\n| defaultExpandAll | boolean | false | 默认展开所有节点 | \r\n| childrenKey | string | 'children' | 指定子数据的属性名 |\r\n| expandIcons | \\[ReactNode, ReactNode] | 无 | 自定义展开/收起按钮 |\r\n| dragImageSelector | (data: object) => string \\| string | 无 | 定义拖拽图片的选择器 |\r\n| dragImageStyle | object | 无 | 拖拽图片的样式 |\r\n| leafClass | (data: object) => string \\| string | 无 | 叶子节点的 class, 函数的参数为该条叶子节点数据 |\r\n| dragHoverExpand | boolean | false | 拖拽时自动展开含有子节点的节点 |\r\n| doubleClickExpand | boolean | false | 双击是否展开节点 |\r\n| onClick | (data: object) => void | 无 | 节点点击事件 |\r\n| iconClass | string | 无 | 展开/收起按钮的类名 |\r\n| nodeClass | string \\| ((data: any) => string) | 无 | 节点的class，如果是函数，参数为该节点数据 |\r\n| dragSibling | boolean  | 无 | 是否只能平级拖拽 |\r\n"},757:function(e,n){e.exports="# Tree\r\n\r\n##\r\n\r\n#### The data used on this page is as follows (the amount of data is large, please be careful)\r\n<example name=\"data\" />\r\n\r\n<example />\r\n\r\n## API\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| className | string | - | Extend className |\r\n| data | object[] | [] | data. The child node is children. If the children value is null or its length is 0, it is render as a leaf node. |\r\n| defaultExpanded | string[] | - | Default expanded node key. |\r\n| disabled | (data: any) => boolean \\| boolean | false | When it is true, all nodes disable the selection; when it is a function, it determines whether it is disabled according to the return result of the function. |\r\n| expanded | string[] | - | Expanded node key (controlled) |\r\n| keygen | ((data: any, parentKey: string) => string) \\| string | required | Auxiliary method for generating key. <br />When it is a function, use the return value of this function. <br /> When it is a string, use the data value corresponding to this string. For example, 'id' is the same thing as (d) => d.id. |\r\n| line | boolean | true | Whether to display the connection line. |\r\n| loader | (key: string) => void | - | If the loader attribute is a function, the node with no children is regarded as dynamically loaded node. Click expanded button to trigger the loader event. The children property is null or its length is 0 will be regarded as a leaf node. |\r\n| mode | 0 \\| 1 \\| 2 \\| 3 \\| 4 | 1 | mode <br />0: Returns only the fully selected node including the parent node. <br />1: Returns all selected nodes and semi-selected nodes. <br />2: Return only the selected child nodes. <br />3: If the parent node is full selected, only return the parent node. |\r\n| onChange | (value: string[]) => void | - | When the onChange property is set, the selection box is displayed. The parameter is the current selected value, which is related to the mode property. |\r\n| onExpand |  (value: string[]) => void | - | The callback function for expanding the node. The parameter is the key array of the currently expanded nodes. |\r\n| renderItem | (data: object) => ReactNode | required | When it is a string, return d\\[string].<br /> When it is a function, return the result of this function. |\r\n| defaultValue | string[] | - | Default selected key (not controlled) | \r\n| value | string[] | - | Selected key (controlled) |\r\n| onDrop | (data: object, key: string, targetKey: string, position: number) => void | - | It is draggable when setting the onDrop property. <br />data: Full data after dragging.<br />key: the key of dragged node<br />targetKey: the key of target node<br />position: The position of the target node. start at 0. | \r\n| defaultExpandAll | boolean | false | default expand all nodes | \r\n| childrenKey | string | 'children' | the key of the children data name | \r\n| expandIcons | \\[ReactNode, ReactNode] | none | custom expand/collapse button |\r\n| dragImageSelector | (data: object) => string \\| string | - | the selector of drag image |\r\n| dragImageStyle | object | - | the style of drag Image |\r\n| leafClass | (data: object) => string \\| string | - | the class of lead, the params of function is data |\r\n| dragHoverExpand | boolean | false | auto expand the node when drag over |\r\n| doubleClickExpand | boolean | false | expand node while double click |\r\n| onClick | (data: object) => void | none | node click |\r\n| iconClass | string | - | expand/collapse button's class |\r\n| nodeClass | string \\| ((data: any) => string) | - | The class of the node, if it is a function, the parameter is the node data. |\r\n| dragSibling | boolean  | - | whether drag can only be level |"},758:function(e,n,t){"use strict";t.r(n);var r=t(1),a=t.n(r),o=t(34),d=[{id:"1",text:"1",children:[{id:"1-1",text:"1-1",children:[{id:"1-1-1",text:"1-1-1"},{id:"1-1-2",text:"1-1-2"}]},{id:"1-2",text:"1-2"}]},{id:"2",text:"2",children:[{id:"2-1",text:"2-1"},{id:"2-2",text:"2-2"}]},{id:"3",text:"3",children:[{id:"3-1",text:"3-1"}]},{id:"4",text:"4",children:[{id:"4-1",text:"4-1"}]},{id:"5",text:"5",children:[{id:"5-1",text:"5-1"}]}];n.default=function(){return a.a.createElement(o.I,{data:d,keygen:"id",defaultExpanded:["2"],renderItem:function(e){return"node ".concat(e.text)}})}},759:function(e,n){e.exports="/**\r\n * cn - 基本用法\r\n *    -- 基础的 Tree 用法\r\n * en - Base\r\n *   -- Basic usage of Tree\r\n */\r\nimport React from 'react'\r\nimport { Tree } from 'ethan/index'\r\n\r\nconst data = [\r\n  {\r\n    id: '1',\r\n    text: '1',\r\n    children: [\r\n      {\r\n        id: '1-1',\r\n        text: '1-1',\r\n        children: [{ id: '1-1-1', text: '1-1-1' }, { id: '1-1-2', text: '1-1-2' }],\r\n      },\r\n      { id: '1-2', text: '1-2' },\r\n    ],\r\n  },\r\n  { id: '2', text: '2', children: [{ id: '2-1', text: '2-1' }, { id: '2-2', text: '2-2' }] },\r\n  { id: '3', text: '3', children: [{ id: '3-1', text: '3-1' }] },\r\n  { id: '4', text: '4', children: [{ id: '4-1', text: '4-1' }] },\r\n  { id: '5', text: '5', children: [{ id: '5-1', text: '5-1' }] },\r\n]\r\n\r\nexport default function() {\r\n  return <Tree data={data} keygen=\"id\" defaultExpanded={['2']} renderItem={n => `node ${n.text}`} />\r\n}\r\n"},760:function(e,n,t){"use strict";t.r(n);var r=t(1),a=t.n(r),o=t(34),d=t(223);function i(e,n){n=e.children&&0!==e.children.length?n?a.a.createElement(o.m,{name:"folder-open",style:{color:"#ffd666"}}):a.a.createElement(o.m,{name:"folder",style:{color:"#ffd666"}}):a.a.createElement(o.m,{name:"file-text-o"});return a.a.createElement("span",null,n," ",e.text)}n.default=function(){return a.a.createElement(o.I,{data:d.b,keygen:"id",renderItem:i,doubleClickExpand:!0})}},761:function(e,n){e.exports="/**\r\n * cn - 图标\r\n *    -- 在 renderItem 中根据状态展示不同的图标\r\n * en - Icons\r\n *    -- Display different icon in the renderItem.\r\n */\r\nimport React from 'react'\r\nimport { Tree, FontAwesome } from 'ethan/index'\r\nimport data from 'doc/data/tree'\r\n\r\nfunction renderItem(node, isExpanded) {\r\n  let icon\r\n  if (!node.children || node.children.length === 0) {\r\n    icon = <FontAwesome name=\"file-text-o\" />\r\n  } else if (isExpanded) {\r\n    icon = <FontAwesome name=\"folder-open\" style={{ color: '#ffd666' }} />\r\n  } else {\r\n    icon = <FontAwesome name=\"folder\" style={{ color: '#ffd666' }} />\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {icon} {node.text}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default function() {\r\n  return <Tree data={data} keygen=\"id\" renderItem={renderItem} doubleClickExpand />\r\n}\r\n"},762:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return m});var n=t(4),r=t.n(n),n=t(5),a=t.n(n),n=t(2),o=t.n(n),n=t(6),d=t.n(n),n=t(7),i=t.n(n),n=t(3),l=t.n(n),n=t(9),c=t.n(n),n=t(1),s=t.n(n),u=t(20),f=t(34),p=t(223);function h(t){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var e,n=l()(t);return n=r?(e=l()(this).constructor,Reflect.construct(n,arguments,e)):n.apply(this,arguments),i()(this,n)}}var m=function(e){d()(t,e);var n=h(t);function t(e){var a;return r()(this,t),a=n.call(this,e),c()(o()(a),"handleClick",function(e,n){console.log("click",n),a.setState({active:n})}),c()(o()(a),"handleEdit",function(e){var n=e.target.value,r=a.state.active.split(",");a.setState(Object(u.a)(function(e){var t=e.data;r.forEach(function(n,e){t=t.find(function(e){return e.id===n}),e<r.length-1&&(t=t.children)}),t.text=n,e.active=void 0}))}),c()(o()(a),"handleKeyDown",function(e){13===e.keyCode&&e.target.blur()}),c()(o()(a),"keyGenerator",function(e,n){return"".concat(n,",").concat(e.id).replace(/^,/,"")}),c()(o()(a),"renderItem",function(e,n,t){return t?s.a.createElement("input",{autoFocus:!0,size:"small",onBlur:a.handleEdit,onKeyDown:a.handleKeyDown,defaultValue:e.text,type:"text"}):"node ".concat(e.text)}),a.state={active:void 0,data:p.b},a.defaultExpanded=["1"],a}return a()(t,[{key:"render",value:function(){return s.a.createElement(f.I,{active:this.state.active,data:this.state.data,keygen:this.keyGenerator,defaultExpanded:this.defaultExpanded,onClick:this.handleClick,onExpand:this.handleExpand,renderItem:this.renderItem})}}]),t}(n.Component)},763:function(e,n){e.exports="/**\r\n * cn - 点击事件\r\n *    -- 设置 onClick 属性监听节点点击\r\n * en - Click\r\n *    -- Set the onClick property to listen the node click.\r\n */\r\nimport React, { Component } from 'react'\r\nimport immer from 'immer'\r\nimport { Tree } from 'ethan/index'\r\nimport tree from 'doc/data/tree'\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { active: undefined, data: tree }\r\n    this.defaultExpanded = ['1']\r\n  }\r\n\r\n  handleClick = (node, id) => {\r\n    console.log('click', id)\r\n    this.setState({ active: id })\r\n  }\r\n\r\n  handleEdit = event => {\r\n    const newText = event.target.value\r\n    const path = this.state.active.split(',')\r\n    this.setState(\r\n      immer(draft => {\r\n        let { data } = draft\r\n        path.forEach((id, index) => {\r\n          data = data.find(d => d.id === id)\r\n          if (index < path.length - 1) data = data.children\r\n        })\r\n        data.text = newText\r\n        draft.active = undefined\r\n      })\r\n    )\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.keyCode === 13) event.target.blur()\r\n  }\r\n\r\n  keyGenerator = (node, parentKey) => `${parentKey},${node.id}`.replace(/^,/, '')\r\n\r\n  renderItem = (node, isExpanded, isActive) =>\r\n    isActive ? (\r\n      <input\r\n        // eslint-disable-next-line\r\n        autoFocus\r\n        size=\"small\"\r\n        onBlur={this.handleEdit}\r\n        onKeyDown={this.handleKeyDown}\r\n        defaultValue={node.text}\r\n        type=\"text\"\r\n      />\r\n    ) : (\r\n      `node ${node.text}`\r\n    )\r\n\r\n  render() {\r\n    return (\r\n      <Tree\r\n        active={this.state.active}\r\n        data={this.state.data}\r\n        keygen={this.keyGenerator}\r\n        defaultExpanded={this.defaultExpanded}\r\n        onClick={this.handleClick}\r\n        onExpand={this.handleExpand}\r\n        renderItem={this.renderItem}\r\n      />\r\n    )\r\n  }\r\n}\r\n"},764:function(e,n,t){"use strict";t.r(n);var r=t(1),a=t.n(r),o=t(34),d=t(223);n.default=function(){return a.a.createElement(o.I,{data:d.b,defaultExpanded:["1","2"],line:!1,keygen:"id",renderItem:function(e){return"node ".concat(e.id)}})}},765:function(e,n){e.exports="/**\r\n * cn - 无连接线\r\n *    -- 设置 line 为 false，隐藏连接线\r\n * en - Line\r\n *    -- Set the line property to false to hid the connecting line.\r\n */\r\nimport React from 'react'\r\nimport { Tree } from 'ethan/index'\r\nimport data from 'doc/data/tree'\r\n\r\nexport default function() {\r\n  return <Tree data={data} defaultExpanded={['1', '2']} line={false} keygen=\"id\" renderItem={n => `node ${n.id}`} />\r\n}\r\n"},766:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return r});var n=t(23),a=t.n(n),n=t(4),o=t.n(n),n=t(5),d=t.n(n),n=t(2),i=t.n(n),n=t(6),l=t.n(n),n=t(7),c=t.n(n),n=t(3),s=t.n(n),n=t(9),u=t.n(n),n=t(1),f=t.n(n),p=t(34),h=t(223);function m(t){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var e,n=s()(t);return n=r?(e=s()(this).constructor,Reflect.construct(n,arguments,e)):n.apply(this,arguments),c()(this,n)}}var r=function(e){l()(r,e);var t=m(r);function r(e){var n;return o()(this,r),n=t.call(this,e),u()(i()(n),"handleExpand",function(e){n.setState({expanded:e})}),u()(i()(n),"renderItem",function(e){return"node ".concat(e.id)}),n.state={expanded:["1"]},n.collapseAll=n.handleExpand.bind(i()(n),[]),n.expandAll=n.handleExpand.bind(i()(n),a()(h.a)),n}return d()(r,[{key:"render",value:function(){return f.a.createElement("div",null,f.a.createElement("div",{style:{marginBottom:12}},f.a.createElement(p.f,{onClick:this.expandAll},"Expand all"),f.a.createElement(p.f,{onClick:this.collapseAll},"Collapse all")),f.a.createElement(p.I,{data:h.b,keygen:"id",line:!1,expanded:this.state.expanded,onExpand:this.handleExpand,renderItem:this.renderItem}))}}]),r}(n.Component)},767:function(e,n){e.exports="/**\r\n * cn - 控制展开\r\n *    -- 受控的展开（此示例数据量太大，第一次全部展开会比较慢）\r\n * en - Expanded\r\n *    -- Controlled expansion (Because the data in this example is too large, it will be slower for the first time.)\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Tree, Button } from 'ethan/index'\r\nimport data, { allIds } from 'doc/data/tree'\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { expanded: ['1'] }\r\n\r\n    this.collapseAll = this.handleExpand.bind(this, [])\r\n    this.expandAll = this.handleExpand.bind(this, [...allIds])\r\n  }\r\n\r\n  handleExpand = expanded => {\r\n    this.setState({ expanded })\r\n  }\r\n\r\n  renderItem = node => `node ${node.id}`\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: 12 }}>\r\n          <Button onClick={this.expandAll}>Expand all</Button>\r\n          <Button onClick={this.collapseAll}>Collapse all</Button>\r\n        </div>\r\n        <Tree\r\n          data={data}\r\n          keygen=\"id\"\r\n          line={false}\r\n          expanded={this.state.expanded}\r\n          onExpand={this.handleExpand}\r\n          renderItem={this.renderItem}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"},768:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return r});var n=t(4),a=t.n(n),n=t(5),o=t.n(n),n=t(2),d=t.n(n),n=t(6),i=t.n(n),n=t(7),l=t.n(n),n=t(3),c=t.n(n),n=t(9),s=t.n(n),n=t(12),u=t.n(n),n=t(1),f=t.n(n),p=t(34),h=t(223);function m(t){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var e,n=c()(t);return n=r?(e=c()(this).constructor,Reflect.construct(n,arguments,e)):n.apply(this,arguments),l()(this,n)}}var g={position:"absolute",right:30,top:100,bottom:40,width:240,overflow:"auto",background:"#f2f2f2",padding:10,zIndex:100},x=[{value:0,text:"mode=0 (full)"},{value:1,text:"mode=1 (half)"},{value:2,text:"mode=2 (child only)"},{value:3,text:"mode=3 (shallow)"}];var r=function(e){i()(r,e);var t=m(r);function r(e){var n;a()(this,r),n=t.call(this,e),s()(d()(n),"handleChange",function(e){n.setState({value:e})}),s()(d()(n),"handleModeChange",function(e){n.setState({mode:e,value:[]})}),s()(d()(n),"renderItem",function(e){return"node ".concat(e.id)});e=[];return function e(n,t){n=u()(n,1)[0];n&&(t.push(n.id),n.children&&e(n.children,t))}(h.b,e),n.state={mode:1,value:e},n}return o()(r,[{key:"render",value:function(){var e=this.state,n=e.mode,e=e.value;return f.a.createElement("div",null,f.a.createElement(p.z.Group,{keygen:"value",value:n,format:"value",onChange:this.handleModeChange,data:x,renderItem:"text"}),f.a.createElement("br",null),f.a.createElement(p.I,{data:h.b,defaultExpanded:["0","2"],keygen:"id",mode:n,onChange:this.handleChange,renderItem:this.renderItem,value:e}),f.a.createElement("div",{style:g},"Current select value:",f.a.createElement("pre",{style:{background:"#f2f2f2"}},JSON.stringify(e,null,2))))}}]),r}(n.Component)},769:function(e,n){e.exports="/**\r\n * cn - 可选择\r\n *    -- 选中值取值提供了 4 种模式\r\n *    -- 0: 只返回完全选中的节点，包含父节点\r\n *    -- 1: 返回全部选中的节点和半选中的父节点\r\n *    -- 2: 只返回选中的子节点\r\n *    -- 3: 如果父节点选中，只返回父节点\r\n * en - onChange\r\n *    -- Selected values provide 4 modes\r\n *    -- 0: Return only the fully selected node, including the parent node.\r\n *    -- 1: Return the fully selected nodes and semi-selected parent nodes.\r\n *    -- 2: Return only the selected child node.\r\n *    -- 3: Return only the parent node, if the parent node is selected.\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Tree, Radio } from 'ethan/index'\r\nimport data from 'doc/data/tree'\r\n\r\nconst resultStyle = {\r\n  position: 'absolute',\r\n  right: 30,\r\n  top: 100,\r\n  bottom: 40,\r\n  width: 240,\r\n  overflow: 'auto',\r\n  background: '#f2f2f2',\r\n  padding: 10,\r\n  zIndex: 100,\r\n}\r\n\r\nconst modeList = [\r\n  { value: 0, text: 'mode=0 (full)' },\r\n  { value: 1, text: 'mode=1 (half)' },\r\n  { value: 2, text: 'mode=2 (child only)' },\r\n  { value: 3, text: 'mode=3 (shallow)' },\r\n]\r\n\r\nfunction getValue(list, value) {\r\n  const [node] = list\r\n  if (!node) return\r\n  value.push(node.id)\r\n  if (node.children) getValue(node.children, value)\r\n}\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const value = []\r\n    getValue(data, value)\r\n\r\n    this.state = { mode: 1, value }\r\n  }\r\n\r\n  handleChange = value => {\r\n    this.setState({ value })\r\n  }\r\n\r\n  handleModeChange = mode => {\r\n    this.setState({ mode, value: [] })\r\n  }\r\n\r\n  renderItem = node => `node ${node.id}`\r\n\r\n  render() {\r\n    const { mode, value } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Radio.Group\r\n          keygen=\"value\"\r\n          value={mode}\r\n          format=\"value\"\r\n          onChange={this.handleModeChange}\r\n          data={modeList}\r\n          renderItem=\"text\"\r\n        />\r\n\r\n        <br />\r\n\r\n        <Tree\r\n          data={data}\r\n          defaultExpanded={['0', '2']}\r\n          keygen=\"id\"\r\n          mode={mode}\r\n          onChange={this.handleChange}\r\n          renderItem={this.renderItem}\r\n          value={value}\r\n        />\r\n\r\n        <div style={resultStyle}>\r\n          Current select value:\r\n          <pre style={{ background: '#f2f2f2' }}>{JSON.stringify(value, null, 2)}</pre>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"},770:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return h});var n=t(4),d=t.n(n),n=t(5),r=t.n(n),n=t(2),i=t.n(n),n=t(6),l=t.n(n),n=t(7),a=t.n(n),n=t(3),o=t.n(n),n=t(9),c=t.n(n),n=t(1),s=t.n(n),u=t(34),f=t(223);function p(t){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var e,n=o()(t);return n=r?(e=o()(this).constructor,Reflect.construct(n,arguments,e)):n.apply(this,arguments),a()(this,n)}}var h=function(e){l()(o,e);var a=p(o);function o(){var e;d()(this,o);for(var n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];return e=a.call.apply(a,[this].concat(t)),c()(i()(e),"handleChange",function(e){console.log(e)}),c()(i()(e),"isDisabled",function(e){return"1-0"===e.id}),c()(i()(e),"renderItem",function(e){return"node ".concat(e.id)}),e}return r()(o,[{key:"render",value:function(){return s.a.createElement(u.I,{data:f.b,defaultExpanded:["1","2"],disabled:this.isDisabled,keygen:"id",onChange:this.handleChange,renderItem:this.renderItem})}}]),o}(n.Component)},771:function(e,n){e.exports="/**\r\n * cn - 禁用\r\n *    -- disabled 为函数时，根据返回结果禁用节点，同时禁用子节点\r\n *    -- disabled 为 true 时，禁用全部节点\r\n * en - disabled\r\n *    -- When the disabled property is a function, disable the node and its child nodes according to the returned result.\r\n *    -- When the disabled property is true, disable all nodes.\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Tree } from 'ethan/index'\r\nimport data from 'doc/data/tree'\r\n\r\nexport default class extends Component {\r\n  handleChange = value => {\r\n    console.log(value)\r\n  }\r\n\r\n  isDisabled = node => node.id === '1-0'\r\n\r\n  renderItem = node => `node ${node.id}`\r\n\r\n  render() {\r\n    return (\r\n      <Tree\r\n        data={data}\r\n        defaultExpanded={['1', '2']}\r\n        disabled={this.isDisabled}\r\n        keygen=\"id\"\r\n        onChange={this.handleChange}\r\n        renderItem={this.renderItem}\r\n      />\r\n    )\r\n  }\r\n}\r\n"},772:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return h});var n=t(4),r=t.n(n),n=t(5),a=t.n(n),n=t(2),o=t.n(n),n=t(6),d=t.n(n),n=t(7),i=t.n(n),n=t(3),l=t.n(n),n=t(9),c=t.n(n),n=t(1),s=t.n(n),u=t(34),f=t(223);function p(t){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var e,n=l()(t);return n=r?(e=l()(this).constructor,Reflect.construct(n,arguments,e)):n.apply(this,arguments),i()(this,n)}}var h=function(e){d()(t,e);var n=p(t);function t(e){var a;return r()(this,t),a=n.call(this,e),c()(o()(a),"handleDrop",function(e,n,t,r){console.log(e,n,t,r),a.setState({data:e})}),c()(o()(a),"renderItem",function(e){return s.a.createElement("div",null,s.a.createElement("span",null,"node "),s.a.createElement("span",{id:"node-id-".concat(e.id)},e.text))}),a.state={data:f.b},a.defaultExpanded=["1"],a}return a()(t,[{key:"render",value:function(){return s.a.createElement(u.I,{data:this.state.data,keygen:"id",defaultExpanded:this.defaultExpanded,onDrop:this.handleDrop,renderItem:this.renderItem})}}]),t}(n.Component)},773:function(e,n){e.exports="/**\r\n * cn - 拖动\r\n *    -- 设置 onDrop 属性可以拖动节点，设置 dragSibling 限制兄弟节点之间拖动\r\n * en - Drag\r\n *    -- Set the onDrop property to drag nodes.\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Tree } from 'ethan/index'\r\nimport tree from 'doc/data/tree'\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { data: tree }\r\n    this.defaultExpanded = ['1']\r\n  }\r\n\r\n  handleDrop = (data, key, targetKey, position) => {\r\n    console.log(data, key, targetKey, position)\r\n    this.setState({ data })\r\n  }\r\n\r\n  renderItem = node => (\r\n    <div>\r\n      <span>node </span>\r\n      <span id={`node-id-${node.id}`}>{node.text}</span>\r\n    </div>\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <Tree\r\n        data={this.state.data}\r\n        keygen=\"id\"\r\n        defaultExpanded={this.defaultExpanded}\r\n        onDrop={this.handleDrop}\r\n        renderItem={this.renderItem}\r\n      />\r\n    )\r\n  }\r\n}\r\n"},774:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return h});var n=t(4),r=t.n(n),n=t(5),a=t.n(n),n=t(2),o=t.n(n),n=t(6),d=t.n(n),n=t(7),i=t.n(n),n=t(3),l=t.n(n),n=t(9),c=t.n(n),n=t(1),s=t.n(n),u=t(34),f=t(223);function p(t){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var e,n=l()(t);return n=r?(e=l()(this).constructor,Reflect.construct(n,arguments,e)):n.apply(this,arguments),i()(this,n)}}var h=function(e){d()(t,e);var n=p(t);function t(e){var a;return r()(this,t),a=n.call(this,e),c()(o()(a),"handleDrop",function(e,n,t,r){console.log(e,n,t,r),a.setState({data:e})}),c()(o()(a),"renderItem",function(e){return s.a.createElement("div",null,s.a.createElement("span",null,"node "),s.a.createElement("span",{id:"node-id-".concat(e.id)},e.text))}),a.state={data:f.b},a.defaultExpanded=["1"],a}return a()(t,[{key:"render",value:function(){return s.a.createElement(u.I,{data:this.state.data,keygen:"id",defaultExpanded:this.defaultExpanded,onDrop:this.handleDrop,dragImageSelector:function(e){return"#node-id-".concat(e.id)},dragImageStyle:{color:"red"},renderItem:this.renderItem,dragHoverExpand:!0})}}]),t}(n.Component)},775:function(e,n){e.exports="/**\r\n * cn - 设置拖动样式\r\n *    -- 可以通过 dragImageSelector, dragImageStyle, dragHoverExpand定义一些拖动的设置\r\n * en - Set the drag style\r\n *    -- Some drag settings can be defined by dragImageSelector, dragImageStyle, dragHoverExpand\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Tree } from 'ethan/index'\r\nimport tree from 'doc/data/tree'\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { data: tree }\r\n    this.defaultExpanded = ['1']\r\n  }\r\n\r\n  handleDrop = (data, key, targetKey, position) => {\r\n    console.log(data, key, targetKey, position)\r\n    this.setState({ data })\r\n  }\r\n\r\n  renderItem = node => (\r\n    <div>\r\n      <span>node </span>\r\n      <span id={`node-id-${node.id}`}>{node.text}</span>\r\n    </div>\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <Tree\r\n        data={this.state.data}\r\n        keygen=\"id\"\r\n        defaultExpanded={this.defaultExpanded}\r\n        onDrop={this.handleDrop}\r\n        dragImageSelector={d => `#node-id-${d.id}`}\r\n        dragImageStyle={{ color: 'red' }}\r\n        renderItem={this.renderItem}\r\n        dragHoverExpand\r\n      />\r\n    )\r\n  }\r\n}\r\n"},776:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return r});var n=t(23),a=t.n(n),n=t(4),o=t.n(n),n=t(5),d=t.n(n),n=t(2),i=t.n(n),n=t(6),l=t.n(n),n=t(7),c=t.n(n),n=t(3),s=t.n(n),n=t(9),u=t.n(n),n=t(1),f=t.n(n),p=t(20),h=t(34);function m(t){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var e,n=s()(t);return n=r?(e=s()(this).constructor,Reflect.construct(n,arguments,e)):n.apply(this,arguments),c()(this,n)}}var g=["0","1","2","3","4"].map(function(e){return{id:e}}),x=function(){return Array.from({length:Math.round(4*Math.random())},function(e,n){return n})},r=function(e){l()(r,e);var t=m(r);function r(e){var n;return o()(this,r),n=t.call(this,e),u()(i()(n),"loader",function(e){var r=e.split(",");setTimeout(function(){n.setState(Object(p.a)(function(e){var t=e.data;r.forEach(function(n,e){t=t.find(function(e){return e.id===n}),e<r.length-1&&(t=t.children)}),t.children=a()(x().map(function(e){return{id:"".concat(t.id,"-").concat(e)}}))}))},500)}),u()(i()(n),"keyGenerator",function(e,n){return"".concat(n,",").concat(e.id).replace(/^,/,"")}),u()(i()(n),"handleChange",function(e){return n.setState({value:e})}),u()(i()(n),"renderItem",function(e){return"node ".concat(e.id)}),n.state={data:g,value:[]},n}return d()(r,[{key:"render",value:function(){return f.a.createElement(h.I,{data:this.state.data,keygen:this.keyGenerator,loader:this.loader,renderItem:this.renderItem,onChange:this.handleChange,value:this.state.value})}}]),r}(n.Component)},777:function(e,n){e.exports="/**\r\n * cn - 动态加载\r\n *    -- 数据过大，需要动态加载时，可以设置 loader 函数，当展开未定义 children（undefined）的节点时，触发此函数\r\n * en - Lazy load\r\n *    -- Set the loader function to dynamic fetch data. This function is triggered when the undefined child node is expanded.\r\n */\r\nimport React, { Component } from 'react'\r\nimport immer from 'immer'\r\nimport { Tree } from 'ethan/index'\r\n\r\nconst initData = ['0', '1', '2', '3', '4'].map(i => ({ id: i }))\r\nconst createRange = () => Array.from({ length: Math.round(Math.random() * 4) }, (_, i) => i)\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { data: initData, value: [] }\r\n  }\r\n\r\n  loader = key => {\r\n    const path = key.split(',')\r\n\r\n    setTimeout(() => {\r\n      this.setState(\r\n        immer(draft => {\r\n          let { data } = draft\r\n          path.forEach((pid, i) => {\r\n            data = data.find(d => d.id === pid)\r\n            if (i < path.length - 1) data = data.children\r\n          })\r\n          data.children = [...createRange().map(i => ({ id: `${data.id}-${i}` }))]\r\n        })\r\n      )\r\n    }, 500)\r\n  }\r\n\r\n  keyGenerator = (node, parentKey) => `${parentKey},${node.id}`.replace(/^,/, '')\r\n\r\n  handleChange = value => this.setState({ value })\r\n\r\n  renderItem = node => `node ${node.id}`\r\n\r\n  render() {\r\n    return (\r\n      <Tree\r\n        data={this.state.data}\r\n        keygen={this.keyGenerator}\r\n        loader={this.loader}\r\n        renderItem={this.renderItem}\r\n        onChange={this.handleChange}\r\n        value={this.state.value}\r\n      />\r\n    )\r\n  }\r\n}\r\n"},778:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return r});var n=t(4),a=t.n(n),n=t(5),o=t.n(n),n=t(2),d=t.n(n),n=t(6),i=t.n(n),n=t(7),l=t.n(n),n=t(3),c=t.n(n),n=t(9),s=t.n(n),n=t(1),u=t.n(n),f=t(223);function p(t){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}();return function(){var e,n=c()(t);return n=r?(e=c()(this).constructor,Reflect.construct(n,arguments,e)):n.apply(this,arguments),l()(this,n)}}var r=function(e){i()(r,e);var t=p(r);function r(e){var n;return a()(this,r),n=t.call(this,e),s()(d()(n),"toggle",function(){n.setState({expand:!n.state.expand})}),n.state={expand:!1},n}return o()(r,[{key:"render",value:function(){var e=this.state.expand;return u.a.createElement("div",null,"Current node count: ",f.a.length,". ",u.a.createElement("a",{onClick:this.toggle},e?"Collapse":"Expand"," Code"),u.a.createElement("pre",{style:{display:e?"block":"none"}},JSON.stringify(f.b,null,2)))}}]),r}(n.Component)},779:function(e,n){e.exports="import React, { Component } from 'react'\r\nimport data, { allIds } from 'doc/data/tree'\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { expand: false }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({ expand: !this.state.expand })\r\n  }\r\n\r\n  render() {\r\n    const { expand } = this.state\r\n    return (\r\n      <div>\r\n        Current node count: {allIds.length}. <a onClick={this.toggle}>{expand ? 'Collapse' : 'Expand'} Code</a>\r\n        <pre style={{ display: expand ? 'block' : 'none' }}>{JSON.stringify(data, null, 2)}</pre>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"},904:function(e,n,t){"use strict";t.r(n);var r=t(8),a=t.n(r),o=t(1),d=t.n(o),i=t(215),l=t(216),c=t(35),r=t(756),o=t.n(r),r=t(757),r=t.n(r),s=Object(c.b)(o.a,r.a),u=[{name:"01-base",title:Object(c.b)("基本用法 \n 基础的 Tree 用法","Base \n Basic usage of Tree"),component:t(758).default,rawText:t(759)},{name:"02-icon",title:Object(c.b)("图标 \n 在 renderItem 中根据状态展示不同的图标","Icons \n Display different icon in the renderItem."),component:t(760).default,rawText:t(761)},{name:"03-click",title:Object(c.b)("点击事件 \n 设置 onClick 属性监听节点点击","Click \n Set the onClick property to listen the node click."),component:t(762).default,rawText:t(763)},{name:"04-noline",title:Object(c.b)("无连接线 \n 设置 line 为 false，隐藏连接线","Line \n Set the line property to false to hid the connecting line."),component:t(764).default,rawText:t(765)},{name:"05-expanded",title:Object(c.b)("控制展开 \n 受控的展开（此示例数据量太大，第一次全部展开会比较慢）","Expanded \n Controlled expansion (Because the data in this example is too large, it will be slower for the first time.)"),component:t(766).default,rawText:t(767)},{name:"06-change",title:Object(c.b)("可选择 \n 选中值取值提供了 4 种模式 \n 0: 只返回完全选中的节点，包含父节点 \n 1: 返回全部选中的节点和半选中的父节点 \n 2: 只返回选中的子节点 \n 3: 如果父节点选中，只返回父节点","onChange \n Selected values provide 4 modes \n 0: Return only the fully selected node, including the parent node. \n 1: Return the fully selected nodes and semi-selected parent nodes. \n 2: Return only the selected child node. \n 3: Return only the parent node, if the parent node is selected."),component:t(768).default,rawText:t(769)},{name:"07-disabled",title:Object(c.b)("禁用 \n disabled 为函数时，根据返回结果禁用节点，同时禁用子节点 \n disabled 为 true 时，禁用全部节点","disabled \n When the disabled property is a function, disable the node and its child nodes according to the returned result. \n When the disabled property is true, disable all nodes."),component:t(770).default,rawText:t(771)},{name:"08-drag",title:Object(c.b)("拖动 \n 设置 onDrop 属性可以拖动节点，设置 dragSibling 限制兄弟节点之间拖动","Drag \n Set the onDrop property to drag nodes."),component:t(772).default,rawText:t(773)},{name:"08-styledrag",title:Object(c.b)("设置拖动样式 \n 可以通过 dragImageSelector, dragImageStyle, dragHoverExpand定义一些拖动的设置","Set the drag style \n Some drag settings can be defined by dragImageSelector, dragImageStyle, dragHoverExpand"),component:t(774).default,rawText:t(775)},{name:"09-lazyload",title:Object(c.b)("动态加载 \n 数据过大，需要动态加载时，可以设置 loader 函数，当展开未定义 children（undefined）的节点时，触发此函数","Lazy load \n Set the loader function to dynamic fetch data. This function is triggered when the undefined child node is expanded."),component:t(776).default,rawText:t(777)},{name:"data",title:Object(c.b)("",""),component:t(778).default,rawText:t(779)}];n.default=Object(i.a)(function(e){return d.a.createElement(l.a,a()({},e,{codes:void 0,source:s,examples:u}))})}}]);