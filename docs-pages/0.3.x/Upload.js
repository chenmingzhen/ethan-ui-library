(self.webpackChunkEthanDoc=self.webpackChunkEthanDoc||[]).push([[806],{52756:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return d}});var r=t(67154),a=t.n(r),n=t(24698),o=t.n(n),r=t(69048),l=t(85993),n=t(39174),i=(0,n.default)("# Upload\r\n\r\n<example />\r\n\r\n## API\r\n\r\n### Upload\r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| accept | string | 无 | 上传文件类型, 和标准一致, 详见[accept](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept) |\r\n| action | string | 必填 | 上传地址 |\r\n| children | ReactNode | 必填 | 上传占位内容 |\r\n| className | string | 无 | 扩展className |\r\n| defaultValue | any[] | 无 | 默认值 |\r\n| headers | object | 无 | 请求头部信息 |\r\n| htmlName | string | 无 | 服务端接收的 filename，不填使用 name |\r\n| limit | number | 100 | 最大上传文件数 |\r\n| disabled | boolean | false | 是否禁用上传行为 | \r\n| name | string | 无 | Form 内存取数据的 key |\r\n| request | (options: object) => void | 无 | 自定义上传方法<br /> options: 上传的配置 |\r\n| onChange | (values: any[]) => void | 无 | 值改变回调(上传成功，删除)<br />values: 数组, 其每个值是 onSuccess 的返回值 |\r\n| onSuccess | (res: string, file: File, data: any, xhr: any) => any | 无 | 上传成功回调，返回结果作为新的 value<br />res: 上传接口返回结果<br />file: 选择的文件<br />data: 请求的数据<br />xhr: 返回的 response |\r\n| onHttpError | (xhr: any) => string | 无 | 上传失败时回调，返回结果作为错误内容提示 |\r\n| params | object | 无 | 提交到服务端的额外参数 |\r\n| recoverAble | boolean | false | 是否可以恢复已删除的value |\r\n| renderResult | (data: any) => ReactNode | a => a | 结果展示 |\r\n| validator | object | 无 | 上传前文件校验 |\r\n| value | any[] | \\[] | defaultValue 和 value 可以同时设置，defaultValue 会被value覆盖<br />在Form中，value会被表单接管，value无效 |\r\n| withCredentials | boolean | false | 是否携带 cookie |\r\n| multiple | boolean | false | 是否支持多选文件 |\r\n| renderContent | (res: any, value: any, index: number, values: any[]) => ReactNode | - | 自定义结果的内容 |\r\n| validatorHandle | (error: any, file: File) => boolean \\| boolean | false | 是否处理校验失败的情况, 如果提供一个函数, 则以函数的返回值判断是否处理此 error |\r\n| drop | boolean | false | 是否开启拖拽上传文件 |\r\n| filesFilter | (fileList: any[]) => boolean | 无 | 文件选中后的筛选，用户可自定义最终需要上传的文件列表<br />需返回一个新的文件列表 |\r\n| onErrorRemove | (xhr: XMLHttpRequest, file: Blob) => void | 无 | 上传失败文件删除之后的回调 |\r\n| forceAccept | string | 无 | 在使用时关闭了 accept 提供的文件类型过滤后，强制对文件类型进行校验（值同accept） |\r\n| showUploadList | boolean | true | 是否展示上传列表 |\r\n\r\n\r\n### Upload.Image\r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| children | ReactNode | 无 | 上传按钮内容，可为空 |\r\n| renderResult | (data: any) => ReactNode | a => a | 返回图片 url 链接地址 |\r\n| onErrorRemove | (xhr: XMLHttpRequest, file: Blob) => void | none | 上传失败图片删除之后的回调 |\r\n| width | number | 80 | 图片宽度 |\r\n| height | number | 80 | 图片高度 |\r\n\r\n### Upload.Button\r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| type | 'primary' \\| success' \\| 'info' \\| 'warning' \\| 'danger' | primary | 按钮类型 |\r\n| placeholder | ReactNode | 无 | 按钮默认内容 |\r\n| loading | ReactNode | 无 | 上传中按钮的内容，如果是字符串默认会有spin loading |\r\n\r\n\r\n### UploadOptions \r\n\r\n| 属性 | 类型 | 默认值 | 说明 |\r\n| --- | --- | --- | --- |\r\n| file |  File | 无 |  传入的文件 |\r\n| onLoad | function | 无 | 上传事件 |\r\n| onError | function | 无| 上传出错事件(props 中为 onHttpError) |\r\n| onProgress | function | 无 | 上传中进度 |\r\n| onSuccess | function | 无 | 上传成功事件 |\r\n| params | object | 无 | 上传参数 |\r\n| onStart | function | 无 | 开始上传事件 |\r\n| headers | object | 无 | 请求头部信息 |\r\n\r\n\r\n### validator 属性\r\n\r\n| 属性 | 类型 | 说明 |\r\n| --- | --- | --- |\r\n| ext | func(string):Error | 判断后缀名，传入参数为文件后缀，校验失败返回 Error |\r\n| size | func(number):Error | 判断文件大小，校验失败返回 Error |\r\n| imageSize | func(Image):Error | 只对 Image 有效，判断图片尺寸，校验失败返回 Error |\r\n| customValidator | func(File):Error | 自定义校验 |\r\n","# Upload\r\n\r\n<example />\r\n\r\n## API\r\n\r\n### Upload\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| accept | string | none | The type of the upload file, same as the standard,See details [accept](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept)  |\r\n| action | string | required | The address for uploading |\r\n| children | ReactNode | required | Upload placeholder |\r\n| className | string | none | Extend className |\r\n| defaultValue | any[] | -  | default value |\r\n| headers | object | none | Request headers |\r\n| htmlName | string | none | The filename received by the server. If it is not filled in, use the name. |\r\n| limit | number | 100 | Maximum number of uploaded files |\r\n| disabled | boolean | false | disabled upload action | \r\n| name | string | none | The key access data in the Form  |\r\n| request | (options: object) => void | - | Custom upload method<br /> options: the options of upload |\r\n| onChange | (values: any[]) => void | none | The callback function when the value is changing(Upload successfully, delete)<br />values: Array, the value is the onSuccess returns |\r\n| onSuccess |  (res: string, file: File, data: any, xhr: any) => any | none | The callback function when to upload successfully. The returned result is as the new value. <br />res: the result that the upload interface returns<br />file: selected file<br /> data: the request data<br /> xhr: reponse |\r\n| onHttpError | (xhr: any) => string | none | The callback function when to upload unsuccessfully. The returned result is as the error message. |\r\n| params | object | none | Additional parameters submitted to the server |\r\n| recoverAble | boolean | true | Whether to recover deleted values. |\r\n| renderResult | (data: any) => ReactNode | a => a | Display results |\r\n| validator | object | none | Check file before uploading |\r\n| value | any[] | \\[] | value |\r\n| withCredentials | boolean | false | Whether to take the cookie |\r\n| multiple | boolean | false | Whether multi-select files are supported |\r\n| renderContent | (res: any, value: any, index: number, values: any[]) => ReactNode | - | Custom content of result  | \r\n| validatorHandle | (error: any, file: File) => boolean \\| boolean  | true | Whether to handle the case of validation failure, if a function is provided, it is judged by the return value of the function. |\r\n| drop | boolean | false | drop to update |\r\n| filesFilter | (fileList: any[]) => boolean | none | Filter after file selection, users can customize the list of files that need to be uploaded eventually<br />Need to return a new file list |\r\n| onErrorRemove | (xhr: XMLHttpRequest, file: Blob) => void | none | remove update failed callback |\r\n| forceAccept | string | none | After disabled the file type filtering provided by accept, it is mandatory to check the file type, value same as accept |\r\n| showUploadList | boolean | true | show upload list |\r\n\r\n### Upload.Image\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| children | ReactNode | none | The content of the upload button. It can be empty. |\r\n| renderResult | (data: any) => ReactNode | a => a | Return the link address of the url of the image.|\r\n| onErrorRemove | (xhr: XMLHttpRequest, file: Blob) => void | none | remove update failed callback |\r\n| width | number | 80 | image width |\r\n| height | number | 80 | image height |\r\n\r\n### Upload.Button\r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| type | string | primary | options: \\['primary', success', 'info', 'warning', 'danger'\\] |\r\n| placeholder | ReactNode | none | button default content |\r\n| loading | ReactNode | none | content of uploading, will have spin if a string |\r\n\r\n\r\n### UploadOptions \r\n\r\n| Property | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| file |  File | - |  the file |\r\n| onLoad | function | - | the event of uploading |\r\n| onError | function | - | the event of upload fail(in props is onHttpError) |\r\n| onProgress | function | - | the event of uploading progress |\r\n| onSuccess | function | - | the event of upload successing |\r\n| params | object | - | the request params |\r\n| onStart | function | - | the event of start upload |\r\n| headers | object | - | the request header |\r\n\r\n### Validator\r\n\r\n| Property | Type | Description |\r\n| --- | --- | --- |\r\n| ext | func(string):Error | Judge the file extension, return the Error when the verification fails. |\r\n| size | func(number):Error | Judge the size of the file and return the Error when the verification fails. |\r\n| imageSize | func(Image):Error | It is only valid for Image to determine the size of images and return the Error when the verification fails. |\r\n| customValidator | func(File):Error | custom validator |\r\n"),u=[{name:"01-basex",title:(0,n.default)("基本用法 \n 基础的文件上传, onSuccess 的返回值会作为 value 传给 onChange","Base \n Basic usage for uploading file, the onSuccess's returns will be the onChange params"),component:t(76104).Z,rawText:t(5598).Z},{name:"01-onChangex",title:(0,n.default)("自定义结果 \n 默认展示的结果和 value 里面所存储的值是一样的, 如果有需求需要, 可以用 renderResult 自行处理","Custom result \n The result of the default display is the same as the value stored in the value. If there is a need, you can use the renderResult to handle it yourself."),component:t(36632).Z,rawText:t(3984).Z},{name:"02-imagex",title:(0,n.default)("上传图片 \n 使用 Upload.Image 处理带预览的图片上传","Image \n Use Upload.Image to upload and preview images."),component:t(70718).Z,rawText:t(2328).Z},{name:"02-show-imagex",title:(0,n.default)("自定义结果内容 \n 使用  renderContent 可以自定义上传之后的图片结果.","Custom result content \n Use renderContent to customize the image results after uploading."),component:t(70863).Z,rawText:t(75119).Z},{name:"03-buttonx",title:(0,n.default)("按钮上传 \n 使用 Upload.Button 展示单个文件的上传进度","Button \n Use Upload.Button to show the upload progress of individual files"),component:t(71633).Z,rawText:t(61950).Z},{name:"04-validatorx",title:(0,n.default)("校验 \n 通过 validator.imageSize 校验图片长宽，本例为 200px * 100px","Validator \n Set validator.imageSize to validate the width and height of the image."),component:t(33956).Z,rawText:t(4881).Z},{name:"05-filesizex",title:(0,n.default)("文件大小 \n 文件大小校验，本例为 10KB"," \n Set validator.size to validate the size of the file. This example is 10KB."),component:t(89324).Z,rawText:t(38398).Z},{name:"06-errorx",title:(0,n.default)("异常处理 \n onHttpError 用来处理上传到服务器返回的异常","Error \n Set onHttpError to handle exceptions returned by uploading to the server."),component:t(79411).Z,rawText:t(24910).Z},{name:"07-recoverx",title:(0,n.default)("恢复删除 \n 设置 recoverAble 为 true，点击删除后，文件会标记为已删除，可以通过恢复图标恢复","Recover \n Set reconverAble to true, Clicking delete icon will not remove the file, but will mark it as deleted."),component:t(81168).Z,rawText:t(53970).Z},{name:"08-requestx",title:(0,n.default)("自定义上传 \n 通过 request 函数，替代默认上传方法","Custom Request \n Set request property to use your own XMLHttpRequest."),component:t(70012).Z,rawText:t(17082).Z},{name:"09-zipx",title:(0,n.default)(" \n 此事例演示通过自定义函数压缩文件后上传"," \n Zip file and upload."),component:t(27208).Z,rawText:t(8832).Z},{name:"10-defaultValuex",title:(0,n.default)("默认值 \n 默认值示例","defaultValue \n defaultValue example"),component:t(97308).Z,rawText:t(10653).Z},{name:"11-draggerx",title:(0,n.default)("拖拽上传 \n 设置 drop 来支持拖拽上传","Drag and Drop \n set drop to Drag files to upload."),component:t(83179).Z,rawText:t(43843).Z}],d=(0,r.default)(function(e){return o().createElement(l.ZP,a()({},e,{codes:void 0,source:i,examples:u}))})},5598:function(e,n){"use strict";n.Z='/**\r\n * cn - 基本用法\r\n *    -- 基础的文件上传, onSuccess 的返回值会作为 value 传给 onChange\r\n * en - Base\r\n *    -- Basic usage for uploading file, the onSuccess\'s returns will be the onChange params\r\n\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Button, FontAwesome } from \'ethan/index\'\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: [],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Upload\r\n        action="/upload/"\r\n        accept="image/*"\r\n        value={this.state.value}\r\n        name="file"\r\n        onSuccess={(res, file) => file.name}\r\n        onChange={v => {\r\n          console.log(v)\r\n          this.setState({ value: v })\r\n        }}\r\n        limit={3}\r\n        style={{ width: 300 }}\r\n      >\r\n        <Button>\r\n          <FontAwesome name="cloud-upload " style={{ marginRight: 4 }} />\r\n          Upload file\r\n        </Button>\r\n      </Upload>\r\n    )\r\n  }\r\n}\r\n'},3984:function(e,n){"use strict";n.Z='/**\r\n * cn - 自定义结果\r\n *    -- 默认展示的结果和 value 里面所存储的值是一样的, 如果有需求需要, 可以用 renderResult 自行处理\r\n * en - Custom result\r\n *    -- The result of the default display is the same as the value stored in the value. If there is a need, you can use the renderResult to handle it yourself.\r\n\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Button, FontAwesome } from \'ethan/index\'\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: [],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Upload\r\n        action="/upload/"\r\n        accept="image/*"\r\n        value={this.state.value}\r\n        name="file"\r\n        renderResult={f => f.name}\r\n        onSuccess={(res, file) => file}\r\n        onChange={v => {\r\n          console.log(v)\r\n          this.setState({ value: v })\r\n        }}\r\n        limit={3}\r\n        style={{ width: 300 }}\r\n      >\r\n        <Button>\r\n          <FontAwesome name="cloud-upload " style={{ marginRight: 4 }} />\r\n          Upload file\r\n        </Button>\r\n      </Upload>\r\n    )\r\n  }\r\n}\r\n'},2328:function(e,n){"use strict";n.Z='/**\r\n * cn - 上传图片\r\n *    -- 使用 Upload.Image 处理带预览的图片上传\r\n * en - Image\r\n *    -- Use Upload.Image to upload and preview images.\r\n */\r\nimport React from \'react\'\r\nimport { Upload } from \'ethan/index\'\r\n\r\nexport default function() {\r\n  return (\r\n    <Upload.Image\r\n      drop\r\n      action="/upload/"\r\n      accept="image/*"\r\n      name="file"\r\n      onSuccess={(res, file, data) => ({ data })}\r\n      renderResult={f => f.data}\r\n      limit={3}\r\n      onStart={f => console.log(f)}\r\n      width={300}\r\n      height={300}\r\n    />\r\n  )\r\n}\r\n'},75119:function(e,n){"use strict";n.Z='/**\r\n * cn - 自定义结果内容\r\n *    -- 使用  renderContent 可以自定义上传之后的图片结果.\r\n * en - Custom result content\r\n *    -- Use renderContent to customize the image results after uploading.\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Message } from \'ethan/index\'\r\n\r\nexport default function() {\r\n  return (\r\n    <Upload.Image\r\n      action="/upload/"\r\n      accept="image/*"\r\n      name="file"\r\n      onSuccess={(res, file, data) => ({ data })}\r\n      renderResult={f => f.data}\r\n      limit={3}\r\n      onStart={f => console.log(f)}\r\n      renderContent={(d, v, i, values) => {\r\n        console.log(d, v, i, values)\r\n        return (\r\n          <div onClick={() => Message.info(\'i am click\')}>\r\n            <img width="100%" src={d} alt="not found" />\r\n          </div>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n'},61950:function(e,n){"use strict";n.Z='/**\r\n * cn - 按钮上传\r\n *    -- 使用 Upload.Button 展示单个文件的上传进度\r\n * en - Button\r\n *    -- Use Upload.Button to show the upload progress of individual files\r\n */\r\nimport React from \'react\'\r\nimport { Upload } from \'ethan/index\'\r\n\r\nexport default function() {\r\n  return (\r\n    <Upload.Button\r\n      action="/upload/"\r\n      name="file"\r\n      onSuccess={(res, file) => file.name}\r\n      loading="正在上传..."\r\n      placeholder="点击上传"\r\n      type="primary"\r\n    />\r\n  )\r\n}\r\n'},4881:function(e,n){"use strict";n.Z="/**\r\n * cn - 校验\r\n *    -- 通过 validator.imageSize 校验图片长宽，本例为 200px * 100px\r\n * en - Validator\r\n *    -- Set validator.imageSize to validate the width and height of the image.\r\n */\r\nimport React from 'react'\r\nimport { Upload,FontAwesome } from 'ethan/index'\r\n\r\nexport default function() {\r\n  return (\r\n    <Upload.Image\r\n      action=\"/upload/\"\r\n      accept=\"image/*\"\r\n      name=\"file\"\r\n      onSuccess={(res, file, data) => ({ data })}\r\n      width={200}\r\n      height={100}\r\n      limit={1}\r\n      renderResult={f => f.data}\r\n      validator={{\r\n        imageSize: img => (img.width !== 200 || img.height !== 100 ? new Error('only allow 200px * 100px') : undefined),\r\n        ext: ext => (['jpg', 'png'].includes(ext) ? undefined : new Error('File extension must be jpg or png')),\r\n      }}\r\n    >\r\n      <div style={{ margin: 'auto', color: '#999', textAlign: 'center' }}>\r\n        <FontAwesome name=\"cloud-upload \" /> Upload Image\r\n        <br />\r\n        Allow size 200 * 100\r\n      </div>\r\n    </Upload.Image>\r\n  )\r\n}\r\n"},38398:function(e,n){"use strict";n.Z='/**\r\n * cn - 文件大小\r\n *    -- 文件大小校验，本例为 10KB\r\n * en -\r\n *    -- Set validator.size to validate the size of the file. This example is 10KB.\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Button, FontAwesome } from \'ethan/index\'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Upload\r\n        action="/upload/"\r\n        accept="image/*"\r\n        multiple\r\n        name="file"\r\n        onSuccess={(res, file) => file.name}\r\n        style={{ width: 300, marginBottom: 30 }}\r\n        validator={{\r\n          size: s => (s > 10240 ? new Error(\'max file size is 10KB\') : undefined),\r\n        }}\r\n        validatorHandle={(error, file) => {\r\n          console.log(error, file)\r\n          return true\r\n        }}\r\n      >\r\n        <Button>\r\n          <FontAwesome name="cloud-upload" /> Upload file\r\n        </Button>\r\n      </Upload>\r\n\r\n      <Upload.Image\r\n        action="//jsonplaceholder.typicode.com/posts"\r\n        accept="image/*"\r\n        multiple\r\n        name="file"\r\n        onSuccess={(res, file, data) => ({ data })}\r\n        validator={{\r\n          size: s => (s > 10240 ? new Error(\'max file size is 10KB\') : undefined),\r\n        }}\r\n        renderResult={f => f.data}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n'},24910:function(e,n){"use strict";n.Z='/**\r\n * cn - 异常处理\r\n *    -- onHttpError 用来处理上传到服务器返回的异常\r\n * en - Error\r\n *    -- Set onHttpError to handle exceptions returned by uploading to the server.\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Button, FontAwesome } from \'ethan/index\'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Upload\r\n        action="/path-no-exist"\r\n        accept="image/*"\r\n        name="file"\r\n        onSuccess={(res, file) => file.name}\r\n        onHttpError={xhr => {\r\n          console.log(xhr)\r\n          if (xhr.status === 404) return \'Url not found.\'\r\n          return \'Upload Fail.\'\r\n        }}\r\n        limit={3}\r\n        style={{ width: 300, marginBottom: 30 }}\r\n      >\r\n        <Button>\r\n          <FontAwesome name="cloud-upload" /> Upload file\r\n        </Button>\r\n      </Upload>\r\n\r\n      <Upload.Image\r\n        action="/path-no-exist"\r\n        accept="image/*"\r\n        name="file"\r\n        onSuccess={(res, file, data) => ({ data })}\r\n        onHttpError={xhr => {\r\n          console.log(xhr)\r\n          if (xhr.status === 404) return \'Url not found.\'\r\n          return \'Upload Fail.\'\r\n        }}\r\n        renderResult={f => f.data}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n'},53970:function(e,n){"use strict";n.Z='/**\r\n * cn - 恢复删除\r\n *    -- 设置 recoverAble 为 true，点击删除后，文件会标记为已删除，可以通过恢复图标恢复\r\n * en - Recover\r\n *    -- Set reconverAble to true, Clicking delete icon will not remove the file, but will mark it as deleted.\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Button, FontAwesome } from \'ethan/index\'\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <Upload\r\n        action="/upload/"\r\n        accept="image/*"\r\n        multiple\r\n        limit={2}\r\n        name="file"\r\n        recoverAble\r\n        onSuccess={(res, file) => file.name}\r\n        style={{ width: 300, marginBottom: 30 }}\r\n      >\r\n        <Button>\r\n          <FontAwesome name="cloud-upload" /> Upload file\r\n        </Button>\r\n      </Upload>\r\n\r\n      <Upload.Image\r\n        action="/upload/"\r\n        accept="image/*"\r\n        multiple\r\n        name="file"\r\n        limit={1}\r\n        recoverAble\r\n        onSuccess={(res, file, data) => ({ data })}\r\n        renderResult={f => f.data}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n'},17082:function(e,n){"use strict";n.Z="/**\r\n * cn - 自定义上传\r\n *    -- 通过 request 函数，替代默认上传方法\r\n * en - Custom Request\r\n *    -- Set request property to use your own XMLHttpRequest.\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan/index'\r\n\r\nconst request = options => {\r\n  const { file, onLoad, onError, onProgress } = options\r\n  const xhr = new XMLHttpRequest()\r\n  xhr.open('post', '/upload/')\r\n\r\n  const data = new FormData()\r\n  data.append('test', file)\r\n  xhr.upload.onprogress = onProgress\r\n  xhr.onload = () => onLoad(xhr)\r\n  xhr.onerror = () => onError({ statusText: 'error message' })\r\n  xhr.send(data)\r\n\r\n  return xhr\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Upload\r\n      accept=\"image/*\"\r\n      onSuccess={(res, file) => ({ name: `upload ${file.name}` })}\r\n      limit={3}\r\n      style={{ width: 300 }}\r\n      request={request}\r\n      renderResult={d => d.name}\r\n    >\r\n      <Button>\r\n        <FontAwesome name=\"cloud-upload\" /> Upload file\r\n      </Button>\r\n    </Upload>\r\n  )\r\n}\r\n"},8832:function(e,n){"use strict";n.Z="/**\r\n * cn -\r\n *    -- 此事例演示通过自定义函数压缩文件后上传\r\n * en -\r\n *    -- Zip file and upload.\r\n */\r\nimport React from 'react'\r\nimport { Upload, Button, FontAwesome } from 'ethan/index'\r\n\r\nconst request = options => {\r\n  const { file, onLoad, onError, onProgress } = options\r\n\r\n  const xhr = new XMLHttpRequest()\r\n  xhr.open('post', '/upload/')\r\n\r\n  const zip = new window.JSZip()\r\n  zip.file(file.name, file)\r\n  zip\r\n    .generateInternalStream({ type: 'blob' })\r\n    .accumulate(e => {\r\n      onProgress(e, 'zipping...')\r\n    })\r\n    .then(content => {\r\n      const zipFile = new File([content], `${file.name}.zip`)\r\n      const data = new FormData()\r\n      data.append('file', zipFile)\r\n      xhr.upload.onprogress = m => onProgress(m, 'sending...')\r\n      xhr.onload = () => onLoad(xhr)\r\n      xhr.onerror = () => onError({ statusText: 'error message' })\r\n      xhr.send(data)\r\n    })\r\n\r\n  return xhr\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Upload\r\n      onSuccess={(res, file) => ({ name: `upload ${file.name}` })}\r\n      limit={3}\r\n      style={{ width: 300 }}\r\n      request={request}\r\n      renderResult={d => d.name}\r\n    >\r\n      <Button>\r\n        <FontAwesome name=\"cloud-upload\" /> Upload file\r\n      </Button>\r\n    </Upload>\r\n  )\r\n}\r\n"},10653:function(e,n){"use strict";n.Z='/**\r\n * cn - 默认值\r\n *    -- 默认值示例\r\n * en - defaultValue\r\n *    -- defaultValue example\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Button, FontAwesome } from \'ethan/index\'\r\n\r\nexport default function() {\r\n  const defaultValue = [\r\n    {\r\n      name: \'test file.png\',\r\n      url: \'../../images/ui.png\',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div>\r\n      <Upload\r\n        action="//jsonplaceholder.typicode.com/posts"\r\n        accept="image/*"\r\n        multiple\r\n        limit={2}\r\n        name="file"\r\n        onSuccess={(res, file) => ({ name: file.name })}\r\n        style={{ width: 300, marginBottom: 30 }}\r\n        defaultValue={defaultValue}\r\n        renderResult={f => f.name}\r\n      >\r\n        <Button>\r\n          <FontAwesome name="cloud-upload" /> Upload file\r\n        </Button>\r\n      </Upload>\r\n\r\n      <Upload.Image\r\n        action="/upload/"\r\n        accept="image/*"\r\n        multiple\r\n        name="file"\r\n        limit={1}\r\n        recoverAble\r\n        onSuccess={(res, file, data) => ({ url: data })}\r\n        renderResult={f => f.url}\r\n        defaultValue={defaultValue}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n'},43843:function(e,n){"use strict";n.Z='/**\r\n * cn - 拖拽上传\r\n *    -- 设置 drop 来支持拖拽上传\r\n * en - Drag and Drop\r\n *    -- set drop to Drag files to upload.\r\n */\r\nimport React from \'react\'\r\nimport { Upload, Button, FontAwesome } from \'ethan/index\'\r\n\r\nfunction DraggerImage() {\r\n  return (\r\n    <Upload.Image\r\n      action="/upload/"\r\n      accept="image/*"\r\n      name="file"\r\n      onSuccess={(res, file, data) => ({ data })}\r\n      renderResult={f => f.data}\r\n      limit={3}\r\n      onStart={f => console.log(f)}\r\n      width={250}\r\n      drop\r\n    >\r\n      <div style={{ textAlign: \'center\', width: \'100%\', padding: 20 }}>\r\n        <FontAwesome style={{ color: \'#409dfd\', fontSize: 20 }} name="image" />\r\n        <br />\r\n        Click or Drag image to upload\r\n      </div>\r\n    </Upload.Image>\r\n  )\r\n}\r\n\r\nfunction DraggerFile() {\r\n  return (\r\n    <Upload\r\n      action="/upload/"\r\n      multiple\r\n      name="file"\r\n      onSuccess={(res, file) => file.name}\r\n      limit={3}\r\n      style={{ width: 300 }}\r\n      drop\r\n    >\r\n      <Button>\r\n        <FontAwesome name="file" />\r\n        &nbsp; Drop file to upload\r\n      </Button>\r\n    </Upload>\r\n  )\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <div>\r\n      <DraggerImage />\r\n      <br />\r\n      <DraggerFile />\r\n    </div>\r\n  )\r\n}\r\n'},54798:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(70655),a=r.__importStar(t(24698)),o=r.__importDefault(t(94184)),l=r.__importDefault(t(15660));t(62356);var i=t(78502);n.default=function(e){var n=e.language,n=void 0===n?"lang-jsx":n,t=e.onHighLight,e=e.value,r=a.useRef(null);return a.useEffect(function(){var e=r.current;l.default.highlightElement(e,!1,function(){t&&t(e.offsetHeight)})},[]),a.default.createElement("pre",{ref:r,className:o.default(n||"lang-jsx",i.exampleClass("pre"))},a.default.createElement("code",null,e))}},7595:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var m=t(70655),p=m.__importStar(t(24698)),r=m.__importDefault(t(45697)),h=t(79136),g=m.__importDefault(t(22276)),v=m.__importDefault(t(69374)),x=t(78502),E=m.__importDefault(t(54798)),y=p.default.createElement("div",{className:x.exampleClass("placeholder")},p.default.createElement(h.Spin,{size:"54px",name:"four-dots",color:"#53a0fd"}));function a(e){var n=e.component,t=e.id,r=e.name,a=e.rawText,o=e.title,l=p.useRef(null),i=m.__read(p.useState(!1),2),u=i[0],d=i[1],s=m.__read(p.useState(p.createElement(n)),1)[0],e=m.__read(p.useState(),2),c=e[0],f=e[1],i=(m.__read(p.useState(),1)[0],a.replace(/(^|\n|\r)\s*\/\*[\s\S]*?\*\/\s*(?:\r|\n|$)/,"").trim());p.useEffect(function(){l.current&&(l.current.style.height=u?c+"px":"0")},[u]);n=function(e){return p.default.createElement("a",{className:x.exampleClass("toggle"),onClick:function(e){d(!u)}.bind(null,e)},p.default.createElement(g.default,{name:u?"code-close":"code"}))},e=v.default.location.search,a="?example=";if(0===e.indexOf(a)&&(e=e.replace(a,""),r.indexOf(e)<0))return null;r=m.__read(o.split("\n")),e=r[0],r=r.slice(1),e=e&&e.trim();return p.default.createElement(p.Fragment,null,e&&p.default.createElement("h3",{key:"0",id:t},e),p.default.createElement(h.Lazyload,{placeholder:y},p.default.createElement("div",{className:x.exampleClass("_",u&&"showcode")},p.default.createElement("div",{className:x.exampleClass("body")},s),0<o.length&&p.default.createElement("div",{className:x.exampleClass("desc")},r.map(function(e,n){return p.default.createElement("div",{key:n,dangerouslySetInnerHTML:{__html:e}})}),n(!1)),p.default.createElement("div",{ref:l,className:x.exampleClass("code")},p.default.createElement(E.default,{onHighLight:function(e){f(e)},value:i}),n(!0)))))}(n.default=a).propTypes={component:r.default.func.isRequired,id:r.default.string,name:r.default.string,rawText:r.default.string,title:r.default.string.isRequired},a.defaultProps={rawText:""}},71126:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=t(70655),o=a.__importStar(t(24698)),r=a.__importDefault(t(45697)),l=t(78502),t=function(e){var n=e.children,e=a.__read(o.useState(!1),2),t=e[0],r=e[1],e=n.map(function(e){return e.replace(/"fn#fn/g,"").replace(/fn#fn"/g,"").replace(/\\n/g,"\n")}),n=t?"pre":"div";return o.default.createElement("div",{onClick:function(){r(!t)},className:l.markdownClass("console")},o.default.createElement(n,null,e))};t.propTypes={children:r.default.array},t.defaultProps={children:[]},n.default=t},15302:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=t(70655),o=a.__importStar(t(24698)),r=a.__importDefault(t(45697)),l=a.__importDefault(t(21046)),i=a.__importDefault(t(17866));n.default=function(){function e(e){var n=a.__read(o.useState(e.source),2),t=n[0],r=n[1];return o.useEffect(function(){e.loader&&e.loader().then(function(e){r(e.default)})},[]),t?o.default.createElement(l.default,a.__assign({},e,{source:t})):o.default.createElement(i.default,{style:{minHeight:200}})}return e.propTypes={loader:r.default.func,source:r.default.string},e.defaultProps={loader:void 0,source:void 0},o.memo(e)}},21046:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var u=t(70655),d=u.__importStar(t(24698)),r=u.__importDefault(t(45697)),s=u.__importDefault(t(30724)),c=t(73727),f=t(70914),m=t(78502),p=u.__importDefault(t(39174)),h=u.__importDefault(t(54798)),g=u.__importDefault(t(7595)),v=u.__importDefault(t(71126)),x=u.__importDefault(t(30681)),E=/^<code name="([\w|-]+)" /,y=/^<example name="([\w|-]+)"/;function a(e){var n=e.onHeadingSetted,a=e.codes,o=e.examples,e=e.source,t=u.__read(d.useState([]),1)[0],l=u.__read(d.useState({}),1)[0];d.useEffect(function(){n&&n(t)},[]);function i(e){t.push(e)}return d.default.createElement(s.default,{className:m.markdownClass("_"),source:e,renderers:{code:h.default,heading:function(e){var n,t=e.level,r=e.children,a=t+"-"+r[0],o="h"+t;return"object"==typeof r[0]?d.default.createElement(o,null,r):(l[a]||(e="heading-"+(n=t,e=r[0],4===n?f.getUidStr():n+"-"+(e||"").replace(/[\W|-]/g,"-")),2!==t&&3!==t||i({id:e,level:t,children:r}),l[a]=d.default.createElement(o,{id:e},r)),l[a])},html:function(e){if("<example />"===e.value)return function(){if(l.examples)return l.examples;if(!o)return d.default.createElement("div",null);var e=p.default("示例","Example"),n="heading-example-h";return i({id:n,level:2,children:[e]}),l.examples=u.__spreadArray([d.default.createElement("h2",{key:"h",id:n},e)],u.__read(o.map(function(e,n){if(/\d+-/.test(e.name)){var t="heading-"+e.name,r=u.__read(e.title.split("\n"),1)[0];return i({id:t,level:3,children:[r]}),d.default.createElement(g.default,u.__assign({key:n,id:t},e))}}))),l.examples}();var n,t=e.value.match(y);if(t)return n=t[1],e.value.indexOf("noExpand"),l[r="example-"+n]||(t=(o||[]).find(function(e){return e.name===n}),l[r]=t?d.default.createElement(g.default,u.__assign({},t)):null),l[r];if("<br>"===e.value||"<br />"===e.value)return d.default.createElement("br",null);var r=e.value.match(E);return r?(e=r[1],(r=a[e])?u.__spreadArray([d.default.createElement(h.default,{key:"cb",value:r.text})],u.__read(r.log.map(function(e,n){return d.default.createElement(v.default,{key:n},e)}))):(console.error("Code "+e+" not existed"),null)):null},table:x.default,link:function(e){var n=0===e.href.indexOf("http")?"_blank":void 0;return n?d.default.createElement("a",{href:e.href,target:n},e.children):d.default.createElement(c.Link,{to:e.href,target:n},e.children)}}})}(n.default=a).propTypes={children:r.default.oneOfType([r.default.element,r.default.array]),codes:r.default.object,examples:r.default.array,onHeadingSetted:r.default.func,source:r.default.string.isRequired},a.defaultProps={children:null,examples:null,onHeadingSetted:void 0}},85993:function(e,n,t){"use strict";var r=t(70655),a=(r.__importDefault(t(24698)),r.__importDefault(t(15302))),o=(r.__importDefault(t(69048)),a.default());n.ZP=o},69048:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var d=t(70655),s=d.__importStar(t(24698)),c=t(79136),f=t(64744),m=t(78502),p=d.__importDefault(t(69374));n.default=function(u){return function(e){var n=d.__read(s.useState(""),2),r=n[0],a=n[1],o=d.__read(s.useState([]),1)[0],t=e.location.hash,l=f.useUpdate(),n=s.useCallback(function(e){e.forEach(function(e){o.push(e)}),l()},[]),i=s.useCallback(function(){var e;!t||(e=document.querySelector(t))&&setTimeout(function(){e.scrollIntoView()},50)},[t]);s.useEffect(function(){i();function e(){var t,r=document.documentElement.scrollTop,e=o.filter(function(e){return 3===e.level&&e.children[0]});0!==e.length&&(t=e[0].id,e.forEach(function(e){var n=document.querySelector("#"+e.id);n&&n.offsetTop<=r&&(t=e.id)}),a(t))}return document.addEventListener("scroll",e),e(),function(){document.removeEventListener("scroll",e)}},[]);return s.default.createElement("div",{className:m.navClass("_")},s.default.createElement(u,{onHeadingSetted:n}),!e.noNav&&s.default.createElement(c.Sticky,{className:m.navClass("sticky"),top:50},s.default.createElement("div",{className:m.navClass("nav")},o.map(function(e,n){var t=e.children.filter(function(e){return"string"==typeof e});return s.default.createElement("a",{key:n,className:m.navClass("level-"+e.level,r===e.id&&"active"),onClick:function(e){0===p.default.location.search.indexOf("?example=")?p.default.push(p.default.location.pathname+"?example="+e.replace("heading-","")):(p.default.push(p.default.location.pathname+"#"+e),(e=document.getElementById(e))&&e.scrollIntoView())}.bind(null,e.id)},t)}))))}}},30681:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t(70655),a=r.__importDefault(t(24698)),t=r.__importDefault(t(45697));function o(e){var e=e.children,n=r.__spreadArray([],r.__read(e[1].props.children));try{n.sort(function(e,n){return e.props.children[0].props.children[0].localeCompare(n.props.children[0].props.children[0])})}catch(e){console.log("sort fail...")}return a.default.createElement("div",{style:{overflow:"auto"}},a.default.createElement("table",{className:"doc-api-table"},e[0],a.default.cloneElement(e[1],{children:n})))}o.propTypes={children:t.default.any},o.defaultProps={},n.default=o},76104:function(e,n,t){"use strict";var r,a=t(70655),o=a.__importDefault(t(24698)),l=t(79136),a=(r=o.default.Component,a.__extends(i,r),i.prototype.render=function(){var n=this;return o.default.createElement(l.Upload,{action:"/upload/",accept:"image/*",value:this.state.value,name:"file",onSuccess:function(e,n){return n.name},onChange:function(e){console.log(e),n.setState({value:e})},limit:3,style:{width:300}},o.default.createElement(l.Button,null,o.default.createElement(l.FontAwesome,{name:"cloud-upload ",style:{marginRight:4}}),"Upload file"))},i);function i(e){e=r.call(this,e)||this;return e.state={value:[]},e}n.Z=a},36632:function(e,n,t){"use strict";var r,a=t(70655),o=a.__importDefault(t(24698)),l=t(79136),a=(r=o.default.Component,a.__extends(i,r),i.prototype.render=function(){var n=this;return o.default.createElement(l.Upload,{action:"/upload/",accept:"image/*",value:this.state.value,name:"file",renderResult:function(e){return e.name},onSuccess:function(e,n){return n},onChange:function(e){console.log(e),n.setState({value:e})},limit:3,style:{width:300}},o.default.createElement(l.Button,null,o.default.createElement(l.FontAwesome,{name:"cloud-upload ",style:{marginRight:4}}),"Upload file"))},i);function i(e){e=r.call(this,e)||this;return e.state={value:[]},e}n.Z=a},70718:function(e,n,t){"use strict";var r=t(70655).__importDefault(t(24698)),a=t(79136);n.Z=function(){return r.default.createElement(a.Upload.Image,{drop:!0,action:"/upload/",accept:"image/*",name:"file",onSuccess:function(e,n,t){return{data:t}},renderResult:function(e){return e.data},limit:3,onStart:function(e){return console.log(e)},width:300,height:300})}},70863:function(e,n,t){"use strict";var a=t(70655).__importDefault(t(24698)),o=t(79136);n.Z=function(){return a.default.createElement(o.Upload.Image,{action:"/upload/",accept:"image/*",name:"file",onSuccess:function(e,n,t){return{data:t}},renderResult:function(e){return e.data},limit:3,onStart:function(e){return console.log(e)},renderContent:function(e,n,t,r){return console.log(e,n,t,r),a.default.createElement("div",{onClick:function(){return o.Message.info("i am click")}},a.default.createElement("img",{width:"100%",src:e,alt:"not found"}))}})}},71633:function(e,n,t){"use strict";var r=t(70655).__importDefault(t(24698)),a=t(79136);n.Z=function(){return r.default.createElement(a.Upload.Button,{action:"/upload/",name:"file",onSuccess:function(e,n){return n.name},loading:"正在上传...",placeholder:"点击上传",type:"primary"})}},33956:function(e,n,t){"use strict";var r=t(70655).__importDefault(t(24698)),a=t(79136);n.Z=function(){return r.default.createElement(a.Upload.Image,{action:"/upload/",accept:"image/*",name:"file",onSuccess:function(e,n,t){return{data:t}},width:200,height:100,limit:1,renderResult:function(e){return e.data},validator:{imageSize:function(e){return 200!==e.width||100!==e.height?new Error("only allow 200px * 100px"):void 0},ext:function(e){return["jpg","png"].includes(e)?void 0:new Error("File extension must be jpg or png")}}},r.default.createElement("div",{style:{margin:"auto",color:"#999",textAlign:"center"}},r.default.createElement(a.FontAwesome,{name:"cloud-upload "})," Upload Image",r.default.createElement("br",null),"Allow size 200 * 100"))}},89324:function(e,n,t){"use strict";var r=t(70655).__importDefault(t(24698)),a=t(79136);n.Z=function(){return r.default.createElement("div",null,r.default.createElement(a.Upload,{action:"/upload/",accept:"image/*",multiple:!0,name:"file",onSuccess:function(e,n){return n.name},style:{width:300,marginBottom:30},validator:{size:function(e){return 10240<e?new Error("max file size is 10KB"):void 0}},validatorHandle:function(e,n){return console.log(e,n),!0}},r.default.createElement(a.Button,null,r.default.createElement(a.FontAwesome,{name:"cloud-upload"})," Upload file")),r.default.createElement(a.Upload.Image,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",multiple:!0,name:"file",onSuccess:function(e,n,t){return{data:t}},validator:{size:function(e){return 10240<e?new Error("max file size is 10KB"):void 0}},renderResult:function(e){return e.data}}))}},79411:function(e,n,t){"use strict";var r=t(70655).__importDefault(t(24698)),a=t(79136);n.Z=function(){return r.default.createElement("div",null,r.default.createElement(a.Upload,{action:"/path-no-exist",accept:"image/*",name:"file",onSuccess:function(e,n){return n.name},onHttpError:function(e){return console.log(e),404===e.status?"Url not found.":"Upload Fail."},limit:3,style:{width:300,marginBottom:30}},r.default.createElement(a.Button,null,r.default.createElement(a.FontAwesome,{name:"cloud-upload"})," Upload file")),r.default.createElement(a.Upload.Image,{action:"/path-no-exist",accept:"image/*",name:"file",onSuccess:function(e,n,t){return{data:t}},onHttpError:function(e){return console.log(e),404===e.status?"Url not found.":"Upload Fail."},renderResult:function(e){return e.data}}))}},81168:function(e,n,t){"use strict";var r=t(70655).__importDefault(t(24698)),a=t(79136);n.Z=function(){return r.default.createElement("div",null,r.default.createElement(a.Upload,{action:"/upload/",accept:"image/*",multiple:!0,limit:2,name:"file",recoverAble:!0,onSuccess:function(e,n){return n.name},style:{width:300,marginBottom:30}},r.default.createElement(a.Button,null,r.default.createElement(a.FontAwesome,{name:"cloud-upload"})," Upload file")),r.default.createElement(a.Upload.Image,{action:"/upload/",accept:"image/*",multiple:!0,name:"file",limit:1,recoverAble:!0,onSuccess:function(e,n,t){return{data:t}},renderResult:function(e){return e.data}}))}},70012:function(e,n,t){"use strict";function r(e){var n=e.file,t=e.onLoad,r=e.onError,a=e.onProgress,o=new XMLHttpRequest;return o.open("post","/upload/"),(e=new FormData).append("test",n),o.upload.onprogress=a,o.onload=function(){return t(o)},o.onerror=function(){return r({statusText:"error message"})},o.send(e),o}var a=t(70655).__importDefault(t(24698)),o=t(79136);n.Z=function(){return a.default.createElement(o.Upload,{accept:"image/*",onSuccess:function(e,n){return{name:"upload "+n.name}},limit:3,style:{width:300},request:r,renderResult:function(e){return e.name}},a.default.createElement(o.Button,null,a.default.createElement(o.FontAwesome,{name:"cloud-upload"})," Upload file"))}},27208:function(e,n,t){"use strict";function r(e){var t=e.file,r=e.onLoad,a=e.onError,o=e.onProgress,l=new XMLHttpRequest;return l.open("post","/upload/"),(e=new window.JSZip).file(t.name,t),e.generateInternalStream({type:"blob"}).accumulate(function(e){o(e,"zipping...")}).then(function(e){var n=new File([e],t.name+".zip"),e=new FormData;e.append("file",n),l.upload.onprogress=function(e){return o(e,"sending...")},l.onload=function(){return r(l)},l.onerror=function(){return a({statusText:"error message"})},l.send(e)}),l}var a=t(70655).__importDefault(t(24698)),o=t(79136);n.Z=function(){return a.default.createElement(o.Upload,{onSuccess:function(e,n){return{name:"upload "+n.name}},limit:3,style:{width:300},request:r,renderResult:function(e){return e.name}},a.default.createElement(o.Button,null,a.default.createElement(o.FontAwesome,{name:"cloud-upload"})," Upload file"))}},97308:function(e,n,t){"use strict";var r=t(70655).__importDefault(t(24698)),a=t(79136);n.Z=function(){var e=[{name:"test file.png",url:"../../images/ui.png"}];return r.default.createElement("div",null,r.default.createElement(a.Upload,{action:"//jsonplaceholder.typicode.com/posts",accept:"image/*",multiple:!0,limit:2,name:"file",onSuccess:function(e,n){return{name:n.name}},style:{width:300,marginBottom:30},defaultValue:e,renderResult:function(e){return e.name}},r.default.createElement(a.Button,null,r.default.createElement(a.FontAwesome,{name:"cloud-upload"})," Upload file")),r.default.createElement(a.Upload.Image,{action:"/upload/",accept:"image/*",multiple:!0,name:"file",limit:1,recoverAble:!0,onSuccess:function(e,n,t){return{url:t}},renderResult:function(e){return e.url},defaultValue:e}))}},83179:function(e,n,t){"use strict";var r=t(70655).__importDefault(t(24698)),a=t(79136);function o(){return r.default.createElement(a.Upload.Image,{action:"/upload/",accept:"image/*",name:"file",onSuccess:function(e,n,t){return{data:t}},renderResult:function(e){return e.data},limit:3,onStart:function(e){return console.log(e)},width:250,drop:!0},r.default.createElement("div",{style:{textAlign:"center",width:"100%",padding:20}},r.default.createElement(a.FontAwesome,{style:{color:"#409dfd",fontSize:20},name:"image"}),r.default.createElement("br",null),"Click or Drag image to upload"))}function l(){return r.default.createElement(a.Upload,{action:"/upload/",multiple:!0,name:"file",onSuccess:function(e,n){return n.name},limit:3,style:{width:300},drop:!0},r.default.createElement(a.Button,null,r.default.createElement(a.FontAwesome,{name:"file"}),"  Drop file to upload"))}n.Z=function(){return r.default.createElement("div",null,r.default.createElement(o,null),r.default.createElement("br",null),r.default.createElement(l,null))}}}]);